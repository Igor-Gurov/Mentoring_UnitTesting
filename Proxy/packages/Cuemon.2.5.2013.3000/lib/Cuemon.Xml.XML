<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cuemon.Xml</name>
    </assembly>
    <members>
        <member name="T:Cuemon.Xml.Serialization.SerializableOrder">
            <summary>
            Specifies the order of additional serialization information.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Serialization.SerializableOrder.Append">
            <summary>
            The new serialization operation is applied after the original serialization.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Serialization.SerializableOrder.Prepend">
            <summary>
            The new serialization operation is applied before the original serialization.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlElementWrapper">
            <summary>
            Provides ways to override the default XML element name serialization logic used by all Serialize methods on <see cref="T:Cuemon.Xml.Serialization.XmlSerializationUtility"/>.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlWrapper">
            <summary>
            Provides ways to override the default XML naming serialization logic used by all Serialize methods on <see cref="T:Cuemon.Xml.Serialization.XmlSerializationUtility"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlWrapper"/> class.
            </summary>
            <param name="instance">The instance to override normal serialization naming logic.</param>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlWrapper.InstanceName">
            <summary>
            Gets or sets the name of the instance used in XML serialization. Overrides normal serialization logic.
            </summary>
            <value>The name of the instance used in XML serialization.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlWrapper.Data">
            <summary>
            Gets a collection of key/value pairs that provide additional user-defined information about this wrapper object.
            </summary>
            <value>An object that implements the <see cref="T:System.Collections.Generic.IDictionary`2"/> interface and contains a collection of user-defined key/value pairs.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlWrapper.HasMemberReference">
            <summary>
            Gets a value indicating whether this instance has a member reference.
            </summary>
            <value><c>true</c> if this instance has a member reference; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlWrapper.InstanceType">
            <summary>
            Gets the type of the object that this wrapper represents.
            </summary>
            <value>The type of the that this wrapper represents.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlWrapper.MemberReference">
            <summary>
            Gets the member from where <see cref="P:Cuemon.Wrapper`1.Instance"/> was referenced.
            </summary>
            <value>The member from where <see cref="P:Cuemon.Wrapper`1.Instance"/> was referenced.</value>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlElementWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlWrapper"/> class.
            </summary>
            <param name="instance">The instance to override normal serialization naming logic.</param>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlElementWrapper.InstanceName">
            <summary>
            Gets or sets the element name of the instance used in XML serialization. Overrides normal serialization logic.
            </summary>
            <value>The element name of the instance used in XML serialization.</value>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlQualifiedEntity">
            <summary>
            A class designed to help assure qualified names in XML serializations.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.Xml.Serialization.XmlElementAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="attribute">The XML related attribute to extract qualified name information about.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.Xml.Serialization.XmlAttributeAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="attribute">The XML related attribute to extract qualified name information about.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.Xml.Serialization.XmlRootAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="attribute">The XML related attribute to extract qualified name information about.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.Xml.Serialization.XmlAnyElementAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="attribute">The XML related attribute to extract qualified name information about.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="localName">The local name of the entity.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="localName">The local name of the entity.</param>
            <param name="ns">The namespace URI to associate with the entity.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlQualifiedEntity.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> class.
            </summary>
            <param name="prefix">The namespace prefix of the entity.</param>
            <param name="localName">The local name of the entity.</param>
            <param name="ns">The namespace URI to associate with the entity.</param>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlQualifiedEntity.LocalName">
            <summary>
            Gets the local name of the entity.
            </summary>
            <value>The local name of the entity.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlQualifiedEntity.Namespace">
            <summary>
            Gets the namespace URI to associate with the entity.
            </summary>
            <value>The namespace URI to associate with the entity.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlQualifiedEntity.Prefix">
            <summary>
            Gets the namespace prefix of the entity.
            </summary>
            <value>The namespace prefix of the entity.</value>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlWrapperAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlWrapperAttribute"/> class.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.XmlConvertUtility">
            <summary>
            This utility class is designed to make XML based convert operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToXmlElement(System.Exception)">
            <summary>
            Converts the specified <paramref name="exception"/> to an <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to convert into an <see cref="T:System.Xml.XmlElement"/>.</param>
            <returns>An <see cref="T:System.Xml.XmlElement"/> variant of the specified <paramref name="exception"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToXmlElement(System.Exception,System.Text.Encoding)">
            <summary>
            Converts the specified <paramref name="exception"/> to an <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to convert into an <see cref="T:System.Xml.XmlElement"/>.</param>
            <param name="encoding">The preferred encoding to apply to the result.</param>
            <returns>An <see cref="T:System.Xml.XmlElement"/> variant of the specified <paramref name="exception"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToXmlElement(System.Exception,System.Text.Encoding,System.Boolean)">
            <summary>
            Converts the specified <paramref name="exception"/> to an <see cref="T:System.Xml.XmlElement"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to convert into an <see cref="T:System.Xml.XmlElement"/>.</param>
            <param name="encoding">The preferred encoding to apply to the result.</param>
            <param name="includeStackTrace">if set to <c>true</c> the stack trace of the exception (and possible user data) is included in the converted result.</param>
            <returns>An <see cref="T:System.Xml.XmlElement"/> variant of the specified <paramref name="exception"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToStream(System.Exception)">
            <summary>
            Converts the specified <paramref name="exception"/> to an XML <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to convert into an XML <see cref="T:System.IO.Stream"/>.</param>
            <returns>An XML <see cref="T:System.IO.Stream"/> variant of the specified <paramref name="exception"/>.</returns>
            <remarks>The converted <paramref name="exception"/> defaults to using an instance of <see cref="T:System.Text.UTF8Encoding"/> unless specified otherwise.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToStream(System.Exception,System.Text.Encoding)">
            <summary>
            Converts the specified <paramref name="exception"/> to an XML <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to convert into an XML <see cref="T:System.IO.Stream"/>.</param>
            <param name="encoding">The preferred encoding to apply to the result.</param>
            <returns>An XML <see cref="T:System.IO.Stream"/> variant of the specified <paramref name="exception"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToStream(System.Exception,System.Text.Encoding,System.Boolean)">
            <summary>
            Converts the specified <paramref name="exception"/> to an XML <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="exception">The <see cref="T:System.Exception"/> to convert into an XML <see cref="T:System.IO.Stream"/>.</param>
            <param name="encoding">The preferred encoding to apply to the result.</param>
            <param name="includeStackTrace">if set to <c>true</c> the stack trace of the exception (and possible user data) is included in the converted result.</param>
            <returns>An XML <see cref="T:System.IO.Stream"/> variant of the specified <paramref name="exception"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToJson(System.IO.Stream)">
            <summary>
            Returns a UTF-8 encoded JSON representation of the specified XML stream and whose value is equivalent to the specified XML stream.
            </summary>
            <param name="xmlValue">The XML to convert to a JSON representation.</param>
            <returns>A UTF-8 encoded JSON representation of the specified <paramref name="xmlValue"/> and whose value is equivalent to <paramref name="xmlValue"/>.</returns>
            <remarks>The JSON representation is in compliance with RFC 4627. Take note, that all string values is escaped using <see cref="M:Cuemon.StringUtility.Escape(System.String)"/>. This is by design and to help ensure compatibility with a wide range of data.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlConvertUtility.ToJson(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Returns a JSON representation of the specified XML stream and whose value is equivalent to the specified XML stream.
            </summary>
            <param name="xmlValue">The XML to convert to a JSON representation.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A JSON representation of the specified <paramref name="xmlValue"/> and whose value is equivalent to <paramref name="xmlValue"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">This exception is thrown when <paramref name="encoding"/> is not within the boundaries of RFC 4627.</exception>
            <exception cref="T:System.ArgumentNullException">This exception is thrown should either of <paramref name="xmlValue"/> or <paramref name="encoding"/> have the value of null.</exception>
            <remarks>The JSON representation is in compliance with RFC 4627. Take note, that all string values is escaped using <see cref="M:Cuemon.StringUtility.Escape(System.String)"/>. This is by design and to help ensure compatibility with a wide range of data.</remarks>
        </member>
        <member name="T:Cuemon.Xml.Diagnostics.XmlExceptionLog">
            <summary>
            A simple <see cref="T:System.Exception"/> log handler in XML format.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlExceptionLog.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/> class.
            </summary>
            <param name="value">The object signed with a <see cref="T:Cuemon.Diagnostics.LogAttribute"/>.</param>
            <remarks><see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/> defaults to using an instance of <see cref="T:System.Text.UTF8Encoding"/> unless specified otherwise.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlExceptionLog.#ctor(System.Object,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/> class.
            </summary>
            <param name="value">The object signed with a <see cref="T:Cuemon.Diagnostics.LogAttribute"/>.</param>
            <param name="encoding">The encoding to use when writing the log.</param>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlExceptionLog.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/> class.
            </summary>
            <param name="logName">The name of the log.</param>
            <param name="sourceName">The source of event log entries.</param>
            <remarks><see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/> defaults to using an instance of <see cref="T:System.Text.UTF8Encoding"/> unless specified otherwise.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlExceptionLog.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/> class.
            </summary>
            <param name="logName">The name of the log.</param>
            <param name="sourceName">The source of event log entries.</param>
            <param name="encoding">The encoding to use when writing the log.</param>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlExceptionLog.WriteEntry(System.Exception,Cuemon.Diagnostics.LogEntrySeverity,System.String)">
            <summary>
            Writes an error, warning, information, success audit, or failure audit entry with the <see cref="T:System.Exception"/> to the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/>.
            </summary>
            <param name="exception">The exception which holds the data to write to the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/>.</param>
            <param name="severity">One of the <see cref="T:Cuemon.Diagnostics.LogEntrySeverity"/> values.</param>
            <param name="computerName">The name of the computer to associate the <paramref name="exception"/> with.</param>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlExceptionLog.WriteLog">
            <summary>
            Renders and writes all entries currently written to the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/>.
            </summary>
            <returns>A rendered <see cref="T:System.IO.Stream"/> of all entries written to the <see cref="T:Cuemon.Xml.Diagnostics.XmlExceptionLog"/>.</returns>
        </member>
        <member name="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog">
            <summary>
            A simple <see cref="T:System.Exception"/> log handler which supports writing to a text-file in XML format.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> class.
            </summary>
            <param name="value">The object signed with a <see cref="T:Cuemon.Diagnostics.LogAttribute"/>.</param>
            <remarks><see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> defaults to using an instance of <see cref="T:System.Text.UTF8Encoding"/> unless specified otherwise.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> class.
            </summary>
            <param name="value">The object signed with a <see cref="T:Cuemon.Diagnostics.LogAttribute"/>.</param>
            <param name="fileName">The name of the XML-file to where exceptions is written.</param>
            <remarks><see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> defaults to using an instance of <see cref="T:System.Text.UTF8Encoding"/> unless specified otherwise.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.#ctor(System.Object,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> class.
            </summary>
            <param name="value">The object signed with a <see cref="T:Cuemon.Diagnostics.LogAttribute"/>.</param>
            <param name="fileName">The name of the XML-file to where exceptions is written.</param>
            <param name="encoding">The encoding to use with the text-file.</param>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> class.
            </summary>
            <param name="logName">The name of the log.</param>
            <param name="sourceName">The source of event log entries.</param>
            <param name="fileName">The name of the XML-file to where exceptions is written.</param>
            <remarks><see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> defaults to using an instance of <see cref="T:System.Text.UTF8Encoding"/> unless specified otherwise.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.#ctor(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Diagnostics.XmlFileExceptionLog"/> class.
            </summary>
            <param name="logName">The name of the log.</param>
            <param name="sourceName">The source of event log entries.</param>
            <param name="fileName">The name of the XML-file to where exceptions is written.</param>
            <param name="encoding">The encoding to use with the text-file.</param>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.WriteEntry(System.Exception,Cuemon.Diagnostics.LogEntrySeverity,System.String)">
            <summary>
            Writes an error, warning, information, success audit, or failure audit entry with the <see cref="T:System.Exception"/> to the exception log.
            </summary>
            <param name="exception">The exception which holds the data to write to the exception log.</param>
            <param name="severity">One of the <see cref="T:Cuemon.Diagnostics.LogEntrySeverity"/> values.</param>
            <param name="computerName">The name of the computer to associate the <paramref name="exception"/> with.</param>
        </member>
        <member name="M:Cuemon.Xml.Diagnostics.XmlFileExceptionLog.WriteLog">
            <summary>
            Renders and writes all entries currently written to the log.
            </summary>
            <returns>A rendered <see cref="T:System.IO.Stream"/> of all entries written to the log.</returns>
        </member>
        <member name="T:Cuemon.Xml.SecureXmlObfuscator">
            <summary>
            Provides methods for secure obfuscation (based on AES) of the otherwise similiar class <see cref="T:Cuemon.Xml.XmlObfuscator"/>.
            </summary>
            <remarks>Logic used from the <see cref="T:Cuemon.Security.Cryptography.AdvancedEncryptionStandardUtility"/> class.</remarks>
        </member>
        <member name="T:Cuemon.Xml.XmlObfuscator">
            <summary>
            Provides methods for obfuscation and size reduction of human readable XML documents.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlObfuscator"/> class using <see cref="P:System.Text.Encoding.UTF8"/> for the text encoding.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlObfuscator"/> class.
            </summary>
            <param name="exclusions">A sequence of <see cref="T:System.String"/> values used for excluding matching original values in the obfuscation process.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.#ctor(System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlObfuscator"/> class using <see cref="P:System.Text.Encoding.UTF8"/> for the text encoding.
            </summary>
            <param name="encoding">The text encoding to use.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.#ctor(System.Text.Encoding,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlObfuscator"/> class.
            </summary>
            <param name="encoding">The character encoding to use.</param>
            <param name="exclusions">A sequence of <see cref="T:System.String"/> values used for excluding matching original values in the obfuscation process.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.InitializePermutationCharacters">
            <summary>
            Initializes the permutation characters used in the obfuscation process using the default implmentation, but with the numeric characters removed.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IList`1"/> compatible object holding the permuation characters used in the obfuscation process, but with the numeric characters removed.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.CreateMapping">
            <summary>
            Creates and returns a mappaple XML document of the original values and the obfuscated values.
            </summary>
            <returns>A mappaple XML document of the original values and the obfuscated values.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.Obfuscate(System.IO.Stream)">
            <summary>
            Obfuscates the XML document of the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to obfuscate.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object where the XML document has been obfuscated.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlObfuscator.Revert(System.IO.Stream,System.IO.Stream)">
            <summary>
            Revert the obfuscated XML document of <paramref name="value"/> to its original state by applying the mappaple XML document of <paramref name="mapping"/>.
            </summary>
            <param name="value">The obfuscated <see cref="T:System.IO.Stream"/> to revert.</param>
            <param name="mapping">A <see cref="T:System.IO.Stream"/> containing mappaple values necessary to revert <paramref name="value"/> to its original state.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object where the obfuscated XML document has been reverted to its original XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.SecureXmlObfuscator.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.SecureXmlObfuscator"/> class using <see cref="P:System.Text.Encoding.UTF8"/> for the text encoding.
            </summary>
            <param name="key">The key to use in the encryption algorithm.</param>
            <param name="initializationVector">The initialization vector (IV) to use in the encryption algorithm.</param>
        </member>
        <member name="M:Cuemon.Xml.SecureXmlObfuscator.#ctor(System.Byte[],System.Byte[],System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.SecureXmlObfuscator"/> class.
            </summary>
            <param name="key">The key to use in the encryption algorithm.</param>
            <param name="initializationVector">The initialization vector (IV) to use in the encryption algorithm.</param>
            <param name="exclusions">A sequence of <see cref="T:System.String"/> values used for excluding matching original values in the obfuscation process.</param>
        </member>
        <member name="M:Cuemon.Xml.SecureXmlObfuscator.#ctor(System.Byte[],System.Byte[],System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.SecureXmlObfuscator"/> class using <see cref="P:System.Text.Encoding.UTF8"/> for the text encoding.
            </summary>
            <param name="key">The key to use in the encryption algorithm.</param>
            <param name="initializationVector">The initialization vector (IV) to use in the encryption algorithm.</param>
            <param name="encoding">The text encoding to use.</param>
        </member>
        <member name="M:Cuemon.Xml.SecureXmlObfuscator.#ctor(System.Byte[],System.Byte[],System.Text.Encoding,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.SecureXmlObfuscator"/> class.
            </summary>
            <param name="key">The key to use in the encryption algorithm.</param>
            <param name="initializationVector">The initialization vector (IV) to use in the encryption algorithm.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="exclusions">A sequence of <see cref="T:System.String"/> values used for excluding matching original values in the obfuscation process.</param>
        </member>
        <member name="M:Cuemon.Xml.SecureXmlObfuscator.Revert(System.IO.Stream,System.IO.Stream)">
            <summary>
            Revert the obfuscated XML document of <paramref name="value"/> to its original state by applying the mappaple XML document of <paramref name="mapping"/>.
            </summary>
            <param name="value">The obfuscated <see cref="T:System.IO.Stream"/> to revert.</param>
            <param name="mapping">A <see cref="T:System.IO.Stream"/> containing mappaple values necessary to revert <paramref name="value"/> to its original state.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> object where the obfuscated XML document has been reverted to its original XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.SecureXmlObfuscator.CreateMapping">
            <summary>
            Creates and returns a mappaple XML document of the original values and the obfuscated values.
            </summary>
            <returns>A mappaple XML document of the original values and the obfuscated values.</returns>
        </member>
        <member name="P:Cuemon.Xml.SecureXmlObfuscator.Key">
            <summary>
            Gets the secret key for the AES algorithm.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.SecureXmlObfuscator.InitializationVector">
            <summary>
            Gets the initialization vector (IV) for the AES algorithm.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlIgnoreChainedReferenceAttribute">
            <summary>
            Specifies that the <see cref="T:Cuemon.Xml.Serialization.XmlSerialization"/> must take special action when serializing chained/circular references of the affected class member.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlIgnoreChainedReferenceAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlIgnoreChainedReferenceAttribute"/> class.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.XmlDataReader">
            <summary>
            Provides a way of reading a forward-only access to primitive XML data that is more or less row based. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.#ctor(System.Xml.XmlReader,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlBulkCopyColumnMapping})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlDataReader"/> class.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="mappings">A sequence of column mappings define the relationships between elements and/or attributes in the <paramref name="reader"/> and columns in the destination.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Cuemon.Xml.XmlDataReader"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The 8-bit unsigned integer value of the specified column.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The character value of the specified column.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The date and time data value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The fixed-position numeric value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The double-precision floating point number of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetFieldType(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The single-precision floating point number of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The 16-bit signed integer value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The 32-bit signed integer value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The 64-bit signed integer value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The name of the field or the empty string (""), if there is no value to return.</returns>
            <exception cref="T:System.InvalidOperationException">Unable to get name from i as this instance is in ordinal-only mode.</exception>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetOrdinal(System.String)">
            <summary>
            Return the index of the named field.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The index of the named field.</returns>
            <exception cref="T:System.ArgumentNullException">name</exception>
            <exception cref="T:System.InvalidOperationException">Unable to get ordinal from name as this instance is in ordinal-only mode.</exception>
            <exception cref="T:System.IndexOutOfRangeException">The name specified is not a valid column name.</exception>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The string value of the specified field.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The <see cref="T:System.Object" /> which will contain the field value upon return.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.Read">
            <summary>
            Advances the <see cref="T:System.Data.IDataReader" /> to the next record.
            </summary>
            <returns><c>true</c> if there are more rows; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlDataReader.DefaultParseXmlValue(System.String)">
            <summary>
            Converts the specified <paramref name="value"/> its primitive object equivalent.
            </summary>
            <param name="value">The string to convert the underlying type.</param>
            <returns>A primitive object equivalent to the contained <paramref name="value"/>.</returns>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.RowCount">
            <summary>
            Gets the currently processed row count of the mapped <see cref="P:Cuemon.Xml.XmlDataReader.Reader"/>.
            </summary>
            <value>The currently processed row count of the mapped <see cref="P:Cuemon.Xml.XmlDataReader.Reader"/>.</value>
            <remarks>This property is incremented when the invoked <see cref="M:Cuemon.Xml.XmlDataReader.Read"/> method returns <c>true</c>.</remarks>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value><c>true</c> if this instance is disposed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
            <value><c>true</c> if this instance is closed; otherwise, <c>false</c>.</value>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <value>The field count.</value>
            <returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.</returns>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.Item(System.String)">
            <summary>
            Gets the column with the specified name.
            </summary>
            <param name="name">The name of the column to find.</param>
            <returns>The column with the specified name as an <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.Item(System.Int32)">
            <summary>
            Gets the column located at the specified index.
            </summary>
            <param name="i">The zero-based index of the column to get.</param>
            <returns>The column located at the specified index as an <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="P:Cuemon.Xml.XmlDataReader.ParseXmlValueCallback">
            <summary>
            Gets or sets the callback implementation that when invoked, parses an XML string value and returns its primitive object equivalent.
            </summary>
            <value>The callback implementation that when invoked, parses an XML string value and returns its primitive object equivalent.</value>
        </member>
        <member name="T:Cuemon.Xml.XmlJsonInstance">
            <summary>
            Represents a JSON instance from an XML data source.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlJsonInstance.#ctor(System.String,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlJsonInstance"/> class.
            </summary>
            <param name="name">The name of the JSON object.</param>
            <param name="value">The value of the JSON object.</param>
            <param name="nodeNumber">The logical node number of the JSON object placement in the originating structural data source.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlJsonInstance.#ctor(System.String,System.Object,System.Int32,System.Xml.XPath.XPathNodeType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlJsonInstance"/> class.
            </summary>
            <param name="name">The name of the JSON object.</param>
            <param name="value">The value of the JSON object.</param>
            <param name="nodeNumber">The logical node number of the JSON object placement in the originating structural data source.</param>
            <param name="nodeType">The node type of the XML document to convert into a JSON representation.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlJsonInstance.GetSignature">
            <summary>
            Computes and returns a MD5 signature of the following properties: <see cref="P:Cuemon.IO.JsonInstance.Name"/>, <see cref="P:Cuemon.IO.JsonInstance.Value"/>, <see cref="P:Cuemon.IO.JsonInstance.NodeNumber"/> and <see cref="P:Cuemon.Xml.XmlJsonInstance.NodeType"/>.
            </summary>
            <returns>
            A MD5 signature of the following properties: <see cref="P:Cuemon.IO.JsonInstance.Name"/>, <see cref="P:Cuemon.IO.JsonInstance.Value"/>, <see cref="P:Cuemon.IO.JsonInstance.NodeNumber"/> and <see cref="P:Cuemon.Xml.XmlJsonInstance.NodeType"/>.
            </returns>
        </member>
        <member name="P:Cuemon.Xml.XmlJsonInstance.NodeType">
            <summary>
            Gets the originating node type of the XML document.
            </summary>
            <value>The originating node type of the XML document.</value>
        </member>
        <member name="T:Cuemon.Xml.XmlReaderUtility">
            <summary>
            This utility class is designed to make <see cref="T:System.Xml.XmlReader"/> related operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlReaderUtility.Chunk(System.Xml.XmlReader)">
            <summary>
            Creates and returns a chunked sequence of <see cref="T:System.Xml.XmlReader"/> objects with a maximum of 128 XML node elements located on a depth of 1.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data to chunk into smaller <see cref="T:System.Xml.XmlReader"/> objects for a batch run or similar.</param>
            <returns>An sequence of <see cref="T:System.Xml.XmlReader"/> objects that contains no more than 128 XML node elements from the <paramref name="reader"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlReaderUtility.Chunk(System.Xml.XmlReader,System.Int32)">
            <summary>
            Creates and returns a chunked sequence of <see cref="T:System.Xml.XmlReader"/> objects with a maximum of the specified <paramref name="size"/> of XML node elements located on a depth of 1.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data to chunk into smaller <see cref="T:System.Xml.XmlReader"/> objects for a batch run or similar.</param>
            <param name="size">The amount of XML node elements allowed per <see cref="T:System.Xml.XmlReader"/> object. Default is 128 XML node element.</param>
            <returns>An sequence of <see cref="T:System.Xml.XmlReader"/> objects that contains no more than the specified <paramref name="size"/> of XML node elements from the <paramref name="reader"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlReaderUtility.Chunk(System.Xml.XmlReader,System.Int32,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a chunked sequence of <see cref="T:System.Xml.XmlReader"/> objects with a maximum of the specified <paramref name="size"/> of XML node elements located on a depth of 1.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data to chunk into smaller <see cref="T:System.Xml.XmlReader"/> objects for a batch run or similar.</param>
            <param name="size">The amount of XML node elements allowed per <see cref="T:System.Xml.XmlReader"/> object. Default is 128 XML node element.</param>
            <param name="settings">The XML settings that will be used when chunking the <paramref name="reader"/> into smaller <see cref="T:System.Xml.XmlReader"/> objects. Default is <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</param>
            <returns>An sequence of <see cref="T:System.Xml.XmlReader"/> objects that contains no more than the specified <paramref name="size"/> of XML node elements from the <paramref name="reader"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <see cref="M:System.Xml.XmlReader.Read"/> method of the <paramref name="reader"/> object has already been called.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlReaderUtility.MoveToFirstElement(System.Xml.XmlReader)">
            <summary>
            Moves the <paramref name="reader"/> object to the first element.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <returns><c>true</c> if an element exists (the reader moves to the first element), otherwise, <c>false</c> (the reader has reached <see cref="P:System.Xml.XmlReader.EOF"/>).</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The <see cref="M:System.Xml.XmlReader.Read"/> method of the <paramref name="reader"/> object has already been called.
            </exception>
        </member>
        <member name="T:Cuemon.Xml.XmlUriResolver">
            <summary>
            Resolves external XML resources named by a Uniform Resource Identifier (URI).
            This class inherits directly from <see cref="T:System.Xml.XmlUrlResolver"/> and was the best name I could come up with in regards to my consistent naming style.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlUriResolver.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.XmlUriResolver"/> class.
            </summary>
            <param name="baseUri">The base URI used to resolve xsl:include, xsl:import and similiar cases.</param>
        </member>
        <member name="M:Cuemon.Xml.XmlUriResolver.ResolveUri(System.Uri,System.String)">
            <summary>
            Resolves the absolute URI from the base and relative URIs.
            </summary>
            <param name="baseUri">The base URI used to resolve the relative URI.</param>
            <param name="relativeUri">The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <paramref name="baseUri"/> value. If relative, it combines with the <paramref name="baseUri"/> to make an absolute URI.</param>
            <returns>
            A <see cref="T:System.Uri"/> representing the absolute URI, or null if the relative URI cannot be resolved.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="baseUri "/>is null or <paramref name="relativeUri"/> is null</exception>
        </member>
        <member name="T:Cuemon.Xml.Serialization.IXmlSerialization">
            <summary>
            Provides custom formatting and retrieval for XML serialization and deserialization.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.IXmlSerialization.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlSerialization">
            <summary>
            Serialize and deserialize objects into and from XML documents.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlSerialization"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``1(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg">The parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``1(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg">The parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``1(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg">The parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``2(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``2(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``2(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``3(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``3(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``3(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``4(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``4(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``4(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``5(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``5(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToXml``5(System.Text.Encoding,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="encoding">The text encoding to use.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the current object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to the current object.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerialization.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlSerializationUtility">
            <summary>
            This utility class is designed to make XML serialization operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.ContainsXmlSerializationAttributes(System.Object)">
            <summary>
            Determines whether the specified object contains XML serialization attributes.
            </summary>
            <param name="source">The object to parse for XML serialization attributes.</param>
            <returns>
            	<c>true</c> if the specified object contains XML serialization attributes; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.ContainsXmlSerializationAttributes(System.Type)">
            <summary>
            Determines whether the specified type contains XML serialization attributes.
            </summary>
            <param name="sourceType">The type to parse for XML serialization attributes.</param>
            <returns>
            	<c>true</c> if the specified type contains XML serialization attributes; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.SerializeAsString(Cuemon.Xml.Serialization.IXmlSerialization)">
            <summary>
            Creates and returns a XML string representation of the given object.
            </summary>
            <param name="serializable">An object implementing the <see cref="T:Cuemon.Xml.Serialization.IXmlSerialization"/> interface.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.SerializeAsString(Cuemon.Xml.Serialization.IXmlSerialization,System.Boolean)">
            <summary>
            Creates and returns a XML string representation of the given object using the provided parameters.
            </summary>
            <param name="serializable">An object implementing the <see cref="T:Cuemon.Xml.Serialization.IXmlSerialization"/> interface.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.SerializeAsString(Cuemon.Xml.Serialization.IXmlSerialization,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML string representation of the given object using the provided parameters.
            </summary>
            <param name="serializable">An object implementing the <see cref="T:Cuemon.Xml.Serialization.IXmlSerialization"/> interface.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.DefaultOrXmlSerializationAttribute``1(``0)">
            <summary>
            Returns a <see cref="T:Cuemon.DefaultOr`1"/> that intermediates an <see cref="T:Cuemon.Xml.Serialization.XmlSerializationAttribute"/>.
            </summary>
            <typeparam name="T">The type of the <paramref name="source"/> object.</typeparam>
            <param name="source">The object to retrieve a <see cref="T:Cuemon.Xml.Serialization.XmlSerializationAttribute"/> from.</param>
            <returns>An instance of <see cref="T:Cuemon.DefaultOr`1"/> that intermediates an <see cref="T:Cuemon.Xml.Serialization.XmlSerializationAttribute"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize(System.Object)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object.
            </summary>
            <param name="serializable">The object to serialize.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize(System.Object,System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object.
            </summary>
            <param name="serializable">The object to serialize.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize(System.Object,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object.
            </summary>
            <param name="serializable">The object to serialize.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``1(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg">The first parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``1(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg">The first parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``1(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg">The first parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``2(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``2(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``2(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``3(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``3(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``3(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``4(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``4(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``4(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``5(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``5(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``5(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``6(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``6(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``6(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``7(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``7(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``7(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``8(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``8(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``8(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``9(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``9(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``9(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``10(System.Object,Cuemon.Xml.Serialization.SerializableOrder,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg10">The tenth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``10(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg10">The tenth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationUtility.Serialize``10(System.Object,Cuemon.Xml.Serialization.SerializableOrder,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Creates and returns a XML stream representation of the specified <paramref name="serializable"/> object while complementary XML is applied to <paramref name="serializable"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="serializable">The object to serialize.</param>
            <param name="order">A <see cref="T:Cuemon.Xml.Serialization.SerializableOrder"/> that specifies the order (append or prepend) in which the additional serialization information is applied to the <paramref name="serializable"/> object.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="writer">The delegate that will either prepend or append complementary XML to <paramref name="serializable"/>.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg10">The tenth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the serialized version of <paramref name="serializable"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="serializable"/> is null.
            </exception>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationUtility.MaxSerializationDepth">
            <summary>
            Gets or sets the maximum serialization object depth. Default is 10.
            </summary>
            <value>The maximum serialization object depth.</value>
            <remarks>This is an experimental property.</remarks>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationUtility.SkipPropertiesCallback">
            <summary>
            Gets or sets the callback implementation that evaluates which public properties of an object should be skipped from either of the Serialize methods on this <see cref="T:Cuemon.Xml.Serialization.XmlSerializationUtility"/> class.
            </summary>
            <value>The callback method that evaluates which public properties of an object should be skipped.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationUtility.SkipPropertyCallback">
            <summary>
            Gets or sets the callback implementation that evaluates if a given property from either of the Serialize methods on this <see cref="T:Cuemon.Xml.Serialization.XmlSerializationUtility"/> class should be skipped for further processing.
            </summary>
            <value>The callback method that evaluates if a given property of an object should be skipped.</value>
        </member>
        <member name="T:Cuemon.Xml.Serialization.SerializationMethod">
            <summary>
            Specifies the serialization attribute to be used by the <see cref="T:Cuemon.Xml.Serialization.XmlSerialization"/> class in default serialization scenarios.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Serialization.SerializationMethod.XmlAttributeAttribute">
            <summary>
            Specifies the <see cref="F:Cuemon.Xml.Serialization.SerializationMethod.XmlAttributeAttribute"/> attribute.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Serialization.SerializationMethod.XmlElementAttribute">
            <summary>
            Specifies the <see cref="F:Cuemon.Xml.Serialization.SerializationMethod.XmlElementAttribute"/> attribute.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Serialization.XmlSerializationAttribute">
            <summary>
            Specifies that the <see cref="T:Cuemon.Xml.Serialization.XmlSerialization"/> must take special action when serializing the affected class member.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Serialization.XmlSerializationAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Serialization.XmlSerializationAttribute"/> class.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.OmitXmlDeclaration">
            <summary>
            Gets or sets a value indicating whether to write an XML declaration.
            </summary>
            <value>
              <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is true.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.EnableSignatureCaching">
            <summary>
            Gets or sets a value indicating whether the object for serializing will have its signature computed and cached for faster retrieval in some scenarios.
            </summary>
            <value>
            	<c>true</c> if the object for serializing will have its signature computed and cached for faster retrieval in some scenarios; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.EnableAutomatedXmlSerialization">
            <summary>
            Gets or sets a value indicating whether to use automated XML serialization for your class.
            If not enabled, you must override the <see cref="T:System.Xml.Serialization.IXmlSerializable"/> defined methods to apply your own custom XML serialization.
            Default is not enabled.
            </summary>
            <value>
            	<c>true</c> to use automated XML serialization for your class; otherwise, <c>false</c>. The default is true.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.DefaultSerializationMethod">
            <summary>
            Gets or sets the serialization attribute to be used in default serialization scenarios.
            </summary>
            <value>The default serialization attribute to be used in default serialization scenarios.</value>
        </member>
        <member name="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.DefaultSerializationMethodAsAttribute">
            <summary>
            Gets the default controlling XML serialization attribute as specified by <see cref="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.DefaultSerializationMethod"/>.
            </summary>
            <value>The default controlling XML serialization attribute as specified by <see cref="P:Cuemon.Xml.Serialization.XmlSerializationAttribute.DefaultSerializationMethod"/>.</value>
        </member>
        <member name="T:Cuemon.Xml.XmlUtility">
            <summary>
            This utility class is designed to make XML operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.PurgeNamespaceDeclarations(System.IO.Stream)">
            <summary>
            Purges the namespace declarations from the specified <see cref="T:System.IO.Stream"/> <paramref name="value"/>.
            </summary>
            <param name="value">An XML <see cref="T:System.IO.Stream"/> to purge namespace declarations from.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object representing the specified <paramref name="value"/> but with no namespace declarations.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.PurgeNamespaceDeclarations(System.IO.Stream,System.Boolean)">
            <summary>
            Purges the namespace declarations from the specified <see cref="T:System.IO.Stream"/> <paramref name="value"/>.
            </summary>
            <param name="value">An XML <see cref="T:System.IO.Stream"/> to purge namespace declarations from.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object representing the specified <paramref name="value"/> but with no namespace declarations.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.PurgeNamespaceDeclarations(System.IO.Stream,System.Boolean,System.Text.Encoding)">
            <summary>
            Purges the namespace declarations from the specified <see cref="T:System.IO.Stream"/> <paramref name="value"/>.
            </summary>
            <param name="value">An XML <see cref="T:System.IO.Stream"/> to purge namespace declarations from.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object representing the specified <paramref name="value"/> but with no namespace declarations.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.Escape(System.String)">
            <summary>
            Escapes the given XML <see cref="T:System.String"/>.
            </summary>
            <param name="value">The XML <see cref="T:System.String"/> to escape.</param>
            <returns>The input <paramref name="value"/> with an escaped equivalent.</returns>
            <remarks>A shortcut implementation of the <see cref="M:System.Security.SecurityElement.Escape(System.String)"/> method.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.Unescape(System.String)">
            <summary>
            Unescapes the given XML <see cref="T:System.String"/>.
            </summary>
            <param name="value">The XML <see cref="T:System.String"/> to unescape.</param>
            <returns>The input <paramref name="value"/> with an unescaped equivalent.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ReadEncoding(System.IO.Stream)">
            <summary>
            Reads the <see cref="T:System.Text.Encoding"/> from the specified XML <see cref="T:System.IO.Stream"/>. If an encoding cannot be resolved, UTF-8 encoding is assumed for the <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to resolve an <see cref="T:System.Text.Encoding"/> object from.</param>
            <returns>An <see cref="T:System.Text.Encoding"/> object equivalent to the encoding used in the <paramref name="value"/>, or <see cref="P:System.Text.Encoding.UTF8"/> if unable to resolve the encoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ReadEncoding(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads the <see cref="T:System.Text.Encoding"/> from the specified XML <see cref="T:System.IO.Stream"/>. If an encoding cannot be resolved, <paramref name="defaultEncoding"/> encoding is assumed for the <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to resolve an <see cref="T:System.Text.Encoding"/> object from.</param>
            <param name="defaultEncoding">The preferred default <see cref="T:System.Text.Encoding"/> to use if an encoding cannot be resolved automatically.</param>
            <returns>An <see cref="T:System.Text.Encoding"/> object equivalent to the encoding used in the <paramref name="value"/>, or <paramref name="defaultEncoding"/> if unable to resolve the encoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlReader(System.IO.Stream)">
            <summary>
            Converts the given stream to an XmlReader object.
            </summary>
            <param name="value">The stream to be converted.</param>
            <returns>An <see cref="T:System.Xml.XmlReader"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Converts the given stream to an XmlReader object.
            </summary>
            <param name="value">The stream to be converted.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>An <see cref="T:System.Xml.XmlReader"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlReader(System.Byte[])">
            <summary>
            Converts the given byte array to an XmlReader object.
            </summary>
            <param name="value">The byte array to be converted.</param>
            <returns>An <see cref="T:System.Xml.XmlReader"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlReader(System.Uri)">
            <summary>
            Converts the given URI to an XmlReader object.
            </summary>
            <param name="value">The URI to be converted.</param>
            <returns>An <see cref="T:System.Xml.XmlReader"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlDocument(System.IO.Stream)">
            <summary>
            Converts the given <see cref="T:System.IO.Stream"/> to an <see cref="T:System.Xml.XmlDocument"/>. The stream is closed and disposed of afterwards.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to be converted.</param>
            <returns>An <see cref="T:System.Xml.XmlDocument"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlDocument(System.IO.Stream,System.Boolean)">
            <summary>
            Converts the given <see cref="T:System.IO.Stream"/> to an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to be converted.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <see cref="T:System.IO.Stream"/> object is being left open; otherwise it is being closed and disposed.</param>
            <returns>An <see cref="T:System.Xml.XmlDocument"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlDocument(System.Xml.XmlReader)">
            <summary>
            Converts the given <see cref="T:System.Xml.XmlReader"/> to an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="value">The <see cref="T:System.Xml.XmlReader"/> to be converted.</param>
            <returns>An <see cref="T:System.Xml.XmlDocument"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlDocument(System.Xml.XmlReader,System.Boolean)">
            <summary>
            Converts the given <see cref="T:System.Xml.XmlReader"/> to an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="value">The <see cref="T:System.Xml.XmlReader"/> to be converted.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <see cref="T:System.Xml.XmlReader"/> object is being left open; otherwise it is being closed and disposed.</param>
            <returns>An <see cref="T:System.Xml.XmlDocument"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlDocument(System.Uri)">
            <summary>
            Converts the given URI to an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="value">The URI to be converted.</param>
            <returns>An <b>XmlDocument</b>object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlDocument(System.String)">
            <summary>
            Converts the given string to an <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="value">The string to be converted.</param>
            <returns>An <b>XmlDocument</b>object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.CreateXmlReaderSettings">
            <summary>
            Create and returns a default <see cref="T:System.Xml.XmlReaderSettings"/> (with enabled DTD processing) for use with a <see cref="T:System.Xml.XmlReader"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ConvertEncoding(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Converts the entire XML <see cref="T:System.IO.Stream"/> object from the resolved source encoding to the specified target encoding, preserving any preamble sequences.
            </summary>
            <param name="source">The <see cref="T:System.IO.Stream"/> to apply the conversion to.</param>
            <param name="targetEncoding">The target encoding format.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the results of converting bytes from the resolved source encoding to the specified targetEncoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ConvertEncoding(System.IO.Stream,System.Text.Encoding,Cuemon.PreambleSequence)">
            <summary>
            Converts the entire XML <see cref="T:System.IO.Stream"/> object from the resolved encoding of <paramref name="source"/> to the specified encoding.
            If an encoding cannot be resolved from <paramref name="source"/>, UTF-8 encoding is assumed.
            </summary>
            <param name="source">The <see cref="T:System.IO.Stream"/> to apply the conversion to.</param>
            <param name="targetEncoding">The target encoding format.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the results of converting bytes from the resolved source encoding to the specified targetEncoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ConvertEncoding(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Converts the entire XML <see cref="T:System.IO.Stream"/> object from the resolved encoding of <paramref name="source"/> to the specified encoding.
            If an encoding cannot be resolved from <paramref name="source"/>, UTF-8 encoding is assumed.
            </summary>
            <param name="source">The <see cref="T:System.IO.Stream"/> to apply the conversion to.</param>
            <param name="targetEncoding">The target encoding format.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the results of converting bytes from the resolved source encoding to the specified targetEncoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ConvertEncoding(System.IO.Stream,System.Text.Encoding,System.Text.Encoding,System.Boolean)">
            <summary>
            Converts the entire XML <see cref="T:System.IO.Stream"/> object from one encoding to another.
            </summary>
            <param name="source">The <see cref="T:System.IO.Stream"/> to apply the conversion to.</param>
            <param name="sourceEncoding">The source encoding format.</param>
            <param name="targetEncoding">The target encoding format.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the results of converting bytes from sourceEncoding to targetEncoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ConvertEncoding(System.IO.Stream,System.Text.Encoding,System.Text.Encoding,Cuemon.PreambleSequence)">
            <summary>
            Converts the entire XML <see cref="T:System.IO.Stream"/> object from one encoding to another.
            </summary>
            <param name="source">The <see cref="T:System.IO.Stream"/> to apply the conversion to.</param>
            <param name="sourceEncoding">The source encoding format.</param>
            <param name="targetEncoding">The target encoding format.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the results of converting bytes from sourceEncoding to targetEncoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.ConvertEncoding(System.IO.Stream,System.Text.Encoding,System.Text.Encoding,Cuemon.PreambleSequence,System.Boolean)">
            <summary>
            Converts the entire XML <see cref="T:System.IO.Stream"/> object from one encoding to another.
            </summary>
            <param name="source">The <see cref="T:System.IO.Stream"/> to apply the conversion to.</param>
            <param name="sourceEncoding">The source encoding format.</param>
            <param name="targetEncoding">The target encoding format.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the results of converting bytes from sourceEncoding to targetEncoding.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlUtility.SanitizeElementName(System.String)">
            <summary>
            Sanitizes the <paramref name="elementName"/> for any invalid characters.
            </summary>
            <param name="elementName">The name of the XML element to sanitize.</param>
            <returns>A sanitized <see cref="T:System.String"/> of <paramref name="elementName"/>.</returns>
            <remarks>Sanitation rules are as follows:<br/>
            1. Names can contain letters, numbers, and these 4 characters: _ | : | . | -<br/>
            2. Names cannot start with a number or punctuation character<br/>
            3. Names cannot contain spaces<br/>
            </remarks>
        </member>
        <member name="T:Cuemon.Xml.XmlWriterUtility">
            <summary>
            This utility class is designed to make <see cref="T:System.Xml.XmlWriter"/> related operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy(System.Xml.XmlReader)">
            <summary>
            Copies everything from the specified <paramref name="reader"/> and returns the result as an XML stream.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding an exact copy of the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy(System.Xml.XmlReader,System.Xml.XmlWriterSettings)">
            <summary>
            Copies everything from the specified <paramref name="reader"/> and returns the result as an XML stream.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied doing the copying process.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding an exact copy of the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean)">
            <summary>
            Copies everything from the specified <paramref name="reader"/> and returns the result as an XML stream.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied doing the copying process.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding an exact copy of the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy(System.Xml.XmlReader,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader})">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="copier"/> is null.
            </exception>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy(System.Xml.XmlReader,System.Xml.XmlWriterSettings,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader})">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader})">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``1(System.Xml.XmlReader,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0},``0)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg">The parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="copier"/> is null.
            </exception>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``1(System.Xml.XmlReader,System.Xml.XmlWriterSettings,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0},``0)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg">The parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``1(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0},``0)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg">The parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``2(System.Xml.XmlReader,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1},``0,``1)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="copier"/> is null.
            </exception>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``2(System.Xml.XmlReader,System.Xml.XmlWriterSettings,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1},``0,``1)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``2(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1},``0,``1)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``3(System.Xml.XmlReader,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2},``0,``1,``2)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="copier"/> is null.
            </exception>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``3(System.Xml.XmlReader,System.Xml.XmlWriterSettings,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2},``0,``1,``2)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``3(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2},``0,``1,``2)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``4(System.Xml.XmlReader,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="copier"/> is null.
            </exception>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``4(System.Xml.XmlReader,System.Xml.XmlWriterSettings,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``4(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``5(System.Xml.XmlReader,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="copier"/> is null.
            </exception>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``5(System.Xml.XmlReader,System.Xml.XmlWriterSettings,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.Copy``5(System.Xml.XmlReader,System.Xml.XmlWriterSettings,System.Boolean,Cuemon.Act{System.Xml.XmlWriter,System.Xml.XmlReader,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Copies the specified <paramref name="reader"/> using the specified delegate <paramref name="copier"/> and returns the result as an XML stream.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="copier"/>.</typeparam>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> object that contains the XML data.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="copier"/>.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the <paramref name="reader"/> is being left open; otherwise <paramref name="reader"/> is disposed of.</param>
            <param name="copier">The delegate that will create an in-memory copy of <paramref name="reader"/> as a XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="copier"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="copier"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML copied by the delegate <paramref name="copier"/> from the source <paramref name="reader"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="reader"/> is null - or - <paramref name="settings"/> is null - or - <paramref name="copier"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
            <remarks>
            The following table shows the initial property values for an instance of <see cref="T:System.Xml.XmlWriterSettings"/>.
            <list type="table">
                <listheader>
                    <term>Property</term>
                    <description>Initial Value</description>
                </listheader>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.CheckCharacters"/></term>
                    <description><c>true</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.CloseOutput"/></term>
                    <description><c>false</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel"/></term>
                    <description><see cref="F:System.Xml.ConformanceLevel.Document"/></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.Encoding"/></term>
                    <description><see cref="P:System.Text.Encoding.UTF8"/></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.Indent"/></term>
                    <description><c>false</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.IndentChars"/></term>
                    <description><see cref="F:Cuemon.StringUtility.Tab"/></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.NewLineChars"/></term>
                    <description><see cref="F:Cuemon.StringUtility.NewLine"/></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.NewLineHandling"/></term>
                    <description><see cref="F:System.Xml.NewLineHandling.None"/></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes"/></term>
                    <description><c>false</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration"/></term>
                    <description><c>false</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes"/></term>
                    <description><c>false</c></description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean,System.Xml.ConformanceLevel)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <param name="conformanceLevel">One of the <see cref="T:System.Xml.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean,System.Xml.ConformanceLevel,System.Xml.NewLineHandling)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <param name="conformanceLevel">One of the <see cref="T:System.Xml.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</param>
            <param name="newLineHandling">One of the <see cref="T:System.Xml.NewLineHandling"/> values. The default is <see cref="F:System.Xml.NewLineHandling.None"/>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean,System.Xml.ConformanceLevel,System.Xml.NewLineHandling,System.Boolean)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <param name="conformanceLevel">One of the <see cref="T:System.Xml.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</param>
            <param name="newLineHandling">One of the <see cref="T:System.Xml.NewLineHandling"/> values. The default is <see cref="F:System.Xml.NewLineHandling.None"/>.</param>
            <param name="indent"><c>true</c> to write individual elements on new lines and indent; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean,System.Xml.ConformanceLevel,System.Xml.NewLineHandling,System.Boolean,System.Boolean)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <param name="conformanceLevel">One of the <see cref="T:System.Xml.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</param>
            <param name="newLineHandling">One of the <see cref="T:System.Xml.NewLineHandling"/> values. The default is <see cref="F:System.Xml.NewLineHandling.None"/>.</param>
            <param name="indent"><c>true</c> to write individual elements on new lines and indent; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <param name="newLineOnAttributes"><c>true</c> to write attributes on individual lines; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean,System.Xml.ConformanceLevel,System.Xml.NewLineHandling,System.Boolean,System.Boolean,System.String)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <param name="conformanceLevel">One of the <see cref="T:System.Xml.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</param>
            <param name="newLineHandling">One of the <see cref="T:System.Xml.NewLineHandling"/> values. The default is <see cref="F:System.Xml.NewLineHandling.None"/>.</param>
            <param name="indent"><c>true</c> to write individual elements on new lines and indent; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <param name="newLineOnAttributes"><c>true</c> to write attributes on individual lines; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <param name="newLineChars">The character string to use for line breaks. The default is <see cref="F:Cuemon.StringUtility.NewLine"/>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateSettings(System.Text.Encoding,System.Boolean,System.Xml.ConformanceLevel,System.Xml.NewLineHandling,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.
            </summary>
            <param name="encoding">The text encoding to use. The default is <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <param name="omitXmlDeclaration"><c>true</c> to omit the XML declaration; otherwise, <c>false</c>. The default is <c>false</c>, specifying that an XML declaration is written.</param>
            <param name="conformanceLevel">One of the <see cref="T:System.Xml.ConformanceLevel"/> values. The default is <see cref="F:System.Xml.ConformanceLevel.Document"/>.</param>
            <param name="newLineHandling">One of the <see cref="T:System.Xml.NewLineHandling"/> values. The default is <see cref="F:System.Xml.NewLineHandling.None"/>.</param>
            <param name="indent"><c>true</c> to write individual elements on new lines and indent; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <param name="newLineOnAttributes"><c>true</c> to write attributes on individual lines; otherwise, <c>false</c>. The default is <c>false</c>.</param>
            <param name="newLineChars">The character string to use for line breaks. The default is <see cref="F:Cuemon.StringUtility.NewLine"/>.</param>
            <param name="indentChars">The character string to use when indenting. The default is <see cref="F:Cuemon.StringUtility.Tab"/>.</param>
            <returns>A <see cref="T:System.Xml.XmlWriterSettings"/> instance that specifies a set of features to support the <see cref="T:System.Xml.XmlWriter"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml(Cuemon.Act{System.Xml.XmlWriter})">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml(Cuemon.Act{System.Xml.XmlWriter},System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``1(Cuemon.Act{System.Xml.XmlWriter,``0},``0)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg">The parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``1(Cuemon.Act{System.Xml.XmlWriter,``0},``0,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T">The type of the parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg">The parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``2(Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``2(Cuemon.Act{System.Xml.XmlWriter,``0,``1},``0,``1,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``3(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``3(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2},``0,``1,``2,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``4(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``4(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3},``0,``1,``2,``3,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``5(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``5(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``6(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``6(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``7(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``7(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``8(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``8(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``9(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``9(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``10(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg10">The tenth parameter of the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
            <remarks>This method uses a default implementation of <see cref="T:System.Xml.XmlWriterSettings"/> as specified by <see cref="M:Cuemon.Xml.XmlWriterUtility.CreateSettings"/>.</remarks>
        </member>
        <member name="M:Cuemon.Xml.XmlWriterUtility.CreateXml``10(Cuemon.Act{System.Xml.XmlWriter,``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Xml.XmlWriterSettings)">
            <summary>
            Creates and returns a XML stream by the specified delegate <paramref name="writer"/>.
            </summary>
            <typeparam name="T1">The type of the first parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T2">The type of the second parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T3">The type of the third parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the delegate <paramref name="writer"/>.</typeparam>
            <param name="writer">The delegate that will create an in-memory XML stream.</param>
            <param name="arg1">The first parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg2">The second parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg3">The third parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg4">The fourth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg5">The fifth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg6">The sixth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg7">The seventh parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg8">The eighth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg9">The ninth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="arg10">The tenth parameter of the delegate <paramref name="writer"/>.</param>
            <param name="settings">The XML settings that will be applied to the delegate <paramref name="writer"/>.</param>
            <returns>A <see cref="T:System.IO.Stream"/> holding the XML created by the delegate <paramref name="writer"/>.</returns>
        </member>
        <member name="T:Cuemon.Xml.XPath.XPathUtility">
            <summary>
            This utility class is designed to make XPath operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.XPath.XPathUtility.CreateXPathNavigableDocument(System.String)">
            <summary>
            Converts the given XML string to an IXPathNavigable object using UTF-8 for the encoding.
            </summary>
            <param name="value">The XML string to be converted.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XPath.XPathUtility.CreateXPathNavigableDocument(System.String,System.Text.Encoding)">
            <summary>
            Converts the given XML string to an IXPathNavigable object.
            </summary>
            <param name="value">The XML string to be converted.</param>
            <param name="encoding">The preferred encoding to use.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XPath.XPathUtility.CreateXPathNavigableDocument(System.IO.Stream)">
            <summary>
            Converts the given stream to an <see cref="T:System.Xml.XPath.IXPathNavigable"/> object. The stream is closed and disposed of afterwards.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to be converted.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XPath.XPathUtility.CreateXPathNavigableDocument(System.IO.Stream,System.Boolean)">
            <summary>
            Converts the given stream to an <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to be converted.</param>
            <param name="leaveStreamOpen">if <c>true</c>, the source <see cref="T:System.IO.Stream"/> is being left open; otherwise it is being closed and disposed.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XPath.XPathUtility.CreateXPathNavigableDocument(System.Xml.XmlReader)">
            <summary>
            Converts the given XmlReader to an IXPathNavigable object.
            </summary>
            <param name="value">The XmlReader to be converted.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="M:Cuemon.Xml.XPath.XPathUtility.CreateXPathNavigableDocument(System.Uri)">
            <summary>
            Converts the given <see cref="T:System.Uri"/> to an <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> to be converted.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="T:Cuemon.Xml.Xsl.IXsltParameter">
            <summary>
            An interface that defines the contract that an XSLT parameter must fulfill.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.IXsltParameter.Name">
            <summary>
            Gets or sets the name to associate with the parameter.
            </summary>
            <value>The name to associate with the parameter.</value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.IXsltParameter.NamespaceUri">
            <summary>
            Gets or sets the name space URI to associate with the parameter. To use the default namespace, specify an empty string.
            </summary>
            <value>The name space URI to associate with the parameter.</value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.IXsltParameter.Value">
            <summary>
            Gets or sets the value to add to the parameter.
            </summary>
            <value>The value to add to the parameter.</value>
        </member>
        <member name="T:Cuemon.Xml.Xsl.XsltOutput">
            <summary>
            The xsl:output element defined as a .NET object.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltOutput.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> class from being created.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltOutput.Parse(System.IO.Stream)">
            <summary>
            Reads and parses the xsl:output element from the specified <paramref name="value"/>.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to resolve a <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> object from.</param>
            <returns>A <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> object equivalent to the xsl:output read and parsed in the <paramref name="value"/>, or null if the xsl:output cannot be resolved.</returns>
            <remarks>The <see cref="P:Cuemon.Xml.Xsl.XsltOutput.Encoding"/> is tried resolved automatically and if failed, reverts to <see cref="P:System.Text.Encoding.UTF8"/>. Uses a default <see cref="T:System.Xml.XmlUrlResolver"/> instance.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltOutput.Parse(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads and parses the xsl:output element from the specified <paramref name="value"/>.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to resolve a <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> object from.</param>
            <param name="encoding">The <see cref="P:Cuemon.Xml.Xsl.XsltOutput.Encoding"/> to use on the specified <paramref name="value"/>.</param>
            <returns>A <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> object equivalent to the xsl:output read and parsed in the <paramref name="value"/>, or null if the xsl:output cannot be resolved.</returns>
            <remarks>Uses a default <see cref="T:System.Xml.XmlUrlResolver"/> instance.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltOutput.Parse(System.IO.Stream,System.Text.Encoding,System.Xml.XmlResolver)">
            <summary>
            Reads and parses the xsl:output element from the specified <paramref name="value"/>.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> to resolve a <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> object from.</param>
            <param name="encoding">The <see cref="P:Cuemon.Xml.Xsl.XsltOutput.Encoding"/> to use on the specified <paramref name="value"/>.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements.</param>
            <returns>A <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> object equivalent to the xsl:output read and parsed in the <paramref name="value"/>, or null if the xsl:output cannot be resolved.</returns>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.Method">
            <summary>
            Defines the output format. Default is <see cref="F:Cuemon.Xml.Xsl.XsltOutputMethod.Xml"/>.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.Version">
            <summary>
            Gets the W3C version number for the output format.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.DoctypePublic">
            <summary>
            Gets the value of the PUBLIC attribute of the DOCTYPE declaration in the output.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.DoctypeSystem">
            <summary>
            Gets the value of the SYSTEM attribute of the DOCTYPE declaration in the output.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.CDataSectionElements">
            <summary>
            Gets a white-space separated list of elements whose text contents should be written as CDATA sections.
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.MediaType">
            <summary>
            Gets the defined MIME type of the output. Default is "text/xml".
            </summary>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.OmitXmlDeclaration">
            <summary>
            Gets a value indicating whether to write an XML declaration. Default is false.
            </summary>
            <value>
              <c>true</c> if the XML declaration (<?xml...?>) should be omitted in the output; otherwise, <c>false</c> specifies that the XML declaration should be included in the output.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.Standalone">
            <summary>
            Gets a value indicating whether to write a standalone declaration. Default is false.
            </summary>
            <value>
              <c>true</c> if a standalone declaration should occur in the output; otherwise, <c>false</c> specifies that a standalone declaration should not occur in the output.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.Indent">
            <summary>
            Gets a value indicating whether the output should be indented. Default is false.
            </summary>
            <value>
              <c>true</c> if the output should be indented according to its hierarchic structure; otherwise, <c>false</c> indicates that the output should not be indented according to its hierarchic structure.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltOutput.Encoding">
            <summary>
            Gets the value of the encoding attribute in the output.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Xsl.XsltOutputMethod">
            <summary>
            Defines the output format of an XSLT.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.XsltOutputMethod.Xml">
            <summary>
            Specifies XML as the output format.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.XsltOutputMethod.Html">
            <summary>
            Specifies HTML as the output format.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.XsltOutputMethod.Text">
            <summary>
            Specifies TEXT as the output format.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Xsl.XsltUtility">
            <summary>
            This utility class is designed to make XSL(T) operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.ClearXslCompiledTransformCache">
            <summary>
            Removes all <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> objects from the cache hereby freeing memory.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.Xsl.XslCompiledTransform)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="compiledTransform">An instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> class.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.Xsl.XslCompiledTransform,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="compiledTransform">An instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> class.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.Xsl.XslCompiledTransform,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="compiledTransform">An instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> class.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(Cuemon.Xml.Serialization.IXmlSerialization,System.Xml.Xsl.XslCompiledTransform,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="serializable">An object implementing the <see cref="T:Cuemon.Xml.Serialization.IXmlSerialization"/> interface.</param>
            <param name="compiledTransform">An instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> class.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(Cuemon.Xml.Serialization.IXmlSerialization,System.Boolean,System.Xml.Xsl.XslCompiledTransform,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="serializable">An object implementing the <see cref="T:Cuemon.Xml.Serialization.IXmlSerialization"/> interface.</param>
            <param name="compiledTransform">An instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> class.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(Cuemon.Xml.Serialization.IXmlSerialization,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Xml.Xsl.XslCompiledTransform,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="serializable">An object implementing the <see cref="T:Cuemon.Xml.Serialization.IXmlSerialization"/> interface.</param>
            <param name="compiledTransform">An instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> class.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable,System.Text.Encoding)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Xml.XPath.IXPathNavigable,System.Text.Encoding,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface. In the Microsoft .NET Framework, this can be either an XmlNode (typically an XmlDocument), or an XPathDocument containing the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.IO.Stream,System.Text.Encoding,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The <see cref="T:System.IO.Stream"/> object containing the XSLT style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.String,Cuemon.PreambleSequence,System.Text.Encoding)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The string containing the XSLT style sheet.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.String,Cuemon.PreambleSequence,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The string containing the XSLT style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.String,Cuemon.PreambleSequence,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The string containing the XSLT style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.String,Cuemon.PreambleSequence,System.Text.Encoding,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The string containing the XSLT style sheet.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.String,Cuemon.PreambleSequence,System.Text.Encoding,System.Xml.XmlResolver,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The string containing the XSLT style sheet.</param>
            <param name="sequence">Determines whether too keep or remove any preamble sequences.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Text.Encoding)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Text.Encoding,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Xml.Xsl.XsltArgumentList,System.Boolean)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="enableDebug">if set to <c>true</c> debug information is generated for the Microsoft Visual Studio Debugger.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Text.Encoding,System.Xml.Xsl.XsltArgumentList,System.Boolean,System.Xml.XmlResolver)">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="argumentList">The XSLT arguments to use in your style sheet.</param>
            <param name="enableDebug">if set to <c>true</c> debug information is generated for the Microsoft Visual Studio Debugger.</param>
            <param name="resolver">The <see cref="T:System.Xml.XmlResolver"/> used to resolve any style sheets referenced in XSLT import and include elements. If this is null, an instance of <see cref="T:System.Xml.XmlUrlResolver"/> is instantiated.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Boolean,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="enableDebug">if set to <c>true</c> debug information is generated for the Microsoft Visual Studio Debugger.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltUtility.Transform(System.IO.Stream,System.Uri,System.Boolean,System.Text.Encoding,Cuemon.Xml.Xsl.IXsltParameter[])">
            <summary>
            Transform the XML input document specified by the <see cref="T:System.IO.Stream"/> object and outputs the result to a stream.
            </summary>
            <param name="input">The <see cref="T:System.IO.Stream"/> object containing the XML input document.</param>
            <param name="styleSheet">The URI of the style sheet.</param>
            <param name="enableDebug">if set to <c>true</c> debug information is generated for the Microsoft Visual Studio Debugger.</param>
            <param name="encoding">The text encoding to use.</param>
            <param name="parameters">The XSLT parameters to use in your style sheet.</param>
            <returns>A <see cref="T:System.IO.Stream"/> object containing the transformed content.</returns>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltUtility.EnableXslCompiledTransformCaching">
            <summary>
            Gets or sets a value indicating whether to enable caching of <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> objects. Default value is true.
            </summary>
            <value>
            	<c>true</c> to enable caching of <see cref="T:System.Xml.Xsl.XslCompiledTransform"/> objects; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltUtility.EnableStyleSheetDocumentFunction">
            <summary>
            Gets or sets a value indicating whether to enable support for the XSLT document() function. Default value is true.
            </summary>
            <value>
            	<c>true</c> to enable support for the XSLT document() function; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltUtility.EnableStyleSheetScript">
            <summary>
            Gets or sets a value indicating whether to enable support for embedded scripts blocks. Default value is false.
            </summary>
            <value><c>true</c> to enable support for embedded scripts blocks; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltUtility.EnableStyleSheetResolver">
            <summary>
            Gets or sets a value indicating whether to enable support for resolving the style sheet URI and any style sheets referenced in XSL(T) import and include elements.
            </summary>
            <value>
            	<c>true</c> to enable support for resolving the style sheet URI and any style sheets referenced in XSL(T) import and include elements; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltUtility.StyleSheetSettings">
            <summary>
            Gets the style sheet settings based on the values of the various class switches.
            </summary>
            <value>The style sheet settings based on the values of the various class switches.</value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltUtility.StyleSheetResolver">
            <summary>
            Gets the style sheet resolver based on the values of the various class switches.
            </summary>
            <value>The style sheet resolver based on the values of the various class switches.</value>
        </member>
        <member name="T:Cuemon.Xml.Xsl.XsltExtensionLibrary">
            <summary>
            Represents a XSLT Extension Object with an usefull set of methods to be used with the <see cref="T:System.Xml.Xsl.XsltArgumentList"/> class.
            Singleton dessign pattern has been used - call XsltExtensionLibrary.ExtensionObject in order to get an instance of the class.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.appendQuery(System.String,System.String)">
            <summary>
            Appends the provided raw URL with the needed new query parameter, either as a first statment or last statement.
            </summary>
            <param name="rawUrl">The raw URL to intreprent.</param>
            <param name="query">The query to append to the raw URL.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.formatDateTime(System.String,System.UInt16,System.String)">
            <summary>
            Formats the datetime by the parameters provided.
            </summary>
            <param name="expression">The datetime expression to format.</param>
            <param name="lcid">The localeId to create a specific Culture from.</param>
            <param name="pattern">The pattern to use for the format, eg. LongDateTime or ShortDateTime.</param>
            <returns></returns>
            <remarks>It is recommended that the expression is always represented in the ISO8601 date time format.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.formatTime(System.String,System.UInt16,System.String)">
            <summary>
            Formats the time by the parameters provided.
            </summary>
            <param name="expression">The time expression to format.</param>
            <param name="lcid">The localeId to create a specific Culture from.</param>
            <param name="pattern">The pattern to use for the format, eg. LongTime or ShortTime.</param>
            <returns></returns>
            <remarks>It is recommended that the expression is always represented in the ISO8601 date time format.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.formatDate(System.String,System.UInt16,System.String)">
            <summary>
            Formats the date by the parameters provided.
            </summary>
            <param name="expression">The date expression to format.</param>
            <param name="lcid">The localeId to create a specific Culture from.</param>
            <param name="pattern">The pattern to use for the format, eg. LongDate or ShortDate.</param>
            <returns></returns>
            <remarks>It is recommended that the expression is always represented in the ISO8601 date time format.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.datetime(System.String,System.UInt16,System.String)">
            <summary>
            Creates a <see cref="T:System.DateTime"/> representation from the specified string value, and returns a string representation of the provided <see cref="T:Cuemon.Xml.Xsl.DateTimeRepresentation"/> value.
            </summary>
            <param name="value">The date and time value to represent.</param>
            <param name="lcid">The localeId to create a specific Culture from.</param>
            <param name="property">A string representation of <see cref="T:Cuemon.Xml.Xsl.DateTimeRepresentation"/> value.</param>
            <returns>A string representation of the provided <see cref="T:Cuemon.Xml.Xsl.DateTimeRepresentation"/> value.</returns>
            <remarks>It is recommended that the expression is always represented in the ISO8601 date time format.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.datetimeParse(System.String,System.UInt16,System.String)">
            <summary>
            Parses the provided expression for ISO 8601 date and time values, and replaces them with the provided LCID and <see cref="T:Cuemon.DateTimeFormatPattern"/>.
            </summary>
            <param name="expression">The textual expression to parse and replace.</param>
            <param name="lcid">The localeId to create a specific Culture from.</param>
            <param name="pattern">A string representation of a <see cref="T:Cuemon.DateTimeFormatPattern"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.timespan(System.Int64,System.UInt16,System.String)">
            <summary>
            Creates a <see cref="T:System.TimeSpan"/> representation from the specified expression, and returns a string representation of the provided <see cref="T:Cuemon.Xml.Xsl.TimeSpanRepresentation"/> value.
            </summary>
            <param name="ticks">The ticks to represent a <see cref="T:System.TimeSpan"/> structure by.</param>
            <param name="lcid">The localeId to create a specific Culture from.</param>
            <param name="property">A string representation of <see cref="T:Cuemon.Xml.Xsl.TimeSpanRepresentation"/> value.</param>
            <returns>A string representation of the provided <see cref="T:Cuemon.Xml.Xsl.TimeSpanRepresentation"/> value.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.randomString">
            <summary>
            Generates a random string with the specified length using values of <see cref="F:Cuemon.StringUtility.AlphanumericCharactersCaseSensitive"/>.
            </summary>
            <returns>A random, fixed length string of eight, from the values of <see cref="F:Cuemon.StringUtility.AlphanumericCharactersCaseSensitive"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.randomString(System.UInt16)">
            <summary>
            Generates a random string with the specified length using values of <see cref="F:Cuemon.StringUtility.AlphanumericCharactersCaseSensitive"/>.
            </summary>
            <param name="length">The length of the random string to generate.</param>
            <returns>A random string from the values of <see cref="F:Cuemon.StringUtility.AlphanumericCharactersCaseSensitive"/>.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.datespan(System.String,System.String,System.UInt16,System.String)">
            <summary>
            Creates a <see cref="T:Cuemon.DateSpan"/> representation from the specified parameters, and returns a string representation of the provided <see cref="T:Cuemon.Xml.Xsl.DateSpanRepresentation"/> value.
            </summary>
            <param name="startDate">A string that specifies the starting date and time value for the <see cref="T:Cuemon.DateSpan"/> interval.</param>
            <param name="endDate">A string that specifies the ending date and time value for the <see cref="T:Cuemon.DateSpan"/> interval.</param>
            <param name="lcid">An integer that specifies a <see cref="T:System.Globalization.CultureInfo"/> to resolve a <see cref="T:System.Globalization.Calendar"/> object from.</param>
            <param name="property">A string representation of <see cref="T:Cuemon.Xml.Xsl.DateSpanRepresentation"/> value.</param>
            <returns></returns>
            <remarks>It is recommended that the expression is always represented in the ISO8601 date time format.</remarks>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.escapeNodeSet(System.Xml.XPath.XPathNodeIterator)">
            <summary>
            Escapes an <see cref="T:System.Xml.XPath.XPathNodeIterator"/> OuterXml property.
            </summary>
            <param name="iterator">The <see cref="T:System.Xml.XPath.XPathNodeIterator"/> OuterXml property to escape.</param>
            <returns>The <see cref="T:System.Xml.XPath.XPathNodeIterator"/> OuterXml property as an escaped string.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.escape(System.String)">
            <summary>
            Escapes the specified <paramref name="expression"/> the same way as the well known JavaScrip escape() function.
            </summary>
            <param name="expression">The <see cref="T:System.String"/> to escape.</param>
            <returns>The input <paramref name="expression"/> with an escaped equivalent.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.unEscape(System.String)">
            <summary>
            Unescapes the specified <paramref name="expression"/> the same way as the well known Javascript unescape() function.
            </summary>
            <param name="expression">The <see cref="T:System.String"/> to unescape.</param>
            <returns>The input <paramref name="expression"/> with an unescaped equivalent.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.stringToLower(System.String)">
            <summary>
            Converts the given parameter to lowercase using the casing rules of the invariant culture.
            </summary>
            <param name="expression">The expression to be converted.</param>
            <returns>A lowercase string.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.stringToUpper(System.String)">
            <summary>
            Converts the given parameter to uppercase using the casing rules of the invariant culture.
            </summary>
            <param name="expression">The expression to be converted.</param>
            <returns>An uppercase string.</returns>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltExtensionLibrary.replace(System.String,System.String,System.String)">
            <summary>
            Replaces all occurrences of the specified parameter 'find' with the other specified parameter 'replacement'.
            </summary>
            <param name="expression">The expression to perform the replace operation on.</param>
            <param name="find">The value to find in the expression.</param>
            <param name="replacement">The replacement to perform on the found value in the expression.</param>
            <returns>A string with the replaced values.</returns>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltExtensionLibrary.ExtensionObject">
            <summary>
            Gets an instance of the <see cref="T:Cuemon.Xml.Xsl.XsltExtensionLibrary"/> object.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Xsl.DateTimeRepresentation">
            <summary>
            Specifies various representation values of a <see cref="T:System.DateTime"/> structure.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Day">
            <summary>
            The day of the month by the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.DayOfWeek">
            <summary>
            The day of the week by the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.DayOfYear">
            <summary>
            The day of the year by the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Hour">
            <summary>
            The hour component of the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Millisecond">
            <summary>
            The millisecond component of the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Minute">
            <summary>
            The minute component of the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Month">
            <summary>
            The month component of the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Second">
            <summary>
            The seconds component of the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Ticks">
            <summary>
            The number of ticks that represents the date and time.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.TimeOfDay">
            <summary>
            The time of day of the date represented.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateTimeRepresentation.Year">
            <summary>
            The year of the date represented.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Xsl.DateSpanRepresentation">
            <summary>
            Specifies various representation values of a <see cref="T:Cuemon.DateSpan"/> structure.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Days">
            <summary>
            The number of days represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Hours">
            <summary>
            The number of hours represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Milliseconds">
            <summary>
            The number of milliseconds represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Minutes">
            <summary>
            The number of minutes represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Months">
            <summary>
            The number of months represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Seconds">
            <summary>
            The number of seconds represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Ticks">
            <summary>
            The number of ticks represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.Years">
            <summary>
            The number of years represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.TotalDays">
            <summary>
            The total number of days represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.TotalHours">
            <summary>
            The total number of hours represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.TotalMilliseconds">
            <summary>
            The total number of milliseconds represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.TotalMinutes">
            <summary>
            The total number of minutes represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.TotalMonths">
            <summary>
            The total number of months represented by the calculated datespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.DateSpanRepresentation.TotalSeconds">
            <summary>
            The total number of seconds represented by the calculated datespan.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Xsl.TimeSpanRepresentation">
            <summary>
            Specifies various representation values of a <see cref="T:System.TimeSpan"/> structure.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.Days">
            <summary>
            The number of whole days represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.Hours">
            <summary>
            The number of whole hours represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.Milliseconds">
            <summary>
            The number of whole milliseconds represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.Minutes">
            <summary>
            The number of whole minutes represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.Seconds">
            <summary>
            The number of whole seconds represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.TotalDays">
            <summary>
            The number of whole and fractional days represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.TotalHours">
            <summary>
            The number of whole and fractional hours represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.TotalMilliseconds">
            <summary>
            The number of whole and fractional milliseconds represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.TotalMinutes">
            <summary>
            The number of whole and fractional minutes represented by the timespan.
            </summary>
        </member>
        <member name="F:Cuemon.Xml.Xsl.TimeSpanRepresentation.TotalSeconds">
            <summary>
            The number of whole and fractional seconds represented by the timespan.
            </summary>
        </member>
        <member name="T:Cuemon.Xml.Xsl.XsltParameter">
            <summary>
            Represents a XSLT parameter to be used with the <see cref="T:System.Xml.Xsl.XsltArgumentList"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Xml.Xsl.XsltParameter.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Xml.Xsl.XsltParameter"/> class.
            </summary>
            <param name="name">The name to associate with the parameter.</param>
            <param name="namespaceUri">The namespace URI to associate with the parameter. To use the default namespace, specify an empty string.</param>
            <param name="value">The parameter value to add to the parameter.</param>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltParameter.Name">
            <summary>
            Gets or sets the name to associate with the parameter.
            </summary>
            <value>The name to associate with the parameter.</value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltParameter.NamespaceUri">
            <summary>
            Gets or sets the name space URI to associate with the parameter. To use the default namespace, specify an empty string.
            </summary>
            <value>The name space URI to associate with the parameter.</value>
        </member>
        <member name="P:Cuemon.Xml.Xsl.XsltParameter.Value">
            <summary>
            Gets or sets the value to add to the parameter.
            </summary>
            <value>The value to add to the parameter.</value>
        </member>
    </members>
</doc>
