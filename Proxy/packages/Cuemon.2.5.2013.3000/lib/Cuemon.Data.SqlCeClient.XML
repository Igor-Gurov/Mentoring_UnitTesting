<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cuemon.Data.SqlCeClient</name>
    </assembly>
    <members>
        <member name="T:Cuemon.Data.SqlCeClient.SqlCeDataConnection">
            <summary>
            Represents a wrapper object for an open connection to a SQL CE Server database.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeDataConnection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeDataConnection"/> class.
            </summary>
            <param name="connectionString">The connection string used to establish the connection.</param>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeDataConnection"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.CreateConnection">
            <summary>
            Create an underlying SQL connection (SqlConnect) object.
            </summary>
            <returns>The underlying SQL connection (SqlConnect) object.</returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel"></see> value.
            </summary>
            <param name="il">One of the <see cref="T:System.Data.IsolationLevel"></see> values.</param>
            <returns>
            An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
            <returns>
            An object representing the new transaction.
            </returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.ChangeDatabase(System.String)">
            <summary>
            Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">The name of the database to use in place of the current database.</param>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.Close">
            <summary>
            Closes the connection to the database.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.CreateCommand">
            <summary>
            Creates and returns a Command object associated with the connection.
            </summary>
            <returns>
            A Command object associated with the connection.
            </returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.Open">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString property of the provider-specific Connection object.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataConnection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Cuemon.Data.SqlCeClient.SqlCeDataConnection.State">
            <summary>
            Gets the current state of the connection.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Data.ConnectionState"></see> values.</returns>
        </member>
        <member name="T:Cuemon.Data.SqlCeClient.SqlCeDataManager">
            <summary>
            The SqlCeDataManager is the primary class of the <see cref="N:Cuemon.Data.SqlCeClient"/> namespace that can be used to execute commands of different database providers.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeDataManager"/> class.
            Will resolve the default data connection element from the calling application, using the ConfigurationManager to get a CuemonDataSection.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeDataManager"/> class.
            </summary>
            <param name="connectionString">The connection string used to establish the connection.</param>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.#ctor(Cuemon.Data.SqlCeClient.SqlCeDataConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeDataManager"/> class.
            </summary>
            <param name="dataConnection">The wrapper object for an open connection to a SQL Server database.</param>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.ExecuteIdentityInt32(Cuemon.Data.IDataCommand,System.Data.IDataParameter[])">
            <summary>
            Executes the command statement and returns an identity value as int.
            </summary>
            <param name="dataCommand">The data command to execute.</param>
            <param name="parameters">The parameters to use in the command.</param>
            <returns><see cref="T:System.Int32"/></returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.ExecuteIdentityInt64(Cuemon.Data.IDataCommand,System.Data.IDataParameter[])">
            <summary>
            Executes the command statement and returns an identity value as long.
            </summary>
            <param name="dataCommand">The data command to execute.</param>
            <param name="parameters">The parameters to use in the command.</param>
            <returns><see cref="T:System.Int64"/></returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.ExecuteIdentityDecimal(Cuemon.Data.IDataCommand,System.Data.IDataParameter[])">
            <summary>
            Executes the command statement and returns an identity value as decimal.
            </summary>
            <param name="dataCommand">The data command to execute.</param>
            <param name="parameters">The parameters to use in the command.</param>
            <returns><see cref="T:System.Decimal"/></returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.GetCommandCore(Cuemon.Data.IDataCommand,System.Data.IDataParameter[])">
            <summary>
            Gets the command object used by all execute related methods.
            </summary>
            <param name="dataCommand">The data command to execute.</param>
            <param name="parameters">The parameters to use in the command.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeDataManager.IsTransientFault(System.Exception)">
            <summary>
            Determines whether the specified <paramref name="exception" /> contains clues that would suggest a transient fault.
            </summary>
            <param name="exception">The <see cref="T:System.Exception" /> to parse for clues that would suggest a transient fault that should be retried.</param>
            <returns><c>true</c> if the specified <paramref name="exception" /> contains clues that would suggest a transient fault; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Cuemon.Data.SqlCeClient.SqlCeDataManager.ConnectionString">
            <summary>
            Gets the string used to open the connection.
            </summary>
            <value>The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection.</value>
        </member>
        <member name="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder">
            <summary>
            A Microsoft SQL CE implementation of the <see cref="T:Cuemon.Data.QueryBuilder"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder"/> class.
            </summary>
            <param name="tableName">The name of the table or view.</param>
            <param name="keyColumns">The key columns to be used in this <see cref="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder"/> instance.</param>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder"/> class.
            </summary>
            <param name="tableName">The name of the table or view.</param>
            <param name="keyColumns">The key columns to be used in this <see cref="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder"/> instance.</param>
            <param name="columns">The none-key columns to be used in this <see cref="T:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder"/> instance.</param>
        </member>
        <member name="M:Cuemon.Data.SqlCeClient.SqlCeQueryBuilder.GetQuery(Cuemon.Data.QueryType,System.String)">
            <summary>
            Create and returns the builded query from the specified <see cref="T:Cuemon.Data.QueryType"/>.
            </summary>
            <param name="queryType">Type of the query to create.</param>
            <param name="tableName">The name of the table or view. Overrides the class wide tableName.</param>
            <returns></returns>
        </member>
    </members>
</doc>
