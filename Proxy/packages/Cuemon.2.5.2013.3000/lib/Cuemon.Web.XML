<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cuemon.Web</name>
    </assembly>
    <members>
        <member name="T:Cuemon.Web.CdnGlobalModule">
            <summary>
            A <see cref="T:Cuemon.Web.GlobalModule"/> implementation that is tweaked for a Content Delivery Network (CDN) role with ASP.NET as the runtime platform.
            </summary>
        </member>
        <member name="T:Cuemon.Web.GlobalModule">
            <summary>
            An <see cref="T:System.Web.IHttpModule"/> substitute that shares and exceeds the old-school Global.asax implementation, while providing diagnostics capabilities.
            </summary>
            <remarks>
            For more information and a quick overview of the ASP.NET Application and Page Lifecycle, have a look here: http://files.meetup.com/1060099/asp.net_life_cycle_cheatsheet.pdf
            </remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleExceptionInterception(System.Web.HttpApplication)">
            <summary>
            Handles the exception interception. Especially useful for XML web services.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>
            This method controls the exception interception for both tradition ASP.NET runtime and the Windows Communication Foundation runtime.<br/>
            If <see cref="P:Cuemon.Web.GlobalModule.EnableExceptionToXmlInterception"/> is set to <c>true</c>, all content from the output buffer will be cleared in case of an unhandled exception and the exception itself will be written to the buffer stream as XML.<br/><br/>
            In order to do the same for a WCF enabled website, you must set <see cref="!:EnableWcfRestFaultXmlParsing"/> to <c>true</c> and specify the <see cref="!:ApplicationRuntime"/> to <see cref="!:Cuemon.Web.ApplicationRuntime.WindowsCommunicationFoundation"/>.
            Then all Fault related WCF message will be written as nicely formatted XML exceptions.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleExceptionInterception(System.Web.HttpApplication,System.Boolean)">
            <summary>
            Handles the interception of an unhandled exception.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="includeStackTrace">if set to <c>true</c> the stack trace of the exception is included in the rendered result.</param>
            <remarks>
            If <see cref="P:Cuemon.Web.GlobalModule.EnableExceptionToXmlInterception"/> is set to <c>true</c>, all content from the output buffer will be cleared in case of an unhandled exception and the exception itself will be written to the buffer stream as XML.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleUrlRouting(System.Web.HttpApplication)">
            <summary>
            Handles the URL routing of this module.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is called just after any custom implementation of <see cref="M:Cuemon.Web.GlobalModule.OnPostResolveRequestCache(System.Web.HttpApplication)"/>.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleDynamicContentExpiresHeaders(System.Web.HttpApplication)">
            <summary>
            Handles the expires headers of dynamic content - as in where an associated <see cref="P:System.Web.HttpContext.Handler"/> has been assigned (such as aspx, ashx, asmx and so forth).
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>Expires on dynamic content is default set to 5 minutes in the future IF query string and form variables is empty.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleDynamicContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan)">
            <summary>
            Handles the expires headers of dynamic content - as in where an associated <see cref="P:System.Web.HttpContext.Handler"/> has been assigned (such as aspx, ashx, asmx and so forth).
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <remarks>Default is <see cref="F:System.Web.HttpCacheability.Private"/> caching.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleDynamicContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan,System.Web.HttpCacheability)">
            <summary>
            Handles the expires headers of dynamic content - as in where an associated <see cref="P:System.Web.HttpContext.Handler"/> has been assigned (such as aspx, ashx, asmx and so forth).
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleStaticContentExpiresHeaders(System.Web.HttpApplication)">
            <summary>
            Handles the expires headers of static content.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>Expires on static content is default set to 7 days in the future. Also, since it can be costly to parse last modified on static files these are default cached for a 4-hours sliding cache expiration. <see cref="F:System.Web.HttpCacheability.Private"/> is default. You can override this method and change the values to your needs.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleStaticContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan)">
            <summary>
            Handles the expires headers of static content.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <remarks>Default is <see cref="F:System.Web.HttpCacheability.Private"/> caching.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleStaticContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan,System.Web.HttpCacheability)">
            <summary>
            Handles the expires headers of static content.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GetClientCompressionMethod(System.Web.HttpApplication)">
            <summary>
            Gets the client resolved compression method scheme.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <returns>The client resolved compression method scheme</returns>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GetClientCompressionMethod(System.Web.HttpRequest)">
            <summary>
            Gets the client resolved compression method scheme.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>The client resolved compression method scheme</returns>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleCompression(System.Web.HttpApplication)">
            <summary>
            Handles the compression of the <see cref="P:System.Web.HttpResponse.OutputStream"/>.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleCompression(System.Web.HttpApplication,System.String[])">
            <summary>
            Handles the compression of the <see cref="P:System.Web.HttpResponse.OutputStream"/>.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="fileExtensions">An array of file extensions to enable compression on.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.InitializeCompression(System.Web.HttpApplication,Cuemon.Web.CompressionMethodScheme)">
            <summary>
            Handles the initialization of compression for the <see cref="P:System.Web.HttpResponse.OutputStream"/>.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="compressionMethod">The compression method to apply to the HTTP Content-Encoding header.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes a module and prepares it to handle requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"></see> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_EndRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the EndRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostLogRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the PostLogRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_LogRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the LogRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostUpdateRequestCache(System.Object,System.EventArgs)">
            <summary>
            Handles the PostUpdateRequestCache event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_UpdateRequestCache(System.Object,System.EventArgs)">
            <summary>
            Handles the UpdateRequestCache event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_ReleaseRequestState(System.Object,System.EventArgs)">
            <summary>
            Handles the ReleaseRequestState event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            Handles the PostRequestHandlerExecute event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_AcquireRequestState(System.Object,System.EventArgs)">
            <summary>
            Handles the AcquireRequestState event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_MapRequestHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the MapRequestHandler event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_ResolveRequestCache(System.Object,System.EventArgs)">
            <summary>
            Handles the ResolveRequestCache event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostAuthorizeRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the PostAuthorizeRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostAuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the PostAuthenticateRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_AuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the AuthenticateRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the BeginRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.AppPool_Stopped(System.Object,System.EventArgs)">
            <summary>
            Handles the DomainUnload event of the AppDomain.CurrentDomain control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_Disposed(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposed event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PreSendRequestContent(System.Object,System.EventArgs)">
            <summary>
            Handles the PreSendRequestContent event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GlobalModule_SendRequestContent(System.Object,System.EventArgs)">
            <summary>
            Handles the SendRequestContent event of the GlobalModule control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="eventArgs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PreRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            Handles the PreRequestHandlerExecute event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_PreInit(System.Object,System.EventArgs)">
            <summary>
            Handles the PreInit event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_InitComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the InitComplete event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_PreLoad(System.Object,System.EventArgs)">
            <summary>
            Handles the PreLoad event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_LoadComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the LoadComplete event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_PreRender(System.Object,System.EventArgs)">
            <summary>
            Handles the PreRender event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_PreRenderComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the PreRenderComplete event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_SaveStateComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the SaveStateComplete event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Page_Unload(System.Object,System.EventArgs)">
            <summary>
            Handles the Unload event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PreSendRequestHeaders(System.Object,System.EventArgs)">
            <summary>
            Handles the PreSendRequestHeaders event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostReleaseRequestState(System.Object,System.EventArgs)">
            <summary>
            Handles the PostReleaseRequestState event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_Error(System.Object,System.EventArgs)">
            <summary>
            Handles the Error event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_AuthorizeRequest(System.Object,System.EventArgs)">
            <summary>
            Handles the AuthorizeRequest event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostResolveRequestCache(System.Object,System.EventArgs)">
            <summary>
            Handles the PostResolveRequestCache event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostMapRequestHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the PostMapRequestHandler event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HttpApplication_PostAcquireRequestState(System.Object,System.EventArgs)">
            <summary>
            Handles the PostAcquireRequestState event of the HttpApplication control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"></see>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleHtmlRelatedContentParsing(System.Web.HttpApplication)">
            <summary>
            Handles the parsing of HTML related content. Argument {0} is replaced with a computed checksum.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>
            This method will resolve a <see cref="T:Cuemon.Caching.CacheValidator"/> from these prioritized implementations:
            <list type="table">
                <listheader>
                    <term>Priority</term>
                    <description>Implementation</description>
                </listheader>
                <item>
                    <term>1</term>
                    <description><c><see cref="T:Cuemon.Web.ICacheableHttpHandler"/></c></description>
                </item>
                <item>
                    <term>2</term>
                    <description><see cref="T:Cuemon.Web.ISearchEngineOptimizer"/></description>
                </item>
                <item>
                    <term>3</term>
                    <description>Lookup the physical file (if possible) for the current request.</description>
                </item>
            </list>
            Should none of the above be successful an instance of <see cref="P:Cuemon.Caching.CacheValidator.Default"/> is used.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.HandleHtmlRelatedContentParsing(System.Web.HttpApplication,Cuemon.Caching.CacheValidator)">
            <summary>
            Handles the parsing of the HTML related content and uses <see cref="P:Cuemon.Caching.CacheValidator.Checksum"/> from the specified <paramref name="validator"/> to associate with the content being processed. Argument {0} is replaced with the <see cref="P:Cuemon.Caching.CacheValidator.Checksum"/> value.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.IsHtmlRelatedContent(System.Web.HttpApplication)">
            <summary>
            Determines whether the <see cref="P:System.Web.HttpResponse.ContentType"/> of the specified <paramref name="context"/> is suitable for token parsing of HTML-related content for guaranteed client-caching refresh.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <returns>
              <c>true</c> if the <see cref="P:System.Web.HttpResponse.ContentType"/> of the specified <paramref name="context"/> is suitable for token parsing of HTML-related content for guaranteed client-caching refresh; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:Cuemon.Web.GlobalModule.Locker">
            <summary>
            Returns an object that can be used to synchronize access to the <see cref="T:Cuemon.Web.GlobalModule"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnApplicationStart(System.Web.HttpApplication)">
            <summary>
            Provides access to the ApplicationStart event that occurs when an AppPool is first started.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked only once as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnApplicationEnd(System.AppDomain)">
            <summary>
            Provides access to the ApplicationEnd event that occurs when an AppPool is either forced stopped or simply crashed.
            </summary>
            <param name="domain">The application domain of the ASP.NET application.</param>
            <remarks>This method is invoked when the <paramref name="domain"/> is about to be unloaded.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnDisposed(System.Web.HttpApplication)">
            <summary>
            Provides access to the Disposed event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when the application is disposed.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnBeginRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the BeginRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnAuthenticateRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the AuthenticateRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when a security module is establishing the identity of the user.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostAuthenticateRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostAuthenticateRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when a security module has established the identity of the user.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnAuthorizeRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the AuthorizeRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when a security module has verified user authorization.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostAuthorizeRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostAuthorizeRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when the user for the current request has been authorized.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnResolveRequestCache(System.Web.HttpApplication)">
            <summary>
            Provides access to the ResolveRequestCache event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostResolveRequestCache(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostResolveRequestCache event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnMapRequestHandler(System.Web.HttpApplication)">
            <summary>
            Provides access to the MapRequestHandler event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when the handler is selected to respond to the request.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostMapRequestHandler(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostMapRequestHandler event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET has mapped the current request to the appropriate event handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnAcquireRequestState(System.Web.HttpApplication)">
            <summary>
            Provides access to the AcquireRequestState event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when when ASP.NET acquires the current state hat is associated with the current request.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostAcquireRequestState(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostAcquireRequestState event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when the request state that is associated with the current request has been obtained.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreRequestHandlerExecute(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreRequestHandlerExecute event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET starts executing an event handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreInit(System.Web.UI.Page)">
            <summary>
            Provides access to the PreInit event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked at the beginning of <paramref name="page"/> initialization.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnInit(System.Web.UI.Page)">
            <summary>
            Provides access to the Init event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked when the <paramref name="page"/> is initialized, which is the first step in its lifecycle.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnInitComplete(System.Web.UI.Page)">
            <summary>
            Provides access to the InitComplete event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked when <paramref name="page"/> initialization is complete.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreLoad(System.Web.UI.Page)">
            <summary>
            Provides access to the PreLoad event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked just before the <paramref name="page"/> load event.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnLoad(System.Web.UI.Page)">
            <summary>
            Provides access to the Load event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked when the <paramref name="page"/> loads.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnLoadComplete(System.Web.UI.Page)">
            <summary>
            Provides access to the LoadComplete event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked at the end of the load stage of the <paramref name="page"/> life cycle.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreRender(System.Web.UI.Page)">
            <summary>
            Provides access to the PreRender event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked after the <paramref name="page"/> is loaded but prior to rendering.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreRenderComplete(System.Web.UI.Page)">
            <summary>
            Provides access to the PreRenderComplete event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked before the <paramref name="page"/> content is rendered.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnSaveStateComplete(System.Web.UI.Page)">
            <summary>
            Provides access to the SaveStateComplete event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked after the <paramref name="page"/> has completed saving all view state and control state information for the <paramref name="page"/> and controls on the <paramref name="page"/>.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnUnload(System.Web.UI.Page)">
            <summary>
            Provides access to the SaveStateComplete event of the currently executing <see cref="T:System.Web.UI.Page"/> control.
            </summary>
            <param name="page">The page handler of the current request.</param>
            <remarks>This method is invoked when the <paramref name="page"/> is unloaded from memory.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostRequestHandlerExecute(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostRequestHandlerExecute event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET starts executing an event handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnReleaseRequestState(System.Web.HttpApplication)">
            <summary>
            Provides access to the ReleaseRequestState event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked after ASP.NET finishes executing all request event handlers. This event causes state modules to save the current state data.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostReleaseRequestState(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostReleaseRequestState event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET has completed executing all request event handlers and the request state data has been stored.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnUpdateRequestCache(System.Web.HttpApplication)">
            <summary>
            Provides access to the UpdateRequestCache event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostUpdateRequestCache(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostUpdateRequestCache event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnLogRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the LogRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET performs any logging for the current request.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPostLogRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostLogRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when ASP.NET has completed processing all the event handlers for the LogRequest event.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnEndRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the EndRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreSendRequestHeaders(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreSendRequestHeaders event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET sends HTTP headers to the client.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnPreSendRequestContent(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreSendRequestContent event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET sends content to the client.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnSendRequestContent(System.Web.HttpApplication)">
            <summary>
            Provides access to the SendRequestContent event of the <see cref="T:Cuemon.Web.GlobalModule"/> class.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET sends content to the client but after the processing of <see cref="M:Cuemon.Web.GlobalModule.OnPreSendRequestContent(System.Web.HttpApplication)"/>.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.OnError(System.Web.HttpApplication,System.Exception)">
            <summary>
            Provides access to the Error event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="lastException">The last captured exception.</param>
            <remarks>This method is invoked when an unhandled exception is thrown.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GetReferencedTypes(System.Type)">
            <summary>
            Gets all referenced types matching the specified <paramref name="filter"/>.
            </summary>
            <param name="filter">The <see cref="T:System.Type"/> that must be present in the inheritance chain.</param>
            <returns>An <see cref="T:Cuemon.Collections.Generic.IReadOnlyCollection`1"/> containing all <paramref name="filter"/> implemented types of this ASP.NET application.</returns>
            <remarks><see cref="T:System.Type"/> from assemblies starting with <b>Cuemon</b>, <b>System</b> or <b>Microsoft</b> is excluded from the result.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GetReferencedTypes(System.Type,System.String[])">
            <summary>
            Gets all referenced types matching the specified <paramref name="filter"/>.
            </summary>
            <param name="filter">The <see cref="T:System.Type"/> that must be present in the inheritance chain.</param>
            <param name="excludeAssembliesStartingWith">A sequence of assemblies to exclude from the result by matching the beginning of each string in the sequence.</param>
            <returns>An <see cref="T:Cuemon.Collections.Generic.IReadOnlyCollection`1"/> containing all <paramref name="filter"/> implemented types of this ASP.NET application.</returns>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GetReferencedHandlerTypes">
            <summary>
            Gets all referenced <see cref="T:System.Web.IHttpHandler"/> types of this ASP.NET application.
            </summary>
            <returns>An <see cref="T:Cuemon.Collections.Generic.IReadOnlyCollection`1"/> containing all <see cref="T:System.Web.IHttpHandler"/> implemented types of this ASP.NET application.</returns>
            <remarks><see cref="T:System.Web.IHttpHandler"/> implementations from assemblies starting with <b>Cuemon</b>, <b>System</b> or <b>Microsoft</b> is excluded from the result.</remarks>
        </member>
        <member name="M:Cuemon.Web.GlobalModule.GetReferencedModuleTypes">
            <summary>
            Gets all referenced <see cref="T:System.Web.IHttpModule"/> types of this ASP.NET application.
            </summary>
            <returns>An <see cref="T:Cuemon.Collections.Generic.IReadOnlyCollection`1"/> containing all <see cref="T:System.Web.IHttpModule"/> implemented types of this ASP.NET application.</returns>
            <remarks><see cref="T:System.Web.IHttpHandler"/> implementations from assemblies starting with <b>Cuemon</b>, <b>System</b> or <b>Microsoft</b> is excluded from the result.</remarks>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.EnableExceptionToXmlInterception">
            <summary>
            Gets or sets a value indicating whether exceptions should be intercepted and converted to XML. Default is false.
            </summary>
            <value>
            	<c>true</c> if exceptions should be intercepted and converted to XML; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.EnableStaticClientCaching">
            <summary>
            Gets or sets a value indicating whether client-caching of static content is enabled. Default is false.
            </summary>
            <value>
              <c>true</c> if client-caching of static content is enabled; otherwise, <c>false</c>.
            </value>
            <remarks>Client caching is a matter of allowing content - static as well as dynamic - to be cached locally on the client visiting your website.</remarks>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.EnableDynamicClientCaching">
            <summary>
            Gets or sets a value indicating whether client-caching of dynamic content is enabled. Default is false.
            </summary>
            <value>
            	<c>true</c> if client-caching of dynamic content is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.EnableCompression">
            <summary>
            Gets or sets a value indicating whether compression is enabled. Default is false.
            </summary>
            <value>
            	<c>true</c> if compression is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Cuemon.Web.GlobalModule.SendRequestContent">
            <summary>
            Occurs after the PreSendRequestContent event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.WebEntryAssembly">
            <summary>
            Gets the assembly that is part of this ASP.NET application.
            </summary>
            <value>The assembly that is part of this ASP.NET application.</value>
            <remarks>This property is set just before <see cref="M:Cuemon.Web.GlobalModule.OnApplicationStart(System.Web.HttpApplication)"/> is invoked. Because of the nature in ASP.NET this property may contain null.</remarks>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.IsHeadersWrittenDoToIisAdaptiveErrorLifecycleViolation">
            <summary>
            Gets a value indicating whether the ASP.NET lifecycle associated <see cref="T:System.Web.HttpResponse"/> has its headers written prematurely do to IIS adaptive error lifecycle violation.
            </summary>
            <value><c>true</c> if the ASP.NET lifecycle associated <see cref="T:System.Web.HttpResponse"/> has its headers written prematurely do to IIS adaptive error lifecycle violation; otherwise, <c>false</c>.</value>
            <remarks>
            Unfortunately some engineers at the Microsoft .NET Team and IIS Team decided to implement an internal UseAdaptiveError feature.<br/>
            What this does is that if an error code server side is &gt;400 and &lt;600 the resulting status code to your code is translated to 200 and headers as well as content is transferred automatically by IIS bypassing the otherwise well established ASP.NET Life Cycle.<br/><br/>
            IMO this is as much a deal breaker as it is a design flaw as one should unconditionally be able to trust the ASP.NET Lifecycle.<br/><br/>
            Headers to the client should NEVER (and let me emphasis that) NEVER be send until after <see cref="M:Cuemon.Web.GlobalModule.OnPreSendRequestHeaders(System.Web.HttpApplication)"/> (which is equivalent to <see cref="E:System.Web.HttpApplication.PreSendRequestHeaders"/>) just as client content should be sent AFTER <see cref="M:Cuemon.Web.GlobalModule.OnPreSendRequestContent(System.Web.HttpApplication)"/> (which is equivalent to <see cref="E:System.Web.HttpApplication.PreSendRequestContent"/>).
            </remarks>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.EnableTokenParsingForClientCaching">
            <summary>
            Gets or sets a value indicating whether token parsing of HTML-related content is enabled for guaranteed client-caching refresh.
            </summary>
            <value>
            	<c>true</c> if token parsing of HTML-related content is enabled for guaranteed client-caching refresh; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.Cache">
            <summary>
            Gets a reference to the <see cref="P:Cuemon.Caching.CachingManager.Cache"/> object.
            </summary>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.IsStandaloneWebsite">
            <summary>
            Gets or sets a value indicating whether this module can run as a standalone website. Default is <c>false</c>.
            </summary>
            <value><c>true</c> if this this module can run as a standalone website; otherwise, <c>false</c>.</value>
            <remarks>This property will instruct the module to use internal methods optimized for a standalone website.</remarks>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.HasIisIntegratedPipelineMode">
            <summary>
            Gets a value indicating whether this instance benefits from the IIS integrated pipeline mode.
            </summary>
            <value>
            	<c>true</c> if this instance can benefit from the IIS integrated pipeline mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.AppPoolUptime">
            <summary>
            Gets the elapsed time expressed as a <see cref="T:System.TimeSpan"/> since the application pool, where this <see cref="T:Cuemon.Web.GlobalModule"/> is residing, was started.
            </summary>
        </member>
        <member name="P:Cuemon.Web.GlobalModule.MeasuredApplicationLifecycle">
            <summary>
            Gets the measured application life cycle.
            </summary>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.OnApplicationStart(System.Web.HttpApplication)">
            <summary>
            Provides access to the ApplicationStart event that occurs when an AppPool is first started.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked only once as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</remarks>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.OnPostResolveRequestCache(System.Web.HttpApplication)">
            <summary>
            Provides access to the PostResolveRequestCache event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.OnAuthorizeRequest(System.Web.HttpApplication)">
            <summary>
            Provides access to the AuthorizeRequest event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked when a security module has verified user authorization.</remarks>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.HandleTokenParsingUrlRouting(System.Web.HttpApplication)">
            <summary>
             Handles the URL routing of the result from the query-string token parsing.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.HandleStaticContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan,System.Web.HttpCacheability)">
            <summary>
            Handles the expires headers of static content.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.HandleDynamicContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan,System.Web.HttpCacheability)">
            <summary>
            Handles the expires headers of dynamic content - as in where an associated <see cref="P:System.Web.HttpContext.Handler"/> has been assigned (such as aspx, ashx, asmx and so forth).
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.OnPreRequestHandlerExecute(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreRequestHandlerExecute event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET starts executing an event handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.CdnGlobalModule.OnPreSendRequestHeaders(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreSendRequestHeaders event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET sends HTTP headers to the client.</remarks>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebConfigurationUtility">
            <summary>
            This utility class is designed to make operations related to a Web.config file easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.OpenWebConfiguration(System.String)">
            <summary>
            Opens the Web-application configuration file as an object that implements the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface using the specified virtual path to allow read or write operations.
            </summary>
            <param name="path">The virtual path to the configuration file.</param>
            <returns>An object that implements the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="path"/> is null.
            </exception>
            <exception cref="T:Cuemon.ArgumentEmptyException">
            <paramref name="path"/> is empty.
            </exception>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.GetSystemHandlers">
            <summary>
            Returns all system handlers of the default (root) Web-application configuration file and derived.
            </summary>
            <returns>A sequence of <see cref="T:System.Web.Configuration.HttpHandlerAction"/> elements.</returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.GetSystemHandlers(System.String)">
            <summary>
            Returns all system handlers of the default (root) Web-application configuration file and derived.
            </summary>
            <param name="path">The virtual path to the configuration file.</param>
            <returns>A sequence of <see cref="T:System.Web.Configuration.HttpHandlerAction"/> elements.</returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.GetHandlers">
            <summary>
            Returns the handlers section of the default (root) Web-application configuration file.
            </summary>
            <returns>A sequence of <see cref="T:System.Web.Configuration.HttpHandlerAction"/> elements.</returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.GetHandlers(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns the system.webServer/handlers and/or system.web/httpHandlers section of the specified <paramref name="webConfiguration"/> file.
            </summary>
            <param name="webConfiguration">An object that implements the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface and represent a Web-application configuration file.</param>
            <returns>A sequence of <see cref="T:System.Web.Configuration.HttpHandlerAction"/> elements.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="webConfiguration"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The content of the specified <paramref name="webConfiguration"/> does not appear to be from a web.config file.
            </exception>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.GetHandler``1">
            <summary>
            Returns the handler of the handlers section of the default (root) Web-application configuration file whos @type matches the specified <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Web.Configuration.HttpHandlerAction"/> to retreive.</typeparam>
            <returns>A <see cref="T:System.Web.Configuration.HttpHandlerAction"/> object whos <see cref="P:System.Web.Configuration.HttpHandlerAction.Type"/> property matches the specified <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebConfigurationUtility.GetHandler``1(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns the handler of the handlers section of the specified <paramref name="webConfiguration"/> file whos @type matches the specified <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the <see cref="T:System.Web.Configuration.HttpHandlerAction"/> to retreive.</typeparam>
            <param name="webConfiguration">An object that implements the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface and represent a Web-application configuration file.</param>
            <returns>A <see cref="T:System.Web.Configuration.HttpHandlerAction"/> object whos <see cref="P:System.Web.Configuration.HttpHandlerAction.Type"/> property matches the specified <typeparamref name="T"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="webConfiguration"/> is null.
            </exception>
        </member>
        <member name="T:Cuemon.Web.HttpResponseFilter">
            <summary>
            An abstract class representing a <see cref="P:System.Web.HttpResponse.Filter"/> whose backing store is memory.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.#ctor(System.Web.HttpApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpResponseFilter"/> class.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous read operation.
            </summary>
            <param name="buffer">The buffer to read the data into.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> at which to begin writing data read from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="callback">An optional asynchronous callback, to be called when the read is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests.</param>
            <returns>
            An <see cref="T:System.IAsyncResult"/> that represents the asynchronous read, which could still be pending.
            </returns>
            <exception cref="T:System.IO.IOException">
            Attempted an asynchronous read past the end of the stream, or a disk error occurs.
              </exception>
              
            <exception cref="T:System.ArgumentException">
            One or more of the arguments is invalid.
              </exception>
              
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
              </exception>
              
            <exception cref="T:System.NotSupportedException">
            The current Stream implementation does not support the read operation.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous write operation.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> from which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="callback">An optional asynchronous callback, to be called when the write is complete.</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests.</param>
            <returns>
            An IAsyncResult that represents the asynchronous write, which could still be pending.
            </returns>
            <exception cref="T:System.IO.IOException">
            Attempted an asynchronous write past the end of the stream, or a disk error occurs.
              </exception>
              
            <exception cref="T:System.ArgumentException">
            One or more of the arguments is invalid.
              </exception>
              
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
              </exception>
              
            <exception cref="T:System.NotSupportedException">
            The current Stream implementation does not support the write operation.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.EndRead(System.IAsyncResult)">
            <summary>
            Waits for the pending asynchronous read to complete.
            </summary>
            <param name="asyncResult">The reference to the pending asynchronous request to finish.</param>
            <returns>
            The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="asyncResult"/> is null.
              </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream.
              </exception>
              
            <exception cref="T:System.IO.IOException">
            The stream is closed or an internal error has occurred.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.EndWrite(System.IAsyncResult)">
            <summary>
            Ends an asynchronous write operation.
            </summary>
            <param name="asyncResult">A reference to the outstanding asynchronous I/O request.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="asyncResult"/> is null.
              </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream.
              </exception>
              
            <exception cref="T:System.IO.IOException">
            The stream is closed or an internal error has occurred.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the current stream and writes the data to <paramref name="buffer"/>.
            </summary>
            <param name="buffer">When this method returns, contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the characters read from the current stream.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> at which to begin reading.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>
            The total number of bytes written into the buffer. This can be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached before any bytes are read.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null.
              </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> is negative.
              </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="offset"/> subtracted from the buffer length is less than <paramref name="count"/>.
              </exception>
              
            <exception cref="T:System.ObjectDisposedException">
            The current stream instance is closed.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.ReadByte">
            <summary>
            Reads a byte from the current stream.
            </summary>
            <returns>
            The byte cast to a <see cref="T:System.Int32"/>, or -1 if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            The current stream instance is closed.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream to the specified value.
            </summary>
            <param name="offset">The new position within the stream. This is relative to the <paramref name="origin"/> parameter, and can be positive or negative.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/>, which acts as the seek reference point.</param>
            <returns>
            The new position within the stream, calculated by combining the initial reference point and the offset.
            </returns>
            <exception cref="T:System.IO.IOException">
            Seeking is attempted before the beginning of the stream.
              </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> is greater than <see cref="F:System.Int32.MaxValue"/>.
              </exception>
              
            <exception cref="T:System.ArgumentException">
            There is an invalid <see cref="T:System.IO.SeekOrigin"/>.
            -or-
              <paramref name="offset"/> caused an arithmetic overflow.
              </exception>
              
            <exception cref="T:System.ObjectDisposedException">
            The current stream instance is closed.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream to the specified value.
            </summary>
            <param name="value">The value at which to set the length.</param>
            <exception cref="T:System.NotSupportedException">
            The current stream is not resizable and <paramref name="value"/> is larger than the current capacity.
            -or-
            The current stream does not support writing.
              </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="value"/> is negative or is greater than the maximum length of the <see cref="T:System.IO.MemoryStream"/>, where the maximum length is(<see cref="F:System.Int32.MaxValue"/> - origin), and origin is the index into the underlying buffer at which the stream starts.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a block of bytes to the current stream using data read from buffer.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> at which to begin writing from.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null.
              </exception>
              
            <exception cref="T:System.NotSupportedException">
            The stream does not support writing. For additional information see <see cref="P:System.IO.Stream.CanWrite"/>.
            -or-
            The current position is closer than <paramref name="count"/> bytes to the end of the stream, and the capacity cannot be modified.
              </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="offset"/> subtracted from the buffer length is less than <paramref name="count"/>.
              </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> are negative.
              </exception>
              
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
              </exception>
              
            <exception cref="T:System.ObjectDisposedException">
            The current stream instance is closed.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current stream at the current position.
            </summary>
            <param name="value">The byte to write.</param>
            <exception cref="T:System.NotSupportedException">
            The stream does not support writing. For additional information see <see cref="P:System.IO.Stream.CanWrite"/>.
            -or-
            The current position is at the end of the stream, and the capacity cannot be modified.
              </exception>
              
            <exception cref="T:System.ObjectDisposedException">
            The current stream is closed.
              </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryStream"/> class and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseFilter.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value><c>true</c> if this instance is disposed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.ChainedOutputFilter">
            <summary>
            Gets or sets an object that is used to modify the HTTP entity body before transmission.
            </summary>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream is open.
              </returns>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream is open.
              </returns>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.
            </returns>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <value>The length of the stream in bytes.</value>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:Cuemon.Web.HttpResponseFilter.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <value>The position within the stream.</value>
            <returns>The current position within the stream.</returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.ApplicationSection">
            <summary>
            Represents a Cuemon/Web/%APPLICATION_NAME% configuration element within a configuration file.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.ApplicationSection.GetWebsiteFromCollection(System.String)">
            <summary>
            Gets the website from collection that matches the given host header.
            </summary>
            <param name="hostHeader">The host header to retreive a website from.</param>
            <returns>An <see cref="T:Cuemon.Web.Configuration.WebsiteElement"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.ApplicationSection.GetWebsiteFromCollection(System.Guid)">
            <summary>
            Gets the website from collection that matches the given identifier.
            </summary>
            <param name="id">The website identifier.</param>
            <returns>An <see cref="T:Cuemon.Web.Configuration.WebsiteElement"/> object.</returns>
        </member>
        <member name="P:Cuemon.Web.Configuration.ApplicationSection.Websites">
            <summary>
            Gets the available websites from your configuration file.
            </summary>
            <value>The websites as entered in your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteCompressionElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/RequestPipelineProcessing configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteCompressionElement.FileExtensions">
            <summary>
            Gets or sets a comma delimited string of file extensions to include when determining what to dynamically compress.
            </summary>
            <value>A comma delimited string of file extensions to include when determining what to dynamically compress.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Caching/ExpiresHeaders/add configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.Expires">
            <summary>
            Gets or sets the expires value to be used in conjuction with the <see cref="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.Unit"/> attribute.
            </summary>
            <value>The expires value to be used in conjuction with the <see cref="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.Unit"/> attribute.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.Unit">
            <summary>
            Gets or sets the unit (Seconds, Minutes, Hours, Days, Months, Years) to use in conjuction with the <see cref="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.Expires"/> attribute.
            </summary>
            <value>The unit (Seconds, Minutes, Hours, Days, Months, Years) to use in conjuction with the <see cref="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.Expires"/> attribute.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement.FileExtensions">
            <summary>
            Gets or sets a comma delimited string of file extensions to match when applying the expires header.
            </summary>
            <value>A comma delimited string of file extensions to match when applying the expires header.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteCachingExpiresHeaderElement"></see>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteCachingElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Caching configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteCachingElement.ExpiresHeaders">
            <summary>
            Gets the available expires headers from your configuration file.
            </summary>
            <value>The expires headers as entered in your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteRequestPipelineProcessingElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/RequestPipelineProcessing configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteRequestPipelineProcessingElement.FileExtensions">
            <summary>
            Gets or sets a comma delimited string of file extensions to include when determining requests for pipeline processing.
            </summary>
            <value>A comma delimited string of file extensions to include when determining requests for pipeline processing.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteDataConnectionElement">
            <summary>
            Represents a configuration element within a configuration file (@name, @address, @database, @networkLibrary, @password, @timeout, @userId).
            </summary>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteDataConnectionElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteDataConnectionElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteDataConnectionElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteDataConnectionElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteDataConnectionElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteDataConnectionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteDataConnectionElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteDataConnectionElement"></see>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteDataElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Data configuration element within a configuration file.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteDataElement.GetDefaultConnectionFromCollection">
            <summary>
            Gets the default connection from the connection collection as specified in the corresponding attribute.
            </summary>
            <returns>The default connection as specified in the corresponding attribute.</returns>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteDataElement.DefaultConnection">
            <summary>
            Gets or sets the default connection for your appliation.
            </summary>
            <value>The default connection to use in your application.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteDataElement.Connections">
            <summary>
            Gets the available connections from your configuration file.
            </summary>
            <value>The connections as entered in your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteRobotsElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Robots configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteRobotsElement.ExclusionFile">
            <summary>
            Gets or sets the robots exclusion XML file of the <see cref="T:Cuemon.Web.WebsiteRobots"/>.
            </summary>
            <value>The robots exclusion XML file of the <see cref="T:Cuemon.Web.WebsiteRobots"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteRobotsElement.ExclusionStyleSheetFile">
            <summary>
            Gets or sets the corresponding robots exclusion XSLT file of the <see cref="T:Cuemon.Web.WebsiteRobots"/>.
            </summary>
            <value>The corresponding robots exclusion XSLT file of the <see cref="T:Cuemon.Web.WebsiteRobots"/>.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteBindingElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Bindings/add configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteBindingElement.ProtocolType">
            <summary>
            Gets or sets the type of the protocol to be used for this binding.
            </summary>
            <value>The type of the protocol to used for this binding.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteBindingElement.HostHeader">
            <summary>
            Gets or sets the host header for this binding.
            </summary>
            <value>The host header for this binding.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteBindingElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteBindingElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteBindingElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteBindingElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteBindingElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteBindingElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteBindingElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteBindingElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteBindingElementCollection.HasBinding(System.String)">
            <summary>
            Determines whether the specified host header has the necessary binding.
            </summary>
            <param name="hostHeader">The host header to search for.</param>
            <returns>
            	<c>true</c> if the specified host header has the necessary binding; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebSectionGroup">
            <summary>
            Represents a group of related sections within a configuration file (Web).
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebSectionGroup.Web">
            <summary>
            Gets the web section group element.
            </summary>
            <value>The web section group element.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.UISection">
            <summary>
            Represents a Cuemon/Web/UI configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.UISection.Page">
            <summary>
            Gets the Page element from your configuration file.
            </summary>
            <value>The Page element from your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebSection">
            <summary>
            Represents a Web section within a configuration file.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebSection.GetApplication(System.String)">
            <summary>
            Gets the base application element from your configuration file.
            </summary>
            <param name="name">The name of the application you wish to retreive.</param>
            <returns></returns>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebSection.UI">
            <summary>
            Gets the available UI from your configuration file.
            </summary>
            <value>The UI meta data as entered in your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Globalization/CultureInfos/add configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement.LCID">
            <summary>
            Gets or sets the LCID of the supported culture.
            </summary>
            <value>The LCID of the supported culture.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement.PhraseFile">
            <summary>
            Gets or sets the XML phrase file.
            </summary>
            <value>The XML phrase file.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement.SiteMapFile">
            <summary>
            Gets or sets the sitemap file to retrieve.
            </summary>
            <value>The sitemap file to retrieve.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement.PhraseStyleSheetFile">
            <summary>
            Gets or sets the phrase XSTL style sheet file.
            </summary>
            <value>The phrase XSLT style sheet file.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement.TimeZoneInfo">
            <summary>
            Gets or sets the name of the time zone to use.
            </summary>
            <value>The name of the time zone to use.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement.EncodingName">
            <summary>
            Gets or sets the encoding name of the supported culture.
            </summary>
            <value>The encoding name to use for the supported culture.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement"></see>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteGlobalizationElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Globalization configuration element within a configuration file.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteGlobalizationElement.GetDefaultCultureInfoFromCollection">
            <summary>
            Gets the default cultureinfo from the cultureinfo collection as specified in the corresponding attribute.
            </summary>
            <returns>The default cultureinfo as specified in the corresponding attribute.</returns>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationElement.DefaultCultureInfo">
            <summary>
            Gets or sets the default culture to use.
            </summary>
            <value>The default culture to use.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationElement.DefaultTimeZoneInfo">
            <summary>
            Gets or sets the name of the default time zone to use.
            </summary>
            <value>The name of the default time zone to use.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationElement.DefaultPhraseStyleSheetFile">
            <summary>
            Gets or sets the default dictionary style sheet to use.
            </summary>
            <value>The default dictionary style sheet to use.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationElement.DefaultEncodingName">
            <summary>
            Gets or sets the name of the default encoding name to use.
            </summary>
            <value>The name of the default encoding name to use.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteGlobalizationElement.CultureInfos">
            <summary>
            Gets the available cultures from your configuration file.
            </summary>
            <value>The cultures as entered in your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteMaintenanceElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Maintenance configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteMaintenanceElement.RedirectOnEnabled">
            <summary>
            Gets or sets the redirect URL to be used when maintenance is enabled.
            </summary>
            <value>The redirect URL to execute to be used when maintenance is enabled.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteSecurityElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Security configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteSecurityElement.DefaultHasAccess">
            <summary>
            Gets or sets a value indicating whether access is granted.
            </summary>
            <value><c>true</c> if access is granted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteSecurityElement.DefaultTransferOnStatusCodeForbidden">
            <summary>
            Gets or sets the default transfer URL on denied access (403:Forbidden).
            </summary>
            <value>The default transfer URL on denied access (403:Forbidden).</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteSecurityElement.IPRestrictions">
            <summary>
            Gets the available ip restrictions from your configuration file.
            </summary>
            <value>The ip restrictions as entered in your configuration file.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Security/IPRestrictions/add configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement.RemoteAddress">
            <summary>
            Gets or sets the remote address to grant or deny access.
            </summary>
            <value>The remote address to grant or deny access.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement.HasAccess">
            <summary>
            Gets or sets a value indicating whether the remote host address has access.
            </summary>
            <value>
            	<c>true</c> if the remote host address has access; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement.Transfer">
            <summary>
            Gets or sets the optional redirect URL to use on denied access.
            </summary>
            <value>The optional redirect URL to use on denied access.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement"></see>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.UI.PageElement">
            <summary>
            Represents a Cuemon/Web/UI/Page configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.UI.PageElement.EnableDebug">
            <summary>
            Gets or sets a value indicating whether debugging is enabled.
            </summary>
            <value><c>true</c> if debugging is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.UI.PageElement.EnableRenderCache">
            <summary>
            Gets or sets a value indicating whether render cache is enabled.
            </summary>
            <value>
            	<c>true</c> if render cache is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Configuration.UI.PageElement.EnableStyleSheetCaching">
            <summary>
            Gets or sets a value indicating whether XSL stylesheet caching is enabled.
            </summary>
            <value>
            	<c>true</c> if XSL stylesheet caching is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Configuration.UI.PageElement.EnableMetadataCaching">
            <summary>
            Gets or sets a value indicating whether XML metadata caching is enabled.
            </summary>
            <value>
            	<c>true</c> if XML metadata caching is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Configuration.UI.PageElement.TransferOnStatusCodeNotFound">
            <summary>
            Gets or sets the transfer URL on pages not found (404:NotFound).
            </summary>
            <value>The transfer URL on pages not found (404:NotFound).</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/Websites/add configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Id">
            <summary>
            Gets or sets the id of the <see cref="T:Cuemon.Web.Website"/> object.
            </summary>
            <value>The id of the <see cref="T:Cuemon.Web.Website"/> object.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Name">
            <summary>
            Gets or sets the name of the <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <value>The name of the <see cref="T:Cuemon.Web.Website"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.ContentApplicationPath">
            <summary>
            Gets or sets the physical content application path of the <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <value>The physical content application path of the <see cref="T:Cuemon.Web.Website"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Version">
            <summary>
            Gets or sets the version of the <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <value>The version of the <see cref="T:Cuemon.Web.Website"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.EnableCompression">
            <summary>
            Gets or sets a value indicating whether to enable compression of delivered output content.
            </summary>
            <value><c>true</c> to enable compression of delivered output content; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.EnableClientSideCaching">
            <summary>
            Gets or sets a value indicating whether to enable clientside caching by the resolvement from when a ressource was last modified.
            </summary>
            <value><c>true</c> to enable clientside caching by the resolvement from when a ressource was last modified; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.EnableDynamicContentApplicationPath">
            <summary>
            Gets or sets a value indicating whether the content application path will be set dynamically by the executing application.
            </summary>
            <value>
            	<c>true</c> if the content application path will be set dynamically by the executing application; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.EnableMaintenance">
            <summary>
            Gets or sets a value indicating whether maintenance is enabled.
            </summary>
            <value><c>true</c> if maintenance is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.EnableSecurity">
            <summary>
            Gets or sets a value indicating whether security is enabled.
            </summary>
            <value><c>true</c> if security is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Bindings">
            <summary>
            Gets the available website bindings from your configuration file.
            </summary>
            <value>The website bindings as entered in your configuration file.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Caching">
            <summary>
            Gets the caching element of the %ApplicationName% in the Website.
            </summary>
            <value>The caching element of the %ApplicationName% in the Website.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Compression">
            <summary>
            Gets the compression element.
            </summary>
            <value>The compression element.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Maintenance">
            <summary>
            Gets the maintenance element of the %ApplicationName% in the Website.
            </summary>
            <value>The maintenance element of the %ApplicationName% in the Website.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Globalization">
            <summary>
            Gets the globalization element of the %ApplicationName% in the Website.
            </summary>
            <value>The globalization element of the community.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.RequestPipelineProcessing">
            <summary>
            Gets the request pipeline processing element.
            </summary>
            <value>The request pipeline processing element.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Robots">
            <summary>
            Gets the robots element of the <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <value>The robots element of the <see cref="T:Cuemon.Web.Website"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Security">
            <summary>
            Gets the security element of the %ApplicationName% in the Website.
            </summary>
            <value>The security element of the community.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Themes">
            <summary>
            Gets the available Themes from your configuration file.
            </summary>
            <value>The available Themes as entered in your configuration file.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteElement.Data">
            <summary>
            Gets the data element of the %ApplicationName% in the Website.
            </summary>
            <value>The data element of the %ApplicationName% in the Website.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteElement"></see>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteThemeElement">
            <summary>
            Represents a Cuemon/Web/%ApplicationName%/WebSites/Website/Themes/add configuration element within a configuration file.
            </summary>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteThemeElement.Name">
            <summary>
            Gets or sets the name of the theme.
            </summary>
            <value>The name of the theme.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteThemeElement.Url">
            <summary>
            Gets or sets the URL of the theme.
            </summary>
            <value>The URL of the theme.</value>
        </member>
        <member name="T:Cuemon.Web.Configuration.WebsiteThemeElementCollection">
            <summary>
            Represents a configuration element containing a collection of child elements (<see cref="T:Cuemon.Web.Configuration.WebsiteThemeElement"></see>).
            </summary>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteThemeElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Configuration.WebsiteThemeElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:Cuemon.Web.Configuration.WebsiteThemeElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteThemeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:Cuemon.Web.Configuration.WebsiteThemeElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:Cuemon.Web.Configuration.WebsiteThemeElement"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Configuration.WebsiteThemeElementCollection.GetDefaultThemeFromCollection">
            <summary>
            Gets the default theme for this <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <value>The default theme for this <see cref="T:Cuemon.Web.Website"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Configuration.WebsiteThemeElementCollection.DefaultTheme">
            <summary>
            Gets or sets the name of the default theme to use.
            </summary>
            <value>The name of the default theme to use.</value>
        </member>
        <member name="T:Cuemon.Web.HttpResponseContentFilter">
            <summary>
            A filter which stores a snapshot of the content from the chained output filter.
            </summary>
            <remarks>Normal usage of this filter would be in conjunction with the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute"/> event.</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseContentFilter.#ctor(System.Web.HttpApplication)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpResponseContentFilter"/> class.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseContentFilter.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpResponseContentFilter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a block of bytes to the current stream using data read from buffer.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The byte offset in <paramref name="buffer"/> at which to begin writing from.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="buffer"/> is null.
              </exception>
              
            <exception cref="T:System.NotSupportedException">
            The stream does not support writing. For additional information see <see cref="P:System.IO.Stream.CanWrite"/>.
            -or-
            The current position is closer than <paramref name="count"/> bytes to the end of the stream, and the capacity cannot be modified.
              </exception>
              
            <exception cref="T:System.ArgumentException">
              <paramref name="offset"/> subtracted from the buffer length is less than <paramref name="count"/>.
              </exception>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="offset"/> or <paramref name="count"/> are negative.
              </exception>
              
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
              </exception>
        </member>
        <member name="P:Cuemon.Web.HttpResponseContentFilter.MimeTypesFilter">
            <summary>
            Gets the MIME types to process for <see cref="P:Cuemon.Web.HttpResponseContentFilter.SnapshotOfContent"/>.
            </summary>
            <value>The MIME types to process for <see cref="P:Cuemon.Web.HttpResponseContentFilter.SnapshotOfContent"/>.</value>
            <remarks>
            This is a positive list of MIME types to process.
            </remarks>
        </member>
        <member name="P:Cuemon.Web.HttpResponseContentFilter.BufferOutput">
            <summary>
            Gets a snapshot of the value specified on <see cref="P:System.Web.HttpResponse.BufferOutput"/>.
            </summary>
            <value><c>true</c> if the output to client is buffered; otherwise, <c>false</c>.</value>
            <remarks>Should this value have been set to <c>false</c>, the <see cref="P:Cuemon.Web.HttpResponseContentFilter.SnapshotOfContent"/> is not being written to.</remarks>
        </member>
        <member name="P:Cuemon.Web.HttpResponseContentFilter.SnapshotOfContent">
            <summary>
            Gets a snapshot from <see cref="P:System.Web.HttpResponse.Filter"/> of the content currently ready to be written to the client.
            </summary>
            <value>
            A snapshot from <see cref="P:System.Web.HttpResponse.Filter"/> of the content currently ready to be written to the client.
            </value>
        </member>
        <member name="T:Cuemon.Web.DefaultWebsite">
            <summary>
            Represents a <see cref="T:Cuemon.Web.Website"/> with the appropriate application automatically resolved from the Cuemon XML section of your Web.config file.
            </summary>
        </member>
        <member name="T:Cuemon.Web.Website">
            <summary>
            Represents a Website to be used in all ASP.NET related logic in the Cuemon Framework.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Website.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Website"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Website.#ctor(Cuemon.Web.Configuration.WebsiteElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Website"/> class.
            </summary>
            <param name="configurationElement">The configuration element to be used with this <see cref="T:Cuemon.Web.Website"/>.</param>
        </member>
        <member name="M:Cuemon.Web.Website.#ctor(Cuemon.Web.Configuration.WebsiteElement,Cuemon.Web.UI.XsltPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Website"/> class.
            </summary>
            <param name="configurationElement">The configuration element to be used with this <see cref="T:Cuemon.Web.Website"/>.</param>
            <param name="page">The executing <see cref="T:Cuemon.Web.UI.XsltPage"/> of this class.</param>
        </member>
        <member name="M:Cuemon.Web.Website.#ctor(Cuemon.Web.UI.XsltPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Website"/> class.
            </summary>
            <param name="page">The executing <see cref="T:Cuemon.Web.UI.XsltPage"/> of this class.</param>
        </member>
        <member name="M:Cuemon.Web.Website.#ctor(System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Website"/> class.
            </summary>
            <param name="context">The instance of a <see cref="T:System.Web.HttpContext"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.Website.Create">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Website"/> instance.
            </summary>
            <returns>An instance of <see cref="T:Cuemon.Web.Website"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.Website.Create(System.Web.HttpContext)">
            <summary>
            Creates a new <see cref="T:Cuemon.Web.Website"/> instance.
            </summary>
            <param name="context">A reference to a <see cref="T:System.Web.HttpContext"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Web.Website.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.Website.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.Website.GetCurrentHostHeaderWithNoPortInformation">
            <summary>
            Gets the current host header information from the IIS.
            </summary>
            <returns>The current host header information from the IIS.</returns>
        </member>
        <member name="M:Cuemon.Web.Website.GetDefaultConfigurationElement">
            <summary>
            Gets the default application configuration element to be used with this Website.
            </summary>
            <returns>
            The default application configuration element to be used with this Website.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Website.GetWebsiteBindings">
            <summary>
            Gets the host-header bindings assoicated with this website.
            </summary>
            <returns>The host-header binding associated with this website.</returns>
        </member>
        <member name="P:Cuemon.Web.Website.Id">
            <summary>
            Gets the id of the Website.
            </summary>
            <value>The id of the Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Bindings">
            <summary>
            Gets the bindings for this Website.
            </summary>
            <value>The bindings for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.HasWebsiteConfiguration">
            <summary>
            Gets a value indicating whether this instance has an associated website configuration element in the web.config file.
            </summary>
            <value>
            	<c>true</c> if this instance has an associated website configuration element in the web.config file; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Website.ConfigurationElement">
            <summary>
            Gets the configuration element to be used with this Website.
            </summary>
            <value>The configuration element of this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Globalization">
            <summary>
            Gets the globalization settings for this Website.
            </summary>
            <value>The globalization for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Maintenance">
            <summary>
            Gets the maintenance settings for this Website.
            </summary>
            <value>The maintenance settings for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Context">
            <summary>
            Gets the <see cref="T:System.Web.HttpContext"/> of this <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <value>The <see cref="T:System.Web.HttpContext"/> of this <see cref="T:Cuemon.Web.Website"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Robots">
            <summary>
            Gets the robots exclusion information for this Website.
            </summary>
            <value>The robots exclusion information for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Security">
            <summary>
            Gets the security settings for this Website.
            </summary>
            <value>The security for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.SiteMap">
            <summary>
            Gets the sitemap for this Website.
            </summary>
            <value>The sitemap for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Themes">
            <summary>
            Gets the themes for this website.
            </summary>
            <value>The themes for this website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Name">
            <summary>
            Gets the name of this Website.
            </summary>
            <value>The name of this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.Version">
            <summary>
            Gets the version of this Website.
            </summary>
            <value>The version of this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.ContentApplicationPath">
            <summary>
            Gets the physical application content path of the Website.
            </summary>
            <value>The physical application content path of the Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.DefaultTheme">
            <summary>
            Gets the default theme for this Website.
            </summary>
            <value>The default theme for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.EnableMaintenance">
            <summary>
            Gets a value indicating whether maintenance is enabled for this Website.
            </summary>
            <value><c>true</c> if maintenance is enabled for this Website; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Website.EnableSecurity">
            <summary>
            Gets a value indicating whether security is enabled for this Website.
            </summary>
            <value><c>true</c> if security is enabled for this Website; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Website.EnableDynamicContentApplicationPath">
            <summary>
            Gets a value indicating whether the content application path will be retreived dynamically by the executing application for this Website.
            </summary>
            <value>
            	<c>true</c> if the content application path will be retreived dynamically by the executing application for this Website; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.Website.Page">
            <summary>
            Gets or sets the executing XSLT page of this Website.
            </summary>
            <value>The executing XSLT page of this Website.</value>
        </member>
        <member name="P:Cuemon.Web.Website.SiteMapFiles">
            <summary>
            Infrastructure. Gets the physical location of the <see cref="T:Cuemon.Web.WebsiteSiteMap"/> files.
            </summary>
            <value>The physical location of the <see cref="T:Cuemon.Web.WebsiteSiteMap"/> files.</value>
        </member>
        <member name="M:Cuemon.Web.DefaultWebsite.GetInstance">
            <summary>
            Gets the website instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Web.DefaultWebsite.GetInstance(System.Web.HttpContext)">
            <summary>
            Gets the website instance.
            </summary>
            <param name="context">A reference to a <see cref="T:System.Web.HttpContext"/> object.</param>
            <returns></returns>
        </member>
        <member name="T:Cuemon.Web.HttpContextType">
            <summary>
            Specifies the different (and most important) supported types of the <see cref="T:System.Web.HttpContext"/> object.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.Application">
            <summary>
            Specifies that items are taken from the application state object.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.Cookies">
            <summary>
            Specifies that items are taken from the cookies sent by the client.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.Form">
            <summary>
            Specifies that items are taken from the form variables.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.Files">
            <summary>
            Specifies that files are taken from the form variables.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.QueryString">
            <summary>
            Specifies that items are taken from the HTTP query string variables.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.Session">
            <summary>
            Specifies that items are taken from the session state object.
            </summary>
        </member>
        <member name="F:Cuemon.Web.HttpContextType.ServerVariables">
            <summary>
            Specifies that items are taken from the Web server variables.
            </summary>
        </member>
        <member name="T:Cuemon.Web.HttpContextItem">
            <summary>
            Represents an item in the <see cref="T:System.Web.HttpContext"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpContextItem.#ctor(System.String,System.Object,Cuemon.Web.HttpContextType)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItem"/> class.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="value">The value of the item.</param>
            <param name="contextType">The actual context type to mark for the item.</param>
        </member>
        <member name="M:Cuemon.Web.HttpContextItem.#ctor(System.String,System.Object,Cuemon.Web.HttpContextType,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItem"/> class.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="value">The value of the item.</param>
            <param name="contextType">The actual context type to mark for the item.</param>
            <param name="expires">The expiration date of the item. Only set from cookies.</param>
        </member>
        <member name="M:Cuemon.Web.HttpContextItem.#ctor(System.String,Cuemon.Web.HttpContextType,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItem"/> class.
            </summary>
            <param name="name">The name of the item.</param>
            <param name="contextType">The actual context type to mark for the item.</param>
            <param name="fileName">The name of the file item.</param>
            <param name="contentType">The MIME type of the file item.</param>
            <param name="contentLength">The length of the file item.</param>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.Type">
            <summary>
            Gets the request type of the item.
            </summary>
            <value>The request type of the item.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.Name">
            <summary>
            Gets the name of the item.
            </summary>
            <value>The name of the item.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.Value">
            <summary>
            Gets the value of the item.
            </summary>
            <value>The value of the item.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.Expires">
            <summary>
            Gets the expiration date of the cookie item.
            </summary>
            <value>The expiration date of the cookie item.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.ContentLength">
            <summary>
            Gets the length of a file item.
            </summary>
            <value>The length of a file item.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.FileName">
            <summary>
            Gets the name of the file item.
            </summary>
            <value>The name of the file item.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItem.ContentType">
            <summary>
            Gets the MIME type of a file item.
            </summary>
            <value>The MIME type of a file item.</value>
        </member>
        <member name="T:Cuemon.Web.HttpContextItemCollection">
            <summary>
            Represents a collection of one or more <see cref="T:System.Web.HttpContext"/> collection members, such as Application, Cookies, Form, QueryString, Session and/or ServerVariables.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.#ctor(System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItemCollection"/> class.
            </summary>
            <param name="context">An instance of an <see cref="T:System.Web.HttpContext"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.#ctor(System.Web.HttpContext,Cuemon.Web.HttpContextType[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItemCollection"/> class.
            </summary>
            <param name="context">An instance of an <see cref="T:System.Web.HttpContext"/> object.</param>
            <param name="contextTypes">The <see cref="T:Cuemon.Web.HttpContextType"/> values you want to include in your collection of <see cref="T:Cuemon.Web.HttpContextItem"/> objects.</param>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.#ctor(Cuemon.Web.HttpContextType[])">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.HttpContextItemCollection"/> class with option for filtered <see cref="T:System.Web.HttpRequest"/> collection members.
            </summary>
            <param name="contextTypes">The <see cref="T:Cuemon.Web.HttpContextType"/> values you want to include in your collection of <see cref="T:Cuemon.Web.HttpContextItem"/> objects.</param>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.GetFilteredCount(Cuemon.Web.HttpContextType[])">
            <summary>
            Gets a filtered count of the items stored in this collection.
            </summary>
            <param name="contextTypes">The <see cref="T:Cuemon.Web.HttpContextType"/> values you want to filter your count by.</param>
            <returns>The filtered number of items contained in this object.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.HttpContextItemCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Cuemon.Web.HttpContextItemCollection.Count">
            <summary>
            Gets the number of elements contained in this object.
            </summary>
            <value>The number of elements contained in this object.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.HttpContextItem"/> at the specified index.
            </summary>
            <value>An instance of the <see cref="T:Cuemon.Web.HttpContextItem"/> object.</value>
        </member>
        <member name="P:Cuemon.Web.HttpContextItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.HttpContextItem"/> with the specified name.
            </summary>
            <value>An instance of the <see cref="T:Cuemon.Web.HttpContextItem"/> object.</value>
        </member>
        <member name="T:Cuemon.Web.HttpRequestUtility">
            <summary>
            This utility class is designed to make <see cref="T:System.Web.HttpRequest"/> operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsServerLocal(System.Web.HttpRequest)">
            <summary>
            Determines whether the specified <paramref name="request"/> is solely executed by the server local.
            </summary>
            <param name="request">An instance of <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns><c>true</c> if the specified <paramref name="request"/> is solely executed by the server local; otherwise, <c>false</c>.</returns>
            <remarks>
            This is a qualified assumption; if the following condition are meet, this method returns <c>true</c>:
            <list type="table">
                <listheader>
                    <term>Condition</term>
                    <description>Value</description>
                </listheader>
                <item>
                    <term><see cref="P:System.Web.HttpRequest.IsLocal"/></term>
                    <description><c>true</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Web.HttpRequest.UserAgent"/></term>
                    <description><c>null</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Web.HttpRequest.UserLanguages"/></term>
                    <description><c>null</c></description>
                </item>
                <item>
                    <term><see cref="P:System.Web.HttpRequest.UrlReferrer"/></term>
                    <description><c>null</c></description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetHostAuthority">
            <summary>
            Gets the host authority information from the current <see cref="T:System.Web.HttpContext"/> as an <see cref="T:System.Uri"/>.
            </summary>
            <returns>The host authority information from the current <see cref="T:System.Web.HttpContext"/> as an <see cref="T:System.Uri"/>.</returns>
            <remarks>For more information about host authority information please have a look at this URI scheme page @ Wikipedia: http://en.wikipedia.org/wiki/URI_scheme</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetHostAuthority(System.Web.HttpRequest)">
            <summary>
            Gets the host authority information from the specified <paramref name="request"/> as an <see cref="T:System.Uri"/>.
            </summary>
            <param name="request">An instance of <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>The host authority information from the specified <paramref name="request"/> as an <see cref="T:System.Uri"/>.</returns>
            <remarks>For more information about host authority information please have a look at this URI scheme page @ Wikipedia: http://en.wikipedia.org/wiki/URI_scheme</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetHostAuthority(System.Uri)">
            <summary>
            Gets the host authority information from the specified <paramref name="uri"/> as an <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">An instance of <see cref="T:System.Uri"/> to get the host authority information from.</param>
            <returns>The host authority information from the specified <paramref name="uri"/> as an <see cref="T:System.Uri"/>.</returns>
            <remarks>
            For more information about host authority information please have a look at this URI scheme page @ Wikipedia: http://en.wikipedia.org/wiki/URI_scheme
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetAcceptHeader">
            <summary>
            Resolves the string representation of an Accept header and converts the values to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> equivalent using the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">This exception is thrown if HttpContext is unavailable.</exception>
            <returns>A sequence of <see cref="T:System.String"/> values equivalent to the values contained in the Accept header, if the resolvement succeeded; otherwise defaults to */* value.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetAcceptHeader(System.Web.HttpRequest)">
            <summary>
            Resolves the string representation of an Accept header and converts the values to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> equivalent using the specified <paramref name="request"/> object.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>A sequence of <see cref="T:System.String"/> values equivalent to the values contained in the Accept header, if the resolvement succeeded; otherwise defaults to */* value.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetContentTypeHeader">
            <summary>
            Resolves the string representation of a Content-Type header and converts the values to an <see cref="T:System.Net.Mime.ContentType"/> equivalent using the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">This exception is thrown if HttpContext is unavailable.</exception>
            <returns>A <see cref="T:System.Net.Mime.ContentType"/> object equivalent to the value contained in the Content-Type header, if the resolvement succeeded; otherwise null.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetContentTypeHeader(System.Web.HttpRequest)">
            <summary>
            Resolves the string representation of a Content-Type header and converts the values to an <see cref="T:System.Net.Mime.ContentType"/> equivalent using the specified <paramref name="request"/> object.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>A <see cref="T:System.Net.Mime.ContentType"/> object equivalent to the value contained in the Content-Type header, if the resolvement succeeded; otherwise null.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetAcceptEncodingHeader">
            <summary>
            Resolves the string representation of an Accept-Encoding header and converts the values to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> equivalent using the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">This exception is thrown if HttpContext is unavailable.</exception>
            <returns>A sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> values equivalent to the values contained in the Accept-Encoding header, if the resolvement succeeded; otherwise defaults to <see cref="F:Cuemon.Web.CompressionMethodScheme.Identity"/> value.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.GetAcceptEncodingHeader(System.Web.HttpRequest)">
            <summary>
            Resolves the string representation of an Accept-Encoding header and converts the values to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> equivalent using the specified <paramref name="request"/> object.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>A sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> values equivalent to the values contained in the Accept-Encoding header, if the resolvement succeeded; otherwise defaults to <see cref="F:Cuemon.Web.CompressionMethodScheme.Identity"/> value.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseAcceptEncoding">
            <summary>
            This method will parse a sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> and return the most appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/>.
            </summary>
            <returns>The most appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/> from the by <see cref="T:System.Web.HttpRequest"/> resolved HTTP Accept-Encoding header.</returns>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:System.Web.HttpContext.Current"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseAcceptEncoding(System.Web.HttpRequest)">
            <summary>
            This method will parse a sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> and return the most appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/>.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>The most appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/> from the by <paramref name="request"/> resolved HTTP Accept-Encoding header.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="request"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseAcceptEncoding(System.Collections.Generic.IEnumerable{Cuemon.Web.CompressionMethodScheme})">
            <summary>
            This method will parse a sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> and return the most appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/>.
            </summary>
            <param name="compressionMethods">A sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> to choose the appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/> from.</param>
            <returns>The most appropriate <see cref="T:Cuemon.Web.CompressionMethodScheme"/> from the specified <paramref name="compressionMethods"/> sequence.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="compressionMethods"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseAcceptEncoding(System.String)">
            <summary>
            This method will parse a HTTP Accept-Encoding string and returns its <see cref="T:Cuemon.Web.CompressionMethodScheme"/> equivalent.
            </summary>
            <param name="acceptEncoding">The HTTP Accept-Encoding string to parse.</param>
            <returns>A <see cref="T:Cuemon.Web.CompressionMethodScheme"/> equivalent to the specified <paramref name="acceptEncoding"/>.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <remarks>This method will default to <see cref="F:Cuemon.Web.CompressionMethodScheme.Identity"/> in case of an unknown HTTP Accept-Encoding.</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(Cuemon.Caching.CacheValidator)">
            <summary>
            Determines whether a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <returns>
            	<c>true</c> if a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="validator"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:System.Web.HttpContext"/> is unavailable.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(Cuemon.Caching.CacheValidator,System.Web.HttpRequest)">
            <summary>
            Determines whether a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>
            	<c>true</c> if a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="validator"/> is null - or - <paramref name="request"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(Cuemon.Caching.CacheValidator,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Determines whether a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <returns>
            	<c>true</c> if a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="validator"/> is null - or - <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(Cuemon.Caching.CacheValidator,System.Net.WebHeaderCollection)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the specified <paramref name="validator"/>.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <returns>
                <c>true</c> if a cached version of the requested content is found client-side given the specified <paramref name="validator"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="validator"/> is null - or - <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(System.DateTime)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="lastModified">A <see cref="T:System.DateTime"/> value indicating when the content of the resource was last modified.</param>
            <returns>
            	<c>true</c> if a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:System.Web.HttpContext"/> is unavailable.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(System.DateTime,System.Web.HttpRequest)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="lastModified">A <see cref="T:System.DateTime"/> value indicating when the content of the resource was last modified.</param>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <returns>
            	<c>true</c> if a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="request"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(System.DateTime,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="lastModified">A <see cref="T:System.DateTime"/> value indicating when the content of the resource was last modified.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <returns>
                <c>true</c> if a cached version of the requested content is found client-side given the <paramref name="lastModified"/> <see cref="T:System.DateTime"/> value; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(System.DateTime,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value and a match is determined from the server side <paramref name="entityTag"/> and client side equivalent.
            </summary>
            <param name="lastModified">A <see cref="T:System.DateTime"/> value indicating when the content of the resource was last modified.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <param name="entityTag">The server side entity tag to compare with the client side equivalent.</param>
            <returns>
                <c>true</c> if a cached version of the requested content is found client-side given the <paramref name="lastModified"/> <see cref="T:System.DateTime"/> value and a match is determined from the server side <paramref name="entityTag"/> and client side equivalent; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
            <remarks>
            This method performs an ordinal (case-sensitive and culture-insensitive) comparison against the server side <paramref name="entityTag"/> and client side equivalent.
            The search begins at the first character position of this string and continues through the last character position.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(System.DateTime,System.Net.WebHeaderCollection)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="lastModified">A <see cref="T:System.DateTime"/> value indicating when the content of the resource was last modified.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <returns>
                <c>true</c> if a cached version of the requested content is found client-side given the <paramref name="lastModified"/> <see cref="T:System.DateTime"/> value; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.IsClientSideResourceCached(System.DateTime,System.Net.WebHeaderCollection,System.String)">
            <summary>
            Determines whether a cached version of the requested resource is found client-side given the last modified <see cref="T:System.DateTime"/> value and a match is determined from the server side <paramref name="entityTag"/> and client side equivalent.
            </summary>
            <param name="lastModified">A <see cref="T:System.DateTime"/> value indicating when the content of the resource was last modified.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <param name="entityTag">The server side entity tag to compare with the client side equivalent.</param>
            <returns>
                <c>true</c> if a cached version of the requested content is found client-side given the <paramref name="lastModified"/> <see cref="T:System.DateTime"/> value and a match is determined from the server side <paramref name="entityTag"/> and client side equivalent; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
            <remarks>
            This method performs an ordinal (case-sensitive and culture-insensitive) comparison against the server side <paramref name="entityTag"/> and client side equivalent.
            The search begins at the first character position of this string and continues through the last character position.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetEntityTagHeader(System.String@)">
            <summary>
            Resolves the entity tag string representation of an <b>If-None-Match</b> header.
            </summary>
            <param name="result">When this method returns, contains the entity tag specified by the <b>If-None-Match</b> header, if found; otherwise null. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-None-Match</b> header was found in the <see cref="T:System.Web.HttpContext"/>; otherwise, false.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:System.Web.HttpContext"/> is unavailable.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetEntityTagHeader(System.Web.HttpRequest,System.String@)">
            <summary>
            Resolves the entity tag string representation of an <b>If-None-Match</b> header.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="result">When this method returns, contains the entity tag specified by the <b>If-None-Match</b> header, if found; otherwise null. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-None-Match</b> header was found in the <paramref name="request"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="request"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetEntityTagHeader(System.Collections.Specialized.NameValueCollection,System.String@)">
            <summary>
            Resolves the entity tag string representation of an <b>If-None-Match</b> header.
            </summary>
            <param name="headers">A collection of HTTP headers.</param>
            <param name="result">When this method returns, contains the entity tag specified by the <b>If-None-Match</b> header, if found; otherwise null. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-None-Match</b> header was found in the <paramref name="headers"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetEntityTagHeader(System.Net.WebHeaderCollection,System.String@)">
            <summary>
            Resolves the entity tag string representation of an <b>If-None-Match</b> header.
            </summary>
            <param name="headers">A collection of HTTP headers.</param>
            <param name="result">When this method returns, contains the entity tag specified by the <b>If-None-Match</b> header, if found; otherwise null. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-None-Match</b> header was found in the <paramref name="headers"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetLastModifiedHeader(System.DateTime@)">
            <summary>
            Resolves the string representation of an If-Modified-Since header and converts the value to its <see cref="T:System.DateTime"/> equivalent using the current <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <param name="result">When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <b>If-Modified-Since</b> header, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue"/> if resolvement failed. The conversion fails if no <b>If-Modified-Since</b> header can be resolved. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-Modified-Since</b> header was found in the <see cref="T:System.Web.HttpContext"/>; otherwise, false.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:System.Web.HttpContext"/> is unavailable.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetLastModifiedHeader(System.Web.HttpRequest,System.DateTime@)">
            <summary>
            Resolves the string representation of an If-Modified-Since header and converts the value to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <b>If-Modified-Since</b> header, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue"/> if resolvement failed. The conversion fails if no <b>If-Modified-Since</b> header can be resolved. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-Modified-Since</b> header was found in the <paramref name="request"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="request"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetLastModifiedHeader(System.Collections.Specialized.NameValueCollection,System.DateTime@)">
            <summary>
            Resolves the string representation of an If-Modified-Since header and converts the value to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="headers">A collection of HTTP headers.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <b>If-Modified-Since</b> header, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue"/> if resolvement failed. The conversion fails if no <b>If-Modified-Since</b> header can be resolved. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-Modified-Since</b> header was found in the <paramref name="headers"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.TryGetLastModifiedHeader(System.Net.WebHeaderCollection,System.DateTime@)">
            <summary>
            Resolves the string representation of an If-Modified-Since header and converts the value to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="headers">A collection of HTTP headers.</param>
            <param name="result">When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <b>If-Modified-Since</b> header, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue"/> if resolvement failed. The conversion fails if no <b>If-Modified-Since</b> header can be resolved. This parameter is passed uninitialized.</param>
            <returns>
                <c>true</c> if the <b>If-Modified-Since</b> header was found in the <paramref name="headers"/>; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headers"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.CombineFieldValuePairs(System.String[])">
            <summary>
            Combines the specified query string <paramref name="sources"/> into one <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.
            </summary>
            <param name="sources">A variable number of query string <paramref name="sources"/> to combine into one <see cref="T:System.String"/>.</param>
            <returns>A variable number of query string <paramref name="sources"/> combined into one <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.CombineFieldValuePairs(Cuemon.Web.FieldValueSeparator,System.String[])">
            <summary>
            Combines the specified query string, header or a form-data <paramref name="sources"/> into one <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.
            </summary>
            <param name="sources">A variable number of query string, header or a form-data <paramref name="sources"/> to combine into one <see cref="T:System.String"/>.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the combination.</param>
            <returns>A variable number of query string, header or a form-data <paramref name="sources"/> combined into one <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.CombineFieldValuePairs(System.Collections.Specialized.NameValueCollection[])">
            <summary>
            Combines the specified query string <paramref name="sources"/> into one <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.
            </summary>
            <param name="sources">A variable number of query string <paramref name="sources"/> to combine into one <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</param>
            <returns>A variable number of query string <paramref name="sources"/> combined into one <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.CombineFieldValuePairs(Cuemon.Web.FieldValueSeparator,System.Collections.Specialized.NameValueCollection[])">
            <summary>
            Combines the specified query string, header or a form-data <paramref name="sources"/> into one <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.
            </summary>
            <param name="sources">A variable number of query string, header or a form-data <paramref name="sources"/> to combine into one <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the combination.</param>
            <returns>A variable number of query string, header or a form-data <paramref name="sources"/> combined into one <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseFieldValuePairs(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Parses a query string into a <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.
            </summary>
            <param name="fieldValuePairs">The query string to parse.</param>
            <returns>A <see cref="T:System.String"/> value equivalent to the values in the <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseFieldValuePairs(System.Collections.Specialized.NameValueCollection,Cuemon.Web.FieldValueSeparator)">
            <summary>
            Parses a query string, header or a form-data into a <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data values to parse.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the conversion.</param>
            <returns>A <see cref="T:System.String"/> value equivalent to the values in the <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseFieldValuePairs(System.Collections.Specialized.NameValueCollection,Cuemon.Web.FieldValueSeparator,System.Boolean)">
            <summary>
            Parses a query string, header or a form-data into a <see cref="T:System.String"/> equivalent field-value pairs as specified by the W3C.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data values to parse.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the conversion.</param>
            <param name="urlEncode">Encodes the output URL string. Default is true.</param>
            <returns>A <see cref="T:System.String"/> value equivalent to the values in the <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseFieldValuePairs(System.String)">
            <summary>
            Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.
            </summary>
            <param name="fieldValuePairs">The query string to parse.</param>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"/> value equivalent to the values in the <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseFieldValuePairs(System.String,Cuemon.Web.FieldValueSeparator)">
            <summary>
            Parses a query string, header or a form-data into a <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data values to parse.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the conversion.</param>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"/> value equivalent to the values in the <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.ParseFieldValuePairs(System.String,Cuemon.Web.FieldValueSeparator,System.Boolean)">
            <summary>
            Parses a query string, header or a form-data into a <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent field-value pairs.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data values to parse.</param>
            <param name="urlDecode">Converts <paramref name="fieldValuePairs"/> that has been encoded for transmission in a URL into a decoded string. Default is false.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the conversion.</param>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection"/> value equivalent to the values in the <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.SanitizeFieldValuePairs(System.String,Cuemon.Web.FieldValueSanitizing)">
            <summary>
            Sanitizes the query string, header or form-data from the specified arguments, using all of the keys gathered in <paramref name="fieldValuePairs"/> and <see cref="F:Cuemon.Web.FieldValueSeparator.Ampersand"/> as the separator.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data to sanitize.</param>
            <param name="sanitizing">The sanitizing action to perform on the <paramref name="fieldValuePairs"/>.</param>
            <returns>A sanitized <see cref="T:System.String"/> equivalent of <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.SanitizeFieldValuePairs(System.String,Cuemon.Web.FieldValueSanitizing,System.String[])">
            <summary>
            Sanitizes the query string from the specified arguments, using <see cref="F:Cuemon.Web.FieldValueSeparator.Ampersand"/> as the separator.
            </summary>
            <param name="fieldValuePairs">The query string to sanitize.</param>
            <param name="sanitizing">The sanitizing action to perform on the <paramref name="fieldValuePairs"/>.</param>
            <param name="keys">The keys to use in the sanitizing process.</param>
            <returns>A sanitized <see cref="T:System.String"/> equivalent of <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.SanitizeFieldValuePairs(System.String,Cuemon.Web.FieldValueSanitizing,Cuemon.Web.FieldValueSeparator,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sanitizes the query string, header or form-data from the specified arguments.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data to sanitize.</param>
            <param name="sanitizing">The sanitizing action to perform on the <paramref name="fieldValuePairs"/>.</param>
            <param name="separator">The <see cref="T:Cuemon.Web.FieldValueSeparator"/> to use in the result.</param>
            <param name="keys">The keys to use in the sanitizing process.</param>
            <returns>A sanitized <see cref="T:System.String"/> equivalent of <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.SanitizeFieldValuePairs(System.Collections.Specialized.NameValueCollection,Cuemon.Web.FieldValueSanitizing)">
            <summary>
            Sanitizes the query string, header or form-data from the specified arguments, using all of the keys gathered in <paramref name="fieldValuePairs"/> and <see cref="F:Cuemon.Web.FieldValueSeparator.Ampersand"/> as the separator.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data to sanitize.</param>
            <param name="sanitizing">The sanitizing action to perform on the <paramref name="fieldValuePairs"/>.</param>
            <returns>A sanitized <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent of <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.SanitizeFieldValuePairs(System.Collections.Specialized.NameValueCollection,Cuemon.Web.FieldValueSanitizing,System.String[])">
            <summary>
            Sanitizes the query string, header or form-data from the specified arguments, using <see cref="F:Cuemon.Web.FieldValueSeparator.Ampersand"/> as the separator.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data to sanitize.</param>
            <param name="sanitizing">The sanitizing action to perform on the <paramref name="fieldValuePairs"/>.</param>
            <param name="keys">The keys to use in the sanitizing process.</param>
            <returns>A sanitized <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent of <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.HttpRequestUtility.SanitizeFieldValuePairs(System.Collections.Specialized.NameValueCollection,Cuemon.Web.FieldValueSanitizing,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sanitizes the query string, header or form-data from the specified arguments.
            </summary>
            <param name="fieldValuePairs">The query string, header or form-data to sanitize.</param>
            <param name="sanitizing">The sanitizing action to perform on the <paramref name="fieldValuePairs"/>.</param>
            <param name="keys">The keys to use in the sanitizing process.</param>
            <returns>A sanitized <see cref="T:System.Collections.Specialized.NameValueCollection"/> equivalent of <paramref name="fieldValuePairs"/>.</returns>
        </member>
        <member name="T:Cuemon.Web.FieldValueSanitizing">
            <summary>
            Specifies the sanitize action to perform on either query strings, headers or form data.
            </summary>
        </member>
        <member name="F:Cuemon.Web.FieldValueSanitizing.Remove">
            <summary>
            Sanitizes the request so that all keys (with matching values) is removed.
            </summary>
        </member>
        <member name="F:Cuemon.Web.FieldValueSanitizing.RemoveDublets">
            <summary>
            Sanitizes the request so that all keys is assured only the latest value applied.
            </summary>
        </member>
        <member name="T:Cuemon.Web.FieldValueSeparator">
            <summary>
            Specifies a range of field value seperators.
            </summary>
        </member>
        <member name="F:Cuemon.Web.FieldValueSeparator.Ampersand">
            <summary>
            An ampersand (&amp;) separator.
            </summary>
        </member>
        <member name="F:Cuemon.Web.FieldValueSeparator.Semicolon">
            <summary>
            A semicolon (;) separator.
            </summary>
        </member>
        <member name="T:Cuemon.Web.CompressionMethodScheme">
            <summary>
            Represents the optional response compression encoding format to be used to compress the data received in response to an <see cref="T:System.Web.HttpRequest"/>.
            </summary>
        </member>
        <member name="F:Cuemon.Web.CompressionMethodScheme.Identity">
            <summary>
            Use the identity scheme - hence no compression.
            </summary>
        </member>
        <member name="F:Cuemon.Web.CompressionMethodScheme.GZip">
            <summary>
            Use the GZip compression scheme.
            </summary>
        </member>
        <member name="F:Cuemon.Web.CompressionMethodScheme.Deflate">
            <summary>
            Use the deflate compression scheme.
            </summary>
        </member>
        <member name="F:Cuemon.Web.CompressionMethodScheme.Compress">
            <summary>
            Use the LZW compression scheme.
            </summary>
        </member>
        <member name="F:Cuemon.Web.CompressionMethodScheme.None">
            <summary>
            Do not use any of the compression schemes.
            </summary>
        </member>
        <member name="T:Cuemon.Web.HttpResponseUtility">
            <summary>
            This utility class is designed to make <see cref="T:System.Web.HttpResponse"/> operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.RedirectPermanently(System.Uri)">
            <summary>
            Redirects and instructs the client to a new permanent URL location and specifies the new URL.
            </summary>
            <param name="url">The permanent target location.</param>
            <remarks>Uses the static <see cref="P:System.Web.HttpContext.Current"/> to retrieve an instance of the <see cref="T:System.Web.HttpResponse"/> and <see cref="T:System.Web.HttpApplication"/> class.</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.RedirectPermanently(System.String)">
            <summary>
            Redirects and instructs the client to a new permanent URL location and specifies the new URL.
            </summary>
            <param name="url">The permanent target location.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.DisableClientSideResourceCache">
            <summary>
            Disables all client side caching.
            </summary>
            <remarks>Uses the static <see cref="P:System.Web.HttpContext.Current"/> to retrieve an instance of the <see cref="T:System.Web.HttpResponse"/> class.</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.DisableClientSideResourceCache(System.Web.HttpResponse)">
            <summary>
            Disables all client side caching.
            </summary>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientCompressionMethod">
            <summary>
            A helper method designed to set the appropriate HTTP Content-Encoding header for the content being delivered to the client.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:System.Web.HttpContext.Current"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientCompressionMethod(System.Web.HttpResponse,System.Web.HttpRequest)">
            <summary>
            A helper method designed to set the appropriate HTTP Content-Encoding header for the content being delivered to the client.
            </summary>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="request">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="response"/> is null or <br/>
            <paramref name="request"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientCompressionMethod(System.Collections.Generic.IEnumerable{Cuemon.Web.CompressionMethodScheme})">
            <summary>
            A helper method designed to set the appropriate HTTP Content-Encoding header for the content being delivered to the client.
            </summary>
            <param name="compressionMethods">A sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> to choose the appropriate HTTP Content-Encoding header by.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="compressionMethods"/> is null.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:System.Web.HttpContext.Current"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientCompressionMethod(System.Web.HttpResponse,System.Collections.Generic.IEnumerable{Cuemon.Web.CompressionMethodScheme})">
            <summary>
            A helper method designed to set the appropriate HTTP Content-Encoding header for the content being delivered to the client.
            </summary>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="compressionMethods">A sequence of <see cref="T:Cuemon.Web.CompressionMethodScheme"/> to choose the appropriate HTTP Content-Encoding header by.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="response"/> is null or <br/>
            <paramref name="compressionMethods"/> is null.
            </exception>
            <remarks>
            Do note that <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> is avoided if possible. GZip is the de facto standard for HTTP compression.<br/>
            For more in-depth explanation of this choice, please refer to this link by Zoompf: http://zoompf.com/blog/2012/02/lose-the-wait-http-compression
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientCompressionMethod(System.Web.HttpResponse,Cuemon.Web.CompressionMethodScheme)">
            <summary>
            A helper method designed to set the appropriate HTTP Content-Encoding header for the content being delivered to the client.
            </summary>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="compressionMethod">The compression method to apply to the HTTP Content-Encoding header.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="response"/> is null.
            </exception>
            <remarks>
            The HTTP Content-Encoding header is only applied if <paramref name="compressionMethod"/> equals <see cref="F:Cuemon.Web.CompressionMethodScheme.Deflate"/> or <see cref="F:Cuemon.Web.CompressionMethodScheme.GZip"/>.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.RemoveResponseHeader(System.Web.HttpResponse,System.String)">
            <summary>
            A helper method designed to remove the by <paramref name="name"/> specified HTTP header.
            </summary>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="name">The name of the HTTP header to remove from the output stream.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="response"/> is null or<br/>
            <paramref name="name"/> is null.
            </exception>
            <exception cref="T:Cuemon.ArgumentEmptyException">
            <paramref name="name"/> is empty.
            </exception>
            <remarks>This method is backward compatible to IIS 6.0.</remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(Cuemon.Caching.CacheValidator,System.DateTime)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="expires">The UTC date time value to expire the <see cref="F:System.Web.HttpCacheability.Private"/> caching.</param>
            <remarks>Uses the static <see cref="P:System.Web.HttpContext.Current"/> to retrieve an instance of the <see cref="T:System.Web.HttpResponse"/> class.</remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:System.Web.HttpContext"/> is unavailable.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(System.Web.HttpRequest,System.Web.HttpResponse,Cuemon.Caching.CacheValidator,System.DateTime)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="expires">The UTC date time value to expire the <see cref="F:System.Web.HttpCacheability.Private"/> caching.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(System.Web.HttpRequest,System.Web.HttpResponse,Cuemon.Caching.CacheValidator,System.DateTime,System.Web.HttpCacheability)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="expires">The UTC date time value to expire the <paramref name="cacheability"/> caching.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <remarks>
            The <paramref name="validator"/> parameter is used to set the <b>Last-Modified</b> header in the response but also used to determined if the <b>If-Modified-Since</b> header in the request is equal to the specified <see cref="P:Cuemon.Caching.CacheValidator.Modified"/> value.
            If equal, HTTP content is not sent to the client and a status code of <see cref="F:System.Net.HttpStatusCode.NotModified"/> is set.
            <br/>
            <br/>
            The <paramref name="expires"/> parameter is used to set the <b>Expires</b> header in the response.
            <br/>
            <br/>
            The <paramref name="cacheability"/> parameter is used to guide and set the <b>Cache-Control</b> header and <b>Pragma</b> header in the response.
            <br/>
            <br/>
            The <paramref name="validator"/> parameter is also used to set the <b>ETag</b> header in the response but also used to determined if the <b>If-None-Match</b> header in the request is equal to the specified <see cref="P:Cuemon.Caching.CacheValidator.Checksum"/> using a ruleset of <see cref="F:System.StringComparison.Ordinal"/>.
            If equal, HTTP content is not sent to the client and a status code of <see cref="F:System.Net.HttpStatusCode.NotModified"/> is set.
            <br/>
            <br/>
            <b>Note:</b> The <b>If-None-Match</b> header trumps the <b>If-Modified-Since</b> header.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(System.DateTime,System.DateTime)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="lastModified">The UTC date time value of the content being delivered last modified time stamp.</param>
            <param name="expires">The UTC date time value to expire the <see cref="F:System.Web.HttpCacheability.Private"/> caching.</param>
            <remarks>Uses the static <see cref="P:System.Web.HttpContext.Current"/> to retrieve an instance of the <see cref="T:System.Web.HttpResponse"/> class.</remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:System.Web.HttpContext"/> is unavailable.
            </exception>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(System.Web.HttpRequest,System.Web.HttpResponse,System.DateTime,System.DateTime)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="lastModified">The UTC date time value of the content being delivered last modified time stamp.</param>
            <param name="expires">The UTC date time value to expire the <see cref="F:System.Web.HttpCacheability.Private"/> caching.</param>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(System.Web.HttpRequest,System.Web.HttpResponse,System.DateTime,System.DateTime,System.Web.HttpCacheability)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="lastModified">The UTC date time value of the content being delivered last modified time stamp.</param>
            <param name="expires">The UTC date time value to expire the <paramref name="cacheability"/> caching.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <remarks>
            The <paramref name="lastModified"/> parameter is used to set the <b>Last-Modified</b> header in the response but also used to determined if the <b>If-Modified-Since</b> header in the request is equal to the specified <paramref name="lastModified"/> value.
            If equal, HTTP content is not sent to the client and a status code of <see cref="F:System.Net.HttpStatusCode.NotModified"/> is set.
            <br/>
            <br/>
            The <paramref name="expires"/> parameter is used to set the <b>Expires</b> header in the response.
            <br/>
            <br/>
            The <paramref name="cacheability"/> parameter is used to guide and set the <b>Cache-Control</b> header and <b>Pragma</b> header in the response.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.SetClientSideContentCacheExpiresHeaders(System.Web.HttpRequest,System.Web.HttpResponse,System.DateTime,System.DateTime,System.Web.HttpCacheability,System.String)">
            <summary>
            A helper method designed to set the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
            <param name="lastModified">The UTC date time value of the content being delivered last modified time stamp.</param>
            <param name="expires">The UTC date time value to expire the <paramref name="cacheability"/> caching.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <param name="entityTag">Set the <b>ETag</b> header to the specified value.</param>
            <remarks>
            The <paramref name="lastModified"/> parameter is used to set the <b>Last-Modified</b> header in the response but also used to determined if the <b>If-Modified-Since</b> header in the request is equal to the specified <paramref name="lastModified"/> value.
            If equal, HTTP content is not sent to the client and a status code of <see cref="F:System.Net.HttpStatusCode.NotModified"/> is set.
            <br/>
            <br/>
            The <paramref name="expires"/> parameter is used to set the <b>Expires</b> header in the response.
            <br/>
            <br/>
            The <paramref name="cacheability"/> parameter is used to guide and set the <b>Cache-Control</b> header and <b>Pragma</b> header in the response.
            <br/>
            <br/>
            The <paramref name="entityTag"/> parameter is used to set the <b>ETag</b> header in the response but also used to determined if the <b>If-None-Match</b> header in the request is equal to the specified <paramref name="entityTag"/> using a ruleset of <see cref="F:System.StringComparison.Ordinal"/>.
            If equal, HTTP content is not sent to the client and a status code of <see cref="F:System.Net.HttpStatusCode.NotModified"/> is set.
            <br/>
            <br/>
            <b>Note:</b> The <b>If-None-Match</b> header trumps the <b>If-Modified-Since</b> header.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.CreateClientSideContentCacheExpiresHeaders(Cuemon.Caching.CacheValidator,System.DateTime,System.Web.HttpCacheability,Cuemon.Doer{Cuemon.Caching.CacheValidator,System.Collections.Specialized.NameValueCollection,System.Boolean},System.Collections.Specialized.NameValueCollection,System.Net.HttpStatusCode@)">
            <summary>
            Creates the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <param name="expires">The UTC date time value to expire the <paramref name="cacheability"/> caching.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <param name="isClientSideResourceCached">The function delegate that will determine whether a cached version of the content is found client-side.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <param name="statusCode">The status code.</param>
            <returns>A <see cref="T:System.Net.WebHeaderCollection"/> instance that contains HTTP client-side related cache headers for the content being delivered to the client.</returns>
            <remarks>
            The <paramref name="validator"/> parameter is used to set the <b>Last-Modified</b> and <b>ETag</b> header in the response.
            <br/>
            <br/>
            The <paramref name="expires"/> parameter is used to set the <b>Expires</b> header in the response.
            <br/>
            <br/>
            The <paramref name="cacheability"/> parameter is used to guide and set the <b>Cache-Control</b> header and <b>Pragma</b> header in the response.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.CreateClientSideContentCacheExpiresHeaders(System.DateTime,System.DateTime,System.Web.HttpCacheability,Cuemon.Doer{System.DateTime,System.Collections.Specialized.NameValueCollection,System.Boolean},System.Collections.Specialized.NameValueCollection,System.Net.HttpStatusCode@)">
            <summary>
            Creates the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="lastModified">The UTC date time value of the content being delivered last modified time stamp.</param>
            <param name="expires">The UTC date time value to expire the <paramref name="cacheability"/> caching.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <param name="isClientSideResourceCached">The function delegate that will determine whether a cached version of the content is found client-side.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <param name="statusCode">The status code.</param>
            <returns>A <see cref="T:System.Net.WebHeaderCollection"/> instance that contains HTTP client-side related cache headers for the content being delivered to the client.</returns>
            <remarks>
            The <paramref name="lastModified"/> parameter is used to set the <b>Last-Modified</b> header in the response.
            <br/>
            <br/>
            The <paramref name="expires"/> parameter is used to set the <b>Expires</b> header in the response.
            <br/>
            <br/>
            The <paramref name="cacheability"/> parameter is used to guide and set the <b>Cache-Control</b> header and <b>Pragma</b> header in the response.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.HttpResponseUtility.CreateClientSideContentCacheExpiresHeaders(System.DateTime,System.DateTime,System.Web.HttpCacheability,Cuemon.Doer{System.DateTime,System.Collections.Specialized.NameValueCollection,System.String,System.Boolean},System.Collections.Specialized.NameValueCollection,System.String,System.Net.HttpStatusCode@)">
            <summary>
            Creates the appropriate HTTP client-side related cache headers for the content being delivered to the client.
            </summary>
            <param name="lastModified">The UTC date time value of the content being delivered last modified time stamp.</param>
            <param name="expires">The UTC date time value to expire the <paramref name="cacheability"/> caching.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <param name="isClientSideResourceCached">The function delegate that will determine whether a cached version of the content is found client-side.</param>
            <param name="headers">A collection of HTTP request headers.</param>
            <param name="entityTag">The server side entity tag to compare with the client side equivalent.</param>
            <param name="statusCode">The status code.</param>
            <returns>A <see cref="T:System.Net.WebHeaderCollection"/> instance that contains HTTP client-side related cache headers for the content being delivered to the client.</returns>
            <remarks>
            The <paramref name="lastModified"/> parameter is used to set the <b>Last-Modified</b> header in the response.
            <br/>
            <br/>
            The <paramref name="expires"/> parameter is used to set the <b>Expires</b> header in the response.
            <br/>
            <br/>
            The <paramref name="cacheability"/> parameter is used to guide and set the <b>Cache-Control</b> header and <b>Pragma</b> header in the response.
            <br/>
            <br/>
            The <paramref name="entityTag"/> parameter is used to set the <b>ETag</b> header in the response.
            </remarks>
        </member>
        <member name="T:Cuemon.Web.ICacheableHttpHandler">
            <summary>
            Extends the <see cref="T:System.Web.IHttpHandler"/> with client-side caching.
            </summary>
        </member>
        <member name="M:Cuemon.Web.ICacheableHttpHandler.GetCacheValidator">
            <summary>
            Gets a <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content of the resource.
            </summary>
            <returns>A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content of the resource.</returns>
        </member>
        <member name="M:Cuemon.Web.ICacheableHttpHandler.HasClientSideResource(Cuemon.Caching.CacheValidator)">
            <summary>
            Determines whether a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <returns>
            	<c>true</c> if a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Cuemon.Web.ISearchEngineOptimizer">
            <summary>
            An interface designed to ease the implmentation of SEO-related initiatives.
            </summary>
        </member>
        <member name="P:Cuemon.Web.ISearchEngineOptimizer.LastModified">
            <summary>
            Gets or sets a <see cref="T:System.DateTime"/> value from when a page was last modified, expressed as the Coordinated Universal Time (UTC).
            </summary>
            <returns>A <see cref="T:System.DateTime"/> value from when a page was last modified, expressed as the Coordinated Universal Time (UTC).</returns>
        </member>
        <member name="P:Cuemon.Web.ISearchEngineOptimizer.ChangeFrequency">
            <summary>
            Gets or sets a hint on how frequently the content of the page is likely to change.
            </summary>
            <value>A hint on how frequently the content of the page is likely to change.</value>
        </member>
        <member name="P:Cuemon.Web.ISearchEngineOptimizer.CrawlerPriority">
            <summary>
            Gets or sets the relative search engine priority of a page, where 0.0 is the lowest priority and 1.0 is the highest.
            </summary>
            <value>The relative search engine priority of a page, where 0.0 is the lowest priority and 1.0 is the highest.</value>
        </member>
        <member name="T:Cuemon.Web.ChangeFrequency">
            <summary>
            Specifies wow frequently a dynamic page is likely to change.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Always">
            <summary>
            Used to describe pages that change each time they are accessed.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Hourly">
            <summary>
            Used to descripe pages that change on a hourly basis.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Daily">
            <summary>
            Used to descripe pages that change on a daily basis.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Weekly">
            <summary>
            Used to descripe pages that change on a weekly basis.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Monthly">
            <summary>
            Used to descripe pages that change on a monthly basis.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Yearly">
            <summary>
            Used to descripe pages that change on a yearly basis.
            </summary>
        </member>
        <member name="F:Cuemon.Web.ChangeFrequency.Never">
            <summary>
            Used to describe pages that has been archived.
            </summary>
        </member>
        <member name="T:Cuemon.Web.MimeUtility">
            <summary>
            This utility class is designed to make Multipurpose Internet Mail Extensions (MIME) related operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Web.MimeUtility.ParseFileExtensions(System.String[])">
            <summary>
            Converts the specified <paramref name="extensions"/> to its equivalent sequence of <see cref="T:Cuemon.IO.FileMapping"/> object.
            </summary>
            <param name="extensions">The file extensions to parse against <see cref="P:Cuemon.Web.MimeUtility.MimeTypes"/>.</param>
            <returns>A sequence of <see cref="T:Cuemon.IO.FileMapping"/> objects matching the specified <paramref name="extensions"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="extensions"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="extensions"/> has a length of zero.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="extensions"/> has at least one invalid value.
            </exception>
        </member>
        <member name="M:Cuemon.Web.MimeUtility.ParseFileExtensions(System.Collections.Generic.IEnumerable{Cuemon.IO.FileMapping},System.String[])">
            <summary>
            Converts the specified <paramref name="extensions"/> to its equivalent sequence of <see cref="T:Cuemon.IO.FileMapping"/> object.
            </summary>
            <param name="mimeTypes">The MIME types to use as source for the <paramref name="extensions"/>.</param>
            <param name="extensions">The file extensions to parse against <paramref name="mimeTypes"/>.</param>
            <returns>A sequence of <see cref="T:Cuemon.IO.FileMapping"/> objects matching the specified <paramref name="extensions"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="extensions"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="extensions"/> has a length of zero.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="extensions"/> has at least one invalid value.
            </exception>
        </member>
        <member name="M:Cuemon.Web.MimeUtility.ParseContentType(System.String)">
            <summary>
            Converts the specified <paramref name="contentType"/> to its equivalent <see cref="T:Cuemon.IO.FileMapping"/> object.
            </summary>
            <param name="contentType">The content-type of a file to parse against <see cref="P:Cuemon.Web.MimeUtility.MimeTypes"/>.</param>
            <returns>A <see cref="T:Cuemon.IO.FileMapping"/> object equivalent to the specified <paramref name="contentType"/>.</returns>
            <exception cref="T:System.ArgumentNullException">contentType
            <paramref name="contentType"/> is null.
            </exception>
            <exception cref="T:Cuemon.ArgumentEmptyException">
            <paramref name="contentType"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="contentType"/> has zero or more than one forward slash (/).
            </exception>
        </member>
        <member name="M:Cuemon.Web.MimeUtility.ParseContentType(System.Collections.Generic.IEnumerable{Cuemon.IO.FileMapping},System.String)">
            <summary>
            Converts the specified <paramref name="contentType"/> to its equivalent <see cref="T:Cuemon.IO.FileMapping"/> object.
            </summary>
            <param name="mimeTypes">The MIME types to use as source for the <paramref name="contentType"/>.</param>
            <param name="contentType">The content-type of a file to parse against <paramref name="mimeTypes"/>.</param>
            <returns>A <see cref="T:Cuemon.IO.FileMapping"/> object equivalent to the specified <paramref name="contentType"/>.</returns>
            <exception cref="T:System.ArgumentNullException">contentType
            <paramref name="contentType"/> is null.
            </exception>
            <exception cref="T:Cuemon.ArgumentEmptyException">
            <paramref name="contentType"/> is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="contentType"/> has zero or more than one forward slash (/).
            </exception>
        </member>
        <member name="P:Cuemon.Web.MimeUtility.MimeTypes">
            <summary>
            Gets a read-only collection of the most common MIME types registered.
            </summary>
            <value>The the most common MIME types registered.</value>
        </member>
        <member name="T:Cuemon.Web.Routing.HttpRoute">
            <summary>
            Provides properties and methods for defining a route and for obtaining information about the route.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoute.#ctor(System.String,System.Web.IHttpHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRoute"/> class.
            </summary>
            <param name="uriPattern">The Uniform Resource Identifier (URI) pattern for the route.</param>
            <param name="handler">The object that processes requests for the route.</param>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoute.#ctor(System.String,System.Web.IHttpHandler,Cuemon.Net.Http.HttpMethods)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRoute"/> class.
            </summary>
            <param name="uriPattern">The Uniform Resource Identifier (URI) pattern for the route.</param>
            <param name="handler">The object that processes requests for the route.</param>
            <param name="methods">The HTTP methods that this route responds to.</param>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoute.#ctor(System.String,System.String,System.Web.IHttpHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRoute"/> class.
            </summary>
            <param name="uriPattern">The Uniform Resource Identifier (URI) pattern for the route.</param>
            <param name="virtualFilePath">The virtual file path of the route.</param>
            <param name="handler">The object that processes requests for the route.</param>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoute.#ctor(System.String,System.String,System.Web.IHttpHandler,Cuemon.Net.Http.HttpMethods)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRoute"/> class.
            </summary>
            <param name="uriPattern">The Uniform Resource Identifier (URI) pattern for the route.</param>
            <param name="handler">The object that processes requests for the route.</param>
            <param name="virtualFilePath">The virtual file path of the route.</param>
            <param name="methods">The HTTP methods that this route responds to.</param>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoute.GetVirtualRoutePath(System.Web.HttpContext)">
            <summary>
            Gets supplemental information about the URL that is associated with the route.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <returns>A <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> object that contains supplemental information about the URL that is associated with the route.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="context"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoute.ParseRoute">
            <summary>
            Parses the <see cref="P:Cuemon.Web.Routing.HttpRoute.UriPattern"/> property for any route arguments (eg. {controller}/{model}?value={value}).
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence containing all matched route arguments.</returns>
            <exception cref="T:System.ArgumentNullException">
            <see cref="P:Cuemon.Web.Routing.HttpRoute.UriPattern"/> is null.
            </exception>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.Handler">
            <summary>
            The object that processes requests for the route that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <value>The object that processes the request.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.Methods">
            <summary>
            Gets the HTTP methods that the route responds to.
            </summary>
            <value>The HTTP methods associated with route. The default value is <see cref="F:Cuemon.Net.Http.HttpMethods.Get"/>, <see cref="F:Cuemon.Net.Http.HttpMethods.Head"/>, <see cref="F:Cuemon.Net.Http.HttpMethods.Post"/> and <see cref="F:Cuemon.Net.Http.HttpMethods.Put"/>.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.UriPattern">
            <summary>
            Gets or sets the Uniform Resource Identifier (URI) pattern for the route.
            </summary>
            <value>The URI pattern for the route.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.VirtualFilePath">
            <summary>
            Gets the virtual path of the route.
            </summary>
            <value>The virtual path of the route.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.RouteArgumentsAsHexString">
            <summary>
            Gets or sets the route arguments (eg. {controller}/{model}?value={value}) that expects a hexadecimal string.
            </summary>
            <value>The route arguments that expects a hexadecimal string.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.CompoundPathSegments">
            <summary>
            Gets or sets the compound path segments of this route.
            </summary>
            <value>The compound path segments of this route.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoute.Data">
            <summary>
            Gets a collection of key/value pairs that provide additional user-defined information about this class.
            </summary>
            <value>An object that implements the <see cref="T:System.Collections.Generic.IDictionary`2"/> interface and contains a collection of user-defined key/value pairs.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Cuemon.Web.Routing.HttpRouteCollection">
            <summary>
            Provides a collection of routes for ASP.NET routing.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRouteCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRouteCollection"/> class.
            </summary>
        </member>
        <member name="T:Cuemon.Web.Routing.HttpRoutePath">
            <summary>
            Provides supplemental information about the URL associated with a <see cref="T:Cuemon.Web.Routing.HttpRoute"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.#ctor(System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> class.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> class.
            </summary>
            <param name="url">The URL of the route.</param>
            <param name="physicalFilePath">The physical file path of the route.</param>
            <param name="virtualFilePath">The virtual file path of the route.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="url"/> is null -or- <paramref name="physicalFilePath"/> is null -or- <paramref name="virtualFilePath"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.Equals(Cuemon.Web.Routing.HttpRoutePath)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the other parameter; otherwise, <c>false</c>. </returns>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.op_Equality(Cuemon.Web.Routing.HttpRoutePath,Cuemon.Web.Routing.HttpRoutePath)">
            <summary>
            Indicates whether two <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> instances are equal.
            </summary>
            <param name="routePath1">The first <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> to compare.</param>
            <param name="routePath2">The second <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> to compare.</param>
            <returns><c>true</c> if the values of <paramref name="routePath1"/> and <paramref name="routePath2"/> are equal; otherwise, false. </returns>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRoutePath.op_Inequality(Cuemon.Web.Routing.HttpRoutePath,Cuemon.Web.Routing.HttpRoutePath)">
            <summary>
            Indicates whether two <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> instances are not equal.
            </summary>
            <param name="routePath1">The first <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> to compare.</param>
            <param name="routePath2">The second <see cref="T:Cuemon.Web.Routing.HttpRoutePath"/> to compare.</param>
            <returns><c>true</c> if the values of <paramref name="routePath1"/> and <paramref name="routePath2"/> are not equal; otherwise, false.</returns>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoutePath.HasPhysicalFile">
            <summary>
            Determines whether the <see cref="P:Cuemon.Web.Routing.HttpRoutePath.PhysicalFilePath"/> contains the name of a file that exists.
            </summary>
            <value><c>true</c> if <see cref="P:Cuemon.Web.Routing.HttpRoutePath.PhysicalFilePath"/> contains the name of an existing file; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoutePath.PhysicalFileMimeType">
            <summary>
            Gets the MIME type of the physical file.
            </summary>
            <value>If <see cref="P:Cuemon.Web.Routing.HttpRoutePath.HasPhysicalFile"/> evaluates to <c>true</c>, then this property returns the MIME type of the physical file; otherwise, <c>null</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoutePath.IsHandler">
            <summary>
            Gets a value indicating whether the <see cref="P:Cuemon.Web.Routing.HttpRoutePath.VirtualFilePath"/> points to a handler.
            </summary>
            <value><c>true</c> if the <see cref="P:Cuemon.Web.Routing.HttpRoutePath.VirtualFilePath"/> points to a handler; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoutePath.Url">
            <summary>
            Gets information about the URL of the route.
            </summary>
            <value>A <see cref="T:System.Uri"/> object containing information regarding the URL of the route.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoutePath.PhysicalFilePath">
            <summary>
            Gets the physical file system path corresponding to the routed URL.
            </summary>
            <value>The file system path of the routed URL.</value>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRoutePath.VirtualFilePath">
            <summary>
            Gets the virtual path of the route.
            </summary>
            <value>The virtual path of the route.</value>
        </member>
        <member name="T:Cuemon.Web.Routing.HttpRouteTable">
            <summary>
            Stores the URL routes for an application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRouteTable.TryParse(System.Web.HttpContext,Cuemon.Web.Routing.HttpRoute@)">
            <summary>
            Determines whether a <see cref="T:Cuemon.Web.Routing.HttpRoute"/> can be resolved from the specified <paramref name="context"/>.
            </summary>
            <param name="context">The context of the ASP.NET application to resolve a <see cref="T:Cuemon.Web.Routing.HttpRoute"/> from.</param>
            <param name="route">The route that was resolved from the specified <paramref name="context"/>, if the parsing succeeded, or a null reference if the conversion failed.</param>
            <returns><c>true</c> if the <paramref name="route"/> parameter was resolved successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRouteTable.TryParse(System.Web.HttpContext,System.Collections.Generic.IDictionary{System.String,System.Object},Cuemon.Web.Routing.HttpRoute@)">
            <summary>
            Determines whether a <see cref="T:Cuemon.Web.Routing.HttpRoute"/> can be resolved from the specified <paramref name="context"/>.
            </summary>
            <param name="context">The context of the ASP.NET application to resolve a <see cref="T:Cuemon.Web.Routing.HttpRoute"/> from.</param>
            <param name="data">A collection of key/value pairs that provide additional user-defined information that must match the route being parsed.</param>
            <param name="route">The route that was resolved from the specified <paramref name="context"/>, if the parsing succeeded, or a null reference if the conversion failed.</param>
            <returns><c>true</c> if the <paramref name="route"/> parameter was resolved successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Cuemon.Web.Routing.HttpRouteTable.Routes">
            <summary>
            Gets a collection of objects that derive from the <see cref="T:Cuemon.Web.Routing.HttpRoute"/> class.
            </summary>
            <value>An object that contains all the routes in the collection.</value>
        </member>
        <member name="T:Cuemon.Web.Routing.HttpRouteUtility">
            <summary>
            This utility class is designed to make <see cref="T:Cuemon.Web.Routing.HttpRoute"/> operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Web.Routing.HttpRouteUtility.ParseRoute(System.String)">
            <summary>
            Parses the specified URI pattern for any route arguments (eg. {controller}/{model}?value={value}).
            </summary>
            <param name="uriPattern">The URI pattern to parse.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence containing all matched route arguments.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="uriPattern"/> is null.
            </exception>
        </member>
        <member name="T:Cuemon.Web.Security.WebSecurityUtility">
            <summary>This utility class is designed to make web related security operations easier to work with.</summary>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.Uri,System.Byte[])">
            <summary>
            Converts the specified <paramref name="location"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="location">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <returns>An URI equivalent to the <paramref name="location"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.Uri,System.Byte[],System.TimeSpan)">
            <summary>
            Converts the specified <paramref name="location"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="location">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <returns>An URI equivalent to the <paramref name="location"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.Uri,System.Byte[],System.TimeSpan,Cuemon.Security.Cryptography.HashAlgorithmType)">
            <summary>
            Converts the specified <paramref name="location"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="location">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <param name="algorithmType">The hash algorithm to use for the URI checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <returns>An URI equivalent to the <paramref name="location"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.Uri,System.Byte[],System.TimeSpan,Cuemon.Security.Cryptography.HashAlgorithmType,System.String)">
            <summary>
            Converts the specified <paramref name="location"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="location">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <param name="algorithmType">The hash algorithm to use for the URI checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <param name="secureUriFormat">The naming format of the required query string parameters of the tamper protected URI. Default is <b>?token={0}&amp;iv={1}&amp;salt={2}</b>, where you can change the naming of the query string parameters.</param>
            <returns>An URI equivalent to the <paramref name="location"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.Uri,System.Byte[],System.TimeSpan,Cuemon.Security.Cryptography.HashAlgorithmType,System.String,System.String)">
            <summary>
            Converts the specified <paramref name="location"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="location">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <param name="algorithmType">The hash algorithm to use for the URI checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <param name="secureUriFormat">The naming format of the required query string parameters of the tamper protected URI. Default is <b>?token={0}&amp;iv={1}&amp;salt={2}</b>, where you can change the naming of the query string parameters.</param>
            <param name="querystringParameterHashName">The name of the checksum parameter to append to the tampering protected URI. Default is <b>hash</b>.</param>
            <returns>An URI equivalent to the <paramref name="location"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.String,System.Byte[])">
            <summary>
            Converts the specified <paramref name="uriLocation"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="uriLocation">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <returns>An URI equivalent to the <paramref name="uriLocation"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.String,System.Byte[],System.TimeSpan)">
            <summary>
            Converts the specified <paramref name="uriLocation"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="uriLocation">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive. Default is <b>5 minutes</b>.</param>
            <returns>An URI equivalent to the <paramref name="uriLocation"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.String,System.Byte[],System.TimeSpan,Cuemon.Security.Cryptography.HashAlgorithmType)">
            <summary>
            Converts the specified <paramref name="uriLocation"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="uriLocation">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <param name="algorithmType">The hash algorithm to use for the URI checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <returns>An URI equivalent to the <paramref name="uriLocation"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.String,System.Byte[],System.TimeSpan,Cuemon.Security.Cryptography.HashAlgorithmType,System.String)">
            <summary>
            Converts the specified <paramref name="uriLocation"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="uriLocation">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <param name="algorithmType">The hash algorithm to use for the URI checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <param name="secureUriFormat">The naming format of the required query string parameters of the tamper protected URI. Default is <b>?token={0}&amp;iv={1}&amp;salt={2}</b>, where you can change the naming of the query string parameters.</param>
            <returns>An URI equivalent to the <paramref name="uriLocation"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.CreateTamperingProtectedUri(System.String,System.Byte[],System.TimeSpan,Cuemon.Security.Cryptography.HashAlgorithmType,System.String,System.String)">
            <summary>
            Converts the specified <paramref name="uriLocation"/> to a tampering protected <see cref="T:System.Uri"/>.
            </summary>
            <param name="uriLocation">The URI to protect from tampering.</param>
            <param name="securityKey">The security key to use for the <see cref="T:Cuemon.Security.SecurityToken"/> encryption.</param>
            <param name="timeToLive">The amount of time to keep the URI alive.</param>
            <param name="algorithmType">The hash algorithm to use for the URI checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <param name="secureUriFormat">The naming format of the required query string parameters of the tamper protected URI. Default is <b>?token={0}&amp;iv={1}&amp;salt={2}</b>, where you can change the naming of the query string parameters.</param>
            <param name="querystringParameterHashName">The name of the checksum parameter to append to the tampering protected URI. Default is <b>hash</b>.</param>
            <returns>An URI equivalent to the <paramref name="uriLocation"/> but protected from tampering - including but not limited to - MITM attacks.</returns>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[])">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[],System.String)">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of the <paramref name="token"/>.</param>
            <param name="token">The security token to decrypt and parse for a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[],System.String,System.String)">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of the <paramref name="token"/>.</param>
            <param name="token">The security token to decrypt and parse for a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <param name="iv">The initialization vector (IV) to use in the decryption of the <paramref name="token"/>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[],System.String,System.String,System.String)">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of the <paramref name="token"/>.</param>
            <param name="token">The security token to decrypt and parse for a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <param name="iv">The initialization vector (IV) to use in the decryption of the <paramref name="token"/>.</param>
            <param name="salt">The salt used in the computation of the integrity verification of <paramref name="protectedUri"/>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[],System.String,System.String,System.String,System.String)">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of the <paramref name="token"/>.</param>
            <param name="token">The security token to decrypt and parse for a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <param name="iv">The initialization vector (IV) to use in the decryption of the <paramref name="token"/>.</param>
            <param name="salt">The salt used in the computation of the integrity verification of <paramref name="protectedUri"/>.</param>
            <param name="hash">The checksum to verify the integrity of <paramref name="protectedUri"/>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[],System.String,System.String,System.String,System.String,Cuemon.Security.Cryptography.HashAlgorithmType)">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of the <paramref name="token"/>.</param>
            <param name="token">The security token to decrypt and parse for a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <param name="iv">The initialization vector (IV) to use in the decryption of the <paramref name="token"/>.</param>
            <param name="salt">The salt used in the computation of the integrity verification of <paramref name="protectedUri"/>.</param>
            <param name="hash">The checksum to verify the integrity of <paramref name="protectedUri"/>.</param>
            <param name="algorithmType">The hash algorithm to use for the <paramref name="protectedUri"/> checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="M:Cuemon.Web.Security.WebSecurityUtility.ParseTamperingProtectedUri(System.Uri,System.Byte[],System.String,System.String,System.String,System.String,Cuemon.Security.Cryptography.HashAlgorithmType,System.String)">
            <summary>
            Parses and verifies the tampering protected URI.
            </summary>
            <param name="protectedUri">The tampering protected URI.</param>
            <param name="securityKey">The security key to use in the decryption of the <paramref name="token"/>.</param>
            <param name="token">The security token to decrypt and parse for a <see cref="T:Cuemon.Security.SecurityToken"/>.</param>
            <param name="iv">The initialization vector (IV) to use in the decryption of the <paramref name="token"/>.</param>
            <param name="salt">The salt used in the computation of the integrity verification of <paramref name="protectedUri"/>.</param>
            <param name="hash">The checksum to verify the integrity of <paramref name="protectedUri"/>.</param>
            <param name="algorithmType">The hash algorithm to use for the <paramref name="protectedUri"/> checksum computation. Default is <b><see cref="F:Cuemon.Security.Cryptography.HashAlgorithmType.SHA1"/></b>.</param>
            <param name="querystringParameterHashName">The name of the checksum parameter to remove from the <paramref name="protectedUri"/> before integrity verification. Default is <b>hash</b>.</param>
            <exception cref="T:System.Security.SecurityException">This exception is thrown when an unsucessfull parse is meet, hence values has been tampered with, <paramref name="protectedUri"/> is invalid, token has expired or one or more of the necessary parameters is missing.</exception>
        </member>
        <member name="T:Cuemon.Web.SessionState.HttpFastSessionState">
            <summary>
            Provides access to session-state values.
            </summary>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.SessionState.HttpFastSessionState"/> class.
            </summary>
            <remarks>Experimental session "replacement" that does not suffer from ASP.NET lifecycle blocking states.</remarks>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.SessionState.HttpFastSessionState"/> class.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="response">An instance of the <see cref="T:System.Web.HttpResponse"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.Abandon">
            <summary>
            Ends the current session.
            </summary>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.Add(System.String,System.Object)">
            <summary>
            Adds a new item to the session-state collection.
            </summary>
            <param name="name">The name of the item to add to the session-state collection.</param>
            <param name="value">The value of the item to add to the session-state collection.</param>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.Clear">
            <summary>
            Clears all values from the session-state item collection.
            </summary>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to read all the session-state item values in the current session.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> that can iterate through the values in the session-state item collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.Remove(System.String)">
            <summary>
            Deletes an item from the session-state item collection.
            </summary>
            <param name="name">The name of the item to delete from the session-state item collection.</param>
        </member>
        <member name="M:Cuemon.Web.SessionState.HttpFastSessionState.RemoveAll">
            <summary>
            Clears all values from the session-state item collection.
            </summary>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.IsNewSession">
            <summary>
            Gets a value indicating whether the session was created with the current request.
            </summary>
            <value></value>
            <returns>true if the session was created with the current request; otherwise, false.
            </returns>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.Count">
            <summary>
            Gets the number of items in the session-state item collection.
            </summary>
            <value></value>
            <returns>
            The number of items in the session-state item collection.
            </returns>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.System#Web#SessionState#IHttpSessionState#IsReadOnly">
            <summary>
            Gets a value indicating whether the session is read-only.
            </summary>
            <value></value>
            <returns>true if the session is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.Keys">
            <summary>
            Gets a collection of the keys for all values stored in the session-state item collection.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/> that contains all the session-item keys.
            </returns>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.SessionID">
            <summary>
            Gets the unique session identifier for the session.
            </summary>
            <returns>The session ID.</returns>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.Timeout">
            <summary>
            Gets and sets the time-out period allowed between requests before the session-state provider terminates the session.
            </summary>
            <returns>The time-out period.</returns>
        </member>
        <member name="P:Cuemon.Web.SessionState.HttpFastSessionState.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Cuemon.Web.SiteMapProtocolHandler">
            <summary>
            Initializes the sitemaps.org protocol for a Cuemon enabled ASP.NET website.
            For more information in regards to the sitemaps.org protocol, please visit: http://sitemaps.org/protocol.php.
            </summary>
        </member>
        <member name="M:Cuemon.Web.SiteMapProtocolHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="P:Cuemon.Web.SiteMapProtocolHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.
            </returns>
        </member>
        <member name="T:Cuemon.Web.UI.ControlUtility">
            <summary>
            This utility class is designed to make <see cref="T:System.Web.UI.Control"/> operations easier to work with.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ResolvePartialUniqueId(System.Web.UI.Control)">
            <summary>
            Resolves the partial unique identifier from the given <see cref="T:System.Web.UI.Control"/> object.
            </summary>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> source to resolve the partial unique identifier from.</param>
            <returns>A partial unique identifier you then can complete with the respective Form og QueryString item name.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.HasUniqueControlId(System.Web.UI.Control,System.String@)">
            <summary>
            Determines whether the <see cref="T:System.Web.UI.Control"/> ID property is unique on the given and nested controls.
            </summary>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> source object.</param>
            <param name="duplicateId">The duplicate id to display in exception messages or similiar.</param>
            <returns>
            	<c>true</c> if the <see cref="T:System.Web.UI.Control"/> ID property is unique on the given and nested controls; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ContainsControl(System.Collections.Generic.IList{System.Web.UI.Control})">
            <summary>
            Determines whether the specified <see cref="T:System.Web.UI.Control"/> sources contains one or more nested controls of themself.
            </summary>
            <param name="sources">The <see cref="T:System.Web.UI.Control"/> collection to match from and against.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Web.UI.Control"/> sources contains one or more nested controls of themself; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ContainsControl(System.Web.UI.Control)">
            <summary>
            Determines whether the specified <see cref="T:System.Web.UI.Control"/> source contains one or more nested controls of itself.
            </summary>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> to match from and against.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Web.UI.Control"/> source contains one or more nested controls of itself; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ContainsControl(System.Web.UI.Control,System.Web.UI.Control)">
            <summary>
            Determines whether the specified <see cref="T:System.Web.UI.Control"/> source contains one or more nested controls of the by parameter specified target <see cref="T:System.Web.UI.Control"/>.
            </summary>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> to match from.</param>
            <param name="targetControl">The <see cref="T:System.Web.UI.Control"/> to match against.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Web.UI.Control"/> source contains one or more nested controls of the by parameter specified target <see cref="T:System.Web.UI.Control"/>; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ContainsControl(System.Web.UI.Control,System.Type)">
            <summary>
            Determines whether the specified <see cref="T:System.Web.UI.Control"/> source contains one or more nested controls of the by parameter specified target control type.
            </summary>
            <param name="source">The <see cref="T:System.Web.UI.Control"/> to match from.</param>
            <param name="targetControlType">The control type to match against.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Web.UI.Control"/> source contains one or more nested controls of the by parameter specified target control type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.GetDescendantControls(System.Web.UI.Control)">
            <summary>
            Gets the descendant controls from the specified source control.
            </summary>
            <param name="source">The source control to recursively retrieve descendant controls from.</param>
            <returns>A generic list of web controls.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.GetDescendantControls(System.Web.UI.Control,Cuemon.Filter,System.Type[])">
            <summary>
            Gets the descendant controls from the specified source control.
            </summary>
            <param name="source">The source control to recursively retrieve descendant controls from.</param>
            <param name="filter">The filter action to apply to this method.</param>
            <param name="filterTypes">The filter statement to apply for the by parameter specified control and its controls hierarchy.</param>
            <returns>A generic list of web controls.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.GetDescendantOrSelfControls(System.Web.UI.Control)">
            <summary>
            Gets the descendant or self controls from the specified source control.
            </summary>
            <param name="source">The source control to recursively retrieve descendant controls from.</param>
            <returns>A generic list of web controls.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.GetDescendantOrSelfControls(System.Web.UI.Control,Cuemon.Filter,System.Type[])">
            <summary>
            Gets the descendant or self controls from the specified source control.
            </summary>
            <param name="source">The source control to recursively retrieve descendant controls from.</param>
            <param name="filter">The filter action to apply to this method.</param>
            <param name="filterTypes">The filter statement to apply for the by parameter specified control and its controls hierarchy.</param>
            <returns>A generic list of web controls.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.GetDescendantOrSelfControlsCore(System.Web.UI.Control,System.Boolean,Cuemon.Filter,System.Type[])">
            <summary>
            Gets the descendant (or self) controls from the specified source control. Core method for the public methods GetDescendantOrSelfControls and GetDescendantControls.
            </summary>
            /// <param name="source">The source control to recursively retrieve descendant controls from.</param>
            <param name="includeSource">if set to <c>true</c> the <see cref="T:System.Web.UI.Control"/> source is the first element added to the collection.</param>
            <param name="filter">The filter action to apply to this method.</param>
            <param name="filterTypes">The filter statement to apply for the by parameter specified control and its controls hierarchy.</param>
            <returns>A generic list of web controls.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ControlAsStream(System.Web.UI.Control,System.Type[])">
            <summary>
            Create and returns a XML stream represenation of the control object supplied.
            </summary>
            <param name="control">The <see cref="T:System.Web.UI.Control"/> object to be represented as a XML stream.</param>
            <param name="excludePropertyBaseTypes">Filter out all control properties where the specified base type(s) is in the control property hierarchy.</param>
            <returns></returns>
        </member>
        <member name="M:Cuemon.Web.UI.ControlUtility.ControlsAsStream(System.Collections.Generic.IEnumerable{System.Web.UI.Control},System.Type[])">
            <summary>
            Create and returns a XML stream represenation of the control objects supplied.
            </summary>
            <param name="controls">The generic enumerable of control objects to be represented as a XML stream.</param>
            <param name="excludePropertyBaseTypes">Filter out all control properties specified base type(s) in the control property hierarchy.</param>
            <returns></returns>
        </member>
        <member name="T:Cuemon.Web.UI.WebControls.DebugView">
            <summary>
            Displays the debug view of a Cuemon enabled website.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.WebControls.DebugView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.WebControls.DebugView"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.WebControls.DebugView.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="P:Cuemon.Web.UI.WebControls.DebugView.DebugXml">
            <summary>
            Gets the associated debug XML for the requested <see cref="P:Cuemon.Web.UI.WebControls.DebugView.PageName"/>.
            </summary>
            <value>The associated debug XML for the requested <see cref="P:Cuemon.Web.UI.WebControls.DebugView.PageName"/>.</value>
        </member>
        <member name="P:Cuemon.Web.UI.WebControls.DebugView.PageName">
            <summary>
            Gets the name of the page to fetch debug information for.
            </summary>
            <value>The name of the page to fetch debug information for.</value>
        </member>
        <member name="T:Cuemon.Web.UI.XsltMasterPage">
            <summary>
            Represents an .master file, also known as a Master page, requested from a server that hosts an ASP.NET Web application.
            If implemented correct, this .master file also has a corresponding .xslt and .xml page.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltMasterPage"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltMasterPage"/> class.
            </summary>
            <param name="styleSheet">The <see cref="T:System.String"/> of the style sheet phraseDocument, or a valid style sheet phraseDocument.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltMasterPage"/> class.
            </summary>
            <param name="styleSheet">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> style sheet phraseDocument.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current XML structure of this style sheet.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current XML structure of this style sheet.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.GetCustomXmlNodes">
            <summary>
            Gets the custom XML for this XsltMasterPage.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltMasterPage.GetCacheValidator">
            <summary>
            Gets a <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content of the resource.
            </summary>
            <returns>A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content of the resource.</returns>
        </member>
        <member name="P:Cuemon.Web.UI.XsltMasterPage.DefaultXsltExtension">
            <summary>
            Gets or sets the default XSLT extension value. Default is <c>.xslt</c>.
            </summary>
            <value>The default XSLT extension value.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltMasterPage.AutoStyleSheetResolving">
            <summary>
            Gets or sets a value indicating whether to automatic resolve the XSLT style sheet for later transformations using the pageName.extension.xsl pattern.
            </summary>
            <value>
            	<c>true</c> if automatic resolve the XSLT style sheet for later transformations using the pageName.extension.xsl pattern; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltMasterPage.StyleSheet">
            <summary>
            Gets or sets the style sheet to be used in the transformation.
            </summary>
            <value>The style sheet to be used in the transformation.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltMasterPage.StyleSheetNavigable">
            <summary>
            Gets or sets the style sheet to be used in the transformation.
            </summary>
            <value>The style sheet to be used in the transformation.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltMasterPage.Parameters">
            <summary>
            Gets the parameters of the XsltMasterPage.
            </summary>
            <value>The parameters of the XsltMasterPage.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltMasterPage.Name">
            <summary>
            Gets the name of the current page relative to the root of the website, eg. /Member/MasterPage.master.
            </summary>
            <value>The name of the current page relative to the root of the website.</value>
        </member>
        <member name="T:Cuemon.Web.UI.XsltPageLocalization">
            <summary>
            Represent the localization settings for the Page (eg. Phrases etc.).
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPageLocalization"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalization.#ctor(Cuemon.Web.UI.XsltPage)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPageLocalization"/> class.
            </summary>
            <param name="page">A reference to the <see cref="T:Cuemon.Web.UI.XsltPage"/> instance.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalization.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalization.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalization.Page">
            <summary>
            Gets or sets a reference to the <see cref="T:Cuemon.Web.UI.XsltPage"/> instance.
            </summary>
            <value>The <see cref="T:Cuemon.Web.UI.XsltPage"/> instance.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalization.Phrases">
            <summary>
            Gets the phrases for the current Localization.
            </summary>
            <value>The phrases of the current Localization.</value>
        </member>
        <member name="T:Cuemon.Web.UI.XsltPageLocalizationPhrase">
            <summary>
            Represents a Phrase.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhrase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPageLocalizationPhrase"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhrase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPageLocalizationPhrase"/> class.
            </summary>
            <param name="key">The key of the Phrase.</param>
            <param name="text">The text of the Phrase.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhrase.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhrase.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalizationPhrase.Key">
            <summary>
            Gets the key of the Phrase.
            </summary>
            <value>The key of the Phrase.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalizationPhrase.Text">
            <summary>
            Gets the text of the Phrase.
            </summary>
            <value>The text of the Phrase.</value>
        </member>
        <member name="T:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection">
            <summary>
            Represents one or more phrase(s) for a given localization - global and local scoped in terms of a Page.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.#ctor(Cuemon.Web.UI.XsltPageLocalization)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection"/> class.
            </summary>
            <param name="localization">A reference to the <see cref="T:Cuemon.Web.UI.XsltPageLocalization"/> instance.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.Localization">
            <summary>
            Gets a reference to the <see cref="T:Cuemon.Web.UI.XsltPageLocalization"/> instance.
            </summary>
            <value>The reference to the <see cref="T:Cuemon.Web.UI.XsltPageLocalization"/> instance.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.Count">
            <summary>
            Gets the number of elements contained in this object.
            </summary>
            <value>The number of elements contained in this object.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPageLocalizationPhraseCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.UI.XsltPageLocalizationPhrase"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Cuemon.Web.WcfGlobalModule">
            <summary>
            A <see cref="T:Cuemon.Web.GlobalModule"/> implementation that is tweaked for Windows Communication Foundation (WCF) as the runtime platform.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.HandleUrlRouting(System.Web.HttpApplication)">
            <summary>
            Handles the URL routing of this module.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method requires custom implementation should you choose to use it under WCF.</remarks>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.HandleExceptionInterception(System.Web.HttpApplication,System.Boolean)">
            <summary>
            Handles the interception of an unhandled exception. Especially useful for XML web services.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="includeStackTrace">if set to <c>true</c> the stack trace of the exception is included in the rendered result.</param>
            <remarks>
            This method controls the exception interception for the Windows Communication Foundation runtime.<br/>
            If <see cref="P:Cuemon.Web.WcfGlobalModule.EnableWcfRestFaultXmlParsing"/> is set to <c>true</c>, then all Fault related WCF message will be written as nicely formatted XML exceptions.
            <br/>
            <br/>
            Note: <paramref name="includeStackTrace"/> only affects exception thrown in the normal ASP.NET lifecycle.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.HandleCompression(System.Web.HttpApplication,System.String[])">
            <summary>
            Handles the compression of the <see cref="P:System.Web.HttpResponse.OutputStream"/>.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="fileExtensions">An array of file extensions to enable compression on.</param>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.InitializeCompression(System.Web.HttpApplication,Cuemon.Web.CompressionMethodScheme)">
            <summary>
            Handles the initialization of compression for the <see cref="P:System.Web.HttpResponse.OutputStream"/>.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="compressionMethod">The compression method to apply to the HTTP Content-Encoding header.</param>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.OnPreRequestHandlerExecute(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreRequestHandlerExecute event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.OnPreSendRequestHeaders(System.Web.HttpApplication)">
            <summary>
            Provides access to the PreSendRequestHeaders event of the <see cref="T:System.Web.HttpApplication"/> control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.WcfGlobalModule.IsWindowsCommunicationFoundationHelpPage(System.Web.HttpApplication)">
            <summary>
            Determines whether the specified <paramref name="context"/> suggest a WCF Web HTTP Service Help Page.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <returns><c>true</c> if the specified <paramref name="context"/> suggest a WCF Web HTTP Service Help Page; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Cuemon.Web.WcfGlobalModule.EnableWcfRestFaultXmlParsing">
            <summary>
            Gets or sets a value indicating whether WCF related Fault-xml should be intercepted and converted to same XML style as <see cref="M:Cuemon.Xml.XmlConvertUtility.ToXmlElement(System.Exception)"/>. Default is false.
            </summary>
            <value>
            	<c>true</c> if WCF related Fault-xml should be intercepted and converted to same XML style as <see cref="M:Cuemon.Xml.XmlConvertUtility.ToXmlElement(System.Exception)"/>; otherwise, <c>false</c>.
            </value>
            <remarks>For this to work, you must have enabled <c>AspNetCompatibilityRequirements</c> in your WCF service to either <c>AspNetCompatibilityRequirementsMode.Allowed</c> or <c>AspNetCompatibilityRequirementsMode.Required</c>.</remarks>
        </member>
        <member name="T:Cuemon.Web.WebsiteGlobalizationTimeZone">
            <summary>
            Represents time zone information with XML support.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZone"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZone"/> class.
            </summary>
            <param name="standardName">The timezone standard name.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.#ctor(Cuemon.Globalization.TimeZoneInfoKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZone"/> class.
            </summary>
            <param name="timeZone">The timezone key.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZone.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="T:Cuemon.Web.WebsitePrivacyProvider">
            <summary>
            Provides a common base class for an implementation of the Platform for Privacy Preferences Project (P3P), which enables Websites to express their 
            privacy practices in a standard format that can be retrieved automatically and interpreted easily by user agents.
            </summary>
        </member>
        <member name="T:Cuemon.Web.WebsiteRobots">
            <summary>
            Represents the robots exclusion information for a <see cref="T:Cuemon.Web.Website"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteRobots.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteRobots"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteRobots.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteRobots"/> class.
            </summary>
            <param name="website">An instance of the <see cref="T:Cuemon.Web.Website"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteRobots.RenderRobotsExclusionProtocol">
            <summary>
            Renders the robots exclusion XML file to a valid Robots Exclusion Protocol.
            </summary>
            <returns>A <see cref="T:System.String"/> representing the Robots Exclusion Protocol.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteRobots.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteRobots.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteRobots.CreateNavigator">
            <summary>
            Returns a new <see cref="T:System.Xml.XPath.XPathNavigator"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Xml.XPath.XPathNavigator"/> object.
            </returns>
        </member>
        <member name="P:Cuemon.Web.WebsiteRobots.ExclusionFile">
            <summary>
            Gets the robots exclusion XML file.
            </summary>
            <value>The robots exclusion XML file.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteRobots.ExclusionStyleSheetFile">
            <summary>
            Gets the corresponding robots exclusion XSLT file.
            </summary>
            <value>The corresponding robots exclusion XSLT file.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteSecurityIPRestriction">
            <summary>
            Provides information about IP restriction, such as the IP# to allow or deny access, and an optional redirect on denied access.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestriction.#ctor(Cuemon.Web.Configuration.WebsiteSecurityIPRestrictionElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSecurityIPRestriction"/> class.
            </summary>
            <param name="ipRestrictionElement">A valid IPRestriction configuration element.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestriction.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestriction.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurityIPRestriction.RemoteAddress">
            <summary>
            Gets the remote address to grant or deny access.
            </summary>
            <value>The remote address to grant or deny access.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurityIPRestriction.HasAccess">
            <summary>
            Gets a value indicating whether the remote host address has access.
            </summary>
            <value>
            	<c>true</c> if the remote host address has access; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurityIPRestriction.Transfer">
            <summary>
            Gets the optional transfer URL to use on denied access (403:Forbidden).
            </summary>
            <value>The optional transfer URL to use on denied access (403:Forbidden).</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteSecurityIPRestrictionCollection">
            <summary>
            Represent an IP restriction collection for a given Website and its affiliated ASP.NET application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSecurityIPRestrictionCollection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.#ctor(Cuemon.Web.WebsiteSecurity)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSecurityIPRestrictionCollection"/> class.
            </summary>
            <param name="security">An instance of the <see cref="T:Cuemon.Web.WebsiteSecurity"/> class.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.Count">
            <summary>
            Gets the number of elements contained in this object.
            </summary>
            <value>The number of elements contained in this object.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurityIPRestrictionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Cuemon.Web.WebsiteSecurity">
            <summary>
            Represents the security settings for the Website.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSecurity"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurity.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSecurity"/> class.
            </summary>
            <param name="website">The <see cref="P:Cuemon.Web.WebsiteSecurity.Website"/> of this object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurity.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSecurity.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurity.IPRestrictions">
            <summary>
            Gets the IP restrictions settings for this Website.
            </summary>
            <value>The IP restrictions settings for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurity.DefaultHasAccess">
            <summary>
            Gets a value indicating whether access is granted.
            </summary>
            <value><c>true</c> if access is granted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteSecurity.DefaultTransferOnStatusCodeForbidden">
            <summary>
            Gets the default transfer URL on denied access (403:Forbidden).
            </summary>
            <value>The default transfer URL on denied access (403:Forbidden).</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteMaintenance">
            <summary>
            Represents the globalization settings for the Website.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteMaintenance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteMaintenance"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteMaintenance.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteMaintenance"/> class.
            </summary>
            <param name="website">The <see cref="P:Cuemon.Web.WebsiteMaintenance.Website"/> of this object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteMaintenance.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteMaintenance.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteMaintenance.RedirectOnEnabled">
            <summary>
            Gets the redirect URL to be used when maintenance is enabled.
            </summary>
            <value>The redirect URL to be used when maintenance is enabled.</value>
        </member>
        <member name="T:Cuemon.Web.UI.XsltPage">
            <summary>
            Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.
            If implemented correct, this .apsx file also has a corresponding .xslt and .xml page.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPage"/> class. XSLT stylesheet reference will be automatically resolved.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPage"/> class.
            </summary>
            <param name="styleSheet">The <see cref="T:System.String"/> of the XSLT stylesheet, or a valid XSLT stylesheet document.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.UI.XsltPage"/> class.
            </summary>
            <param name="styleSheet">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> XSLT stylesheet document.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Cuemon.Web.UI.XsltPage"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.GetFriendlyName">
            <summary>
            Gets the assumed friendly name of the current page, relative to the root of the website, exlucding any query string information.
            </summary>
            <returns>The assumed friendly name of the current page, relative to the root of the website, exlucding any query string information.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.GetFriendlyName(System.Boolean)">
            <summary>
            Gets the assumed friendly name of the current page, relative to the root of the website.
            </summary>
            <param name="includeQueryString">if set to <c>true</c> any query string information is included in the result; otherwise <c>false</c>.</param>
            <returns>The assumed friendly name of the current page, relative to the root of the website. If <paramref name="includeQueryString"/> is set to true, any query string information is included in the result.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.OnPreInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Page.PreInit"/> event at the beginning of page initialization.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.OnPreLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Page.PreLoad"/> event after postback data is loaded into the page server controls but before the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.OnLoadComplete(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Page.LoadComplete"/> event at the end of the page load stage.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ResolveChangeFrequency">
            <summary>
            Resolves a hint on how frequently the content of the page is likely to change by looking at the <see cref="P:Cuemon.Web.UI.XsltPage.LastModified"/> property.
            </summary>
            <returns>A hint on how frequently the content of the page is likely to change.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.HasClientSideResource(Cuemon.Caching.CacheValidator)">
            <summary>
            Determines whether a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>.
            </summary>
            <param name="validator">A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content validation of the resource.</param>
            <returns>
            	<c>true</c> if a cached version of the content of the resource is found client-side given the specified <paramref name="validator"/>; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="validator"/> is null.
            </exception>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.GetCacheValidator">
            <summary>
            Gets a <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content of the resource.
            </summary>
            <returns>A <see cref="T:Cuemon.Caching.CacheValidator"/> object that represents the content of the resource.</returns>
            <remarks>The default implementation of this method check for created, last modified and checksum by the following criterias:
            1.: the associated XSLT file (if present), 
            2.: the page itself (typically name.aspx), 
            3.: the configuration file of the website (web.config),
            4.: the associated site map file,
            5.: the associated phrase file.
            Any of the above who has the highest value, is the one returned.
            </remarks>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.AddTransformCoreExtensionsAndParameters">
            <summary>
            Adds the core extensions and parameters for the transformation of this object.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.InitializeCulture">
            <summary>
            Sets the <see cref="P:System.Web.UI.Page.Culture"/> and <see cref="P:System.Web.UI.Page.UICulture"/> for the current thread of the page.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Initializes the <see cref="T:System.Web.UI.HtmlTextWriter"></see> object and calls on the child controls of the <see cref="T:System.Web.UI.Page"></see> to render.<br/>
            This overridden method, will write the transformed content to the HtmlTextWriter.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> that receives the page content.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.GetExecutionTime">
            <summary>
            Gets the amount of time the execution took from the construction of this class until the call of this method.
            </summary>
            <returns>A <see cref="T:System.TimeSpan"/> with the current execution time.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.Transform(System.IO.Stream)">
            <summary>
            Transforms the specified input against the assigned XSL.
            </summary>
            <param name="input">The XML input to transform.</param>
            <returns>The transformed content of <paramref name="input"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.OutputSettings">
            <summary>
            Get the xsl:output settings from the associated <see cref="P:Cuemon.Web.UI.XsltPage.StyleSheet"/> or <see cref="P:Cuemon.Web.UI.XsltPage.StyleSheetNavigable"/>.
            </summary>
            <returns>An instance of the <see cref="T:Cuemon.Xml.Xsl.XsltOutput"/> class equivalent to the xsl:output of the associated <see cref="P:Cuemon.Web.UI.XsltPage.StyleSheet"/> or <see cref="P:Cuemon.Web.UI.XsltPage.StyleSheetNavigable"/>.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current XML structure of this style sheet <see cref="T:Cuemon.Web.UI.XsltPage"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current XML structure of this style sheet <see cref="T:Cuemon.Web.UI.XsltPage"></see>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToString(System.IO.Stream,Cuemon.PreambleSequence,System.Text.Encoding)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using the preferred encoding with the option to keep or remove any byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <param name="encoding">The preferred encoding to use.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.GetCustomXmlNodes">
            <summary>
            Creates and returns a <see cref="T:System.Xml.XPath.XPathNodeIterator"/> of custom XML entries for this XsltPage.
            Typically this is taken from the XsltPage.aspx.xml file.
            </summary>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream representation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Cuemon.Web.UI.XsltPage.Dispose">
            <summary>
            Enables a server control to perform final clean up before it is released from memory.
            </summary>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.DefaultXsltExtension">
            <summary>
            Gets or sets the default XSLT extension value. Default is <c>.xslt</c>.
            </summary>
            <value>The default XSLT extension value.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.IsCurrentRequestRefresh">
            <summary>
            Gets a value indicating whether this instance is currently experiencing a refresh request.
            </summary>
            <value>
            	<c>true</c> if this instance is currently experiencing a refresh request; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.DefaultContentType">
            <summary>
            Gets or sets the overriding value for the default HTTP MIME TYPE of the output stream.
            </summary>
            <value>The overriding value for the default HTTP MIME TYPE of the output stream. The default value is text/html (was: application/xhtml+xml, but need more testing).</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.ContextItems">
            <summary>
            Gets an assembled item collection of <see cref="T:Cuemon.Web.HttpContextType"/>.
            </summary>
            <value>An assembled item collection of <see cref="T:Cuemon.Web.HttpContextType"/>.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.EnableStyleSheetCaching">
            <summary>
            Gets or sets a value indicating whether XSL stylesheet caching is enabled for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>.
            </summary>
            <value>
            	<c>true</c> if XSL stylesheet caching is enabled for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.EnableMetadataCaching">
            <summary>
            Gets or sets a value indicating whether XML metadata caching is enabled for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>.
            </summary>
            <value>
            	<c>true</c> if XML metadata caching is enabled for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.EnableDebug">
            <summary>
            Gets or sets a value indicating whether to display debug information on the rendered UI for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>.
            </summary>
            <value><c>true</c> if debug information is displayed on the rendered UI for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.EnableRenderCache">
            <summary>
            Gets or sets a value indicating whether render cache is enabled for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>.
            </summary>
            <value><c>true</c> if render cache is enabled for instances of <see cref="T:Cuemon.Web.UI.XsltPage"/>; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.EnableUniqueControlIdParsing">
            <summary>
            Gets or sets a value indicating whether to parse controls for the securement of a unique ID.
            </summary>
            <value>
            	<c>true</c> to parse controls for the securement of a unique ID; otherwise, <c>false</c>.
            </value>
            <remarks>
            Because of M$ odd way of programming, the ID property is not always the value it is assigned(!).
            Furthermore, the ClientID is not always as one would expect (the same goes for UniqueID, which infact not always is unique - good job, M$).
            Therefor, if an exception is thrown, and you have done your job correctly, you can almost be sure that M$ has not!
            </remarks>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.AutoStyleSheetResolving">
            <summary>
            Gets or sets a value indicating whether to automatic resolve the XSLT stylesheet for later transformations using the pageName.extension.xslt pattern.
            </summary>
            <value>
            	<c>true</c> if automatic resolve the XSLT style sheet for later transformations using the pageName.extension.xslt pattern; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.IncludeServerVariablesOnSerialization">
            <summary>
            Gets or sets a value indicating whether to include server variables on serialization.
            </summary>
            <value>
            	<c>true</c> to include server variables on serialization; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.IsPostBack">
            <summary>
            Gets a value indicating whether the page is being loaded in response to a client post back, or if it is being loaded and accessed for the first time.
            </summary>
            <value></value>
            <returns><c>true</c> if the page is being loaded in response to a client post back; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.Localization">
            <summary>
            Gets the localization of this Page.
            </summary>
            <value>The localization of this Page.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.StyleSheet">
            <summary>
            Gets or sets the style sheet to be used in the transformation.
            </summary>
            <value>The style sheet to be used in the transformation.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.StyleSheetNavigable">
            <summary>
            Gets or sets the style sheet to be used in the transformation.
            </summary>
            <value>The style sheet to be used in the transformation.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.Parameters">
            <summary>
            Gets the parameters of the XsltPage.
            </summary>
            <value>The parameters of the XsltPage.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.Settings">
            <summary>
            Gets the XSLT features to support during execution of the XSLT style sheet.
            </summary>
            <value>The XSLT features to support during execution of the XSLT style sheet.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.UrlResolver">
            <summary>
            Gets external XML resources named by a Uniform Resource Identifier (URI).
            </summary>
            <value>The external XML resources named by a Uniform Resource Identifier (URI).</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.Name">
            <summary>
            Gets the name of the current page relative to the root of the website, eg. /Member/login.aspx.
            </summary>
            <value>The name of the current page relative to the root of the website.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.Master">
            <summary>
            Gets the master page that determines the overall look of the page.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Web.UI.MasterPage"></see> associated with this page if it exists; otherwise null. </returns>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.Website">
            <summary>
            Gets or sets a reference to the <see cref="T:Cuemon.Web.Website"/> object.
            </summary>
            <value>The <see cref="T:Cuemon.Web.Website"/> object.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.LastModified">
            <summary>
            Gets or sets a <see cref="T:System.DateTime"/> value from when the content of a page was last modified, expressed as the Coordinated Universal Time (UTC).
            The default value is either from when the associated XSL stylesheet was last modified or the page itself.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.DateTime"/> value from when the content of a page was last modified, expressed as the Coordinated Universal Time (UTC).</returns>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.ChangeFrequency">
            <summary>
            Gets or sets a hint on how frequently the content of the page is likely to change.
            </summary>
            <value>A hint on how frequently the content of the page is likely to change.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.CrawlerPriority">
            <summary>
            Gets or sets the relative search engine priority of a page, where 0.0 is the lowest priority and 1.0 is the highest.
            The default value is 0.7.
            </summary>
            <value>The relative search engine priority of a page, where 0.0 is the lowest priority and 1.0 is the highest.</value>
        </member>
        <member name="P:Cuemon.Web.UI.XsltPage.SnapshotOfXmlForDebugging">
            <summary>
            Gets or sets the XML snapshot for debugging.
            </summary>
            <value>The XML snapshot for debugging.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteBinding">
            <summary>
            Represents the binding information for a <see cref="T:Cuemon.Web.Website"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteBinding"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteBinding.#ctor(Cuemon.Web.Configuration.WebsiteBindingElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteBinding"/> class.
            </summary>
            <param name="bindingElement">A valid Binding configuration element.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteBinding.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteBinding"/> class.
            </summary>
            <param name="protocolType">The protocol type (http/https) for this binding.</param>
            <param name="hostHeader">The host header information for this binding.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteBinding.ProtocolType">
            <summary>
            Gets the protocol type of this binding.
            </summary>
            <value>The protocol type of this binding.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteBinding.HostHeader">
            <summary>
            Gets the host header of this binding.
            </summary>
            <value>The host header of this binding.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteBindingCollection">
            <summary>
            Represent a binding collection for a given Website and its affiliated ASP.NET application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteBindingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteBindingCollection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteBindingCollection.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteBindingCollection"/> class.
            </summary>
            <param name="website">An instance of the Website class.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteBindingCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteBindingCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Cuemon.Web.WebsiteBindingCollection.Count">
            <summary>
            Gets the number of elements contained in this object.
            </summary>
            <value>The number of elements contained in this object.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteBindingCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteBinding"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Cuemon.Web.WebsiteBindingCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteBinding"/> with the specified host header.
            </summary>
            <value></value>
        </member>
        <member name="T:Cuemon.Web.WebsiteGlobalization">
            <summary>
            Represents the globalization settings for the Website.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalization"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalization.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalization"/> class.
            </summary>
            <param name="website">The <see cref="P:Cuemon.Web.WebsiteGlobalization.Website"/> of this object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalization.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalization.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.CurrentCultureInfo">
            <summary>
            Gets the current <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> as exposed to the client client connected.
            </summary>
            <value>The current <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> as exposed to the client connected.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.CurrentTimeZone">
            <summary>
            Gets the current <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZone"/> as exposed to the client connected.
            </summary>
            <value>The current <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZone"/> as exposed to the client connected.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.CultureInfos">
            <summary>
            Gets the supported culture infos for this Website.
            </summary>
            <value>The supported culture infos for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.TimeZones">
            <summary>
            Gets the time zone infos found in this Windows edition.
            </summary>
            <value>The time zone infos found in this Windows edition.</value>
            <todo>Implement timeZoneInfos as a resource for the case where they are not located on the hosting OS.</todo>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.DefaultCultureInfo">
            <summary>
            Gets the default culture for this Website.
            </summary>
            <value>The default culture for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.DefaultTimeZone">
            <summary>
            Gets the default timezone for this Website.
            </summary>
            <value>The default timezone for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.DefaultEncodingName">
            <summary>
            Gets the default encoding name for this Website.
            </summary>
            <value>The default encoding name for this Website.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalization.DefaultPhraseStyleSheetFile">
            <summary>
            Gets the default phrase XSLT file.
            </summary>
            <value>The default phrase XSLT file.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteGlobalizationCultureInfo">
            <summary>
            Provides information about a specific culture, such as the names of the culture, the writing system, the calendar used, and how to format dates and sort strings.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.#ctor(Cuemon.Web.WebsiteGlobalization,Cuemon.Web.Configuration.WebsiteGlobalizationCultureInfoElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> class.
            </summary>
            <param name="globalization">The globalization settings for a Website.</param>
            <param name="cultureInfoElement">A valid CultureInfo configuration element.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfo.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfo.LCID">
            <summary>
            Gets the culture identifier for the current <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/>.
            </summary>
            <value>The culture identifier for the current <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/>.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfo.EncodingName">
            <summary>
            Gets the encoding name to use for this CultureInfo.
            </summary>
            <value>The encoding name to use for this CultureInfo. If no encoding name is specified, the default encoding name value from <see cref="T:Cuemon.Web.WebsiteGlobalization"/> will be used.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfo.PhraseFile">
            <summary>
            Gets the phrase XML <see cref="T:Cuemon.IO.XmlFile"/> for this CultureInfo.
            </summary>
            <value>The phrase XML <see cref="T:Cuemon.IO.XmlFile"/> for this CultureInfo.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfo.PhraseStyleSheetFile">
            <summary>
            Gets the phrase XSL stylesheet <see cref="T:Cuemon.IO.XmlFile"/> to use for this CultureInfo.
            </summary>
            <value>The dphrase XSL stylesheet <see cref="T:Cuemon.IO.XmlFile"/> to use for this CultureInfo.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfo.SiteMapFile">
            <summary>
            Gets the sitemap XML <see cref="T:Cuemon.IO.XmlFile"/> for this CultureInfo.
            </summary>
            <value>The sitemap XML <see cref="T:Cuemon.IO.XmlFile"/> for this CultureInfo.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfo.TimeZone">
            <summary>
            Gets the time zone to use for this CultureInfo. 
            If no time zone exists for this CultureInfo, the default time zone will be used.
            </summary>
            <value>The time zone to use for this CultureInfo.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection">
            <summary>
            Represent a culture info collection for a given Website and its affiliated ASP.NET application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.#ctor(Cuemon.Web.WebsiteGlobalization)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection"/> class.
            </summary>
            <param name="globalization">An instance of the <see cref="T:Cuemon.Web.WebsiteGlobalization"/> class.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.Count">
            <summary>
            Gets the number of elements contained in this object.
            </summary>
            <value>The number of elements contained in this object.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Cuemon.Web.WebsiteGlobalizationCultureInfoCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> from the specified LCID.
            </summary>
            <value></value>
        </member>
        <member name="T:Cuemon.Web.WebsiteModule">
            <summary>
            Initializes the necessary values for your ASP.NET application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteModule"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.OnBeginRequest(System.Web.HttpApplication)">
            <summary>
            Handles the BeginRequest event of the HttpApplication control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.OnAuthorizeRequest(System.Web.HttpApplication)">
            <summary>
            Handles the AuthorizeRequest event of the HttpApplication control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.OnPreRequestHandlerExecute(System.Web.HttpApplication)">
            <summary>
            Handles the PreRequestHandlerExecute event of the HttpApplication control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.OnSendRequestContent(System.Web.HttpApplication)">
            <summary>
            Provides access to the SendRequestContent event of the <see cref="T:Cuemon.Web.GlobalModule"/> class.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is invoked just before ASP.NET sends content to the client but after the processing of <see cref="M:Cuemon.Web.GlobalModule.OnPreSendRequestContent(System.Web.HttpApplication)"/>.</remarks>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.OnError(System.Web.HttpApplication,System.Exception)">
            <summary>
            Handles the Error event of the HttpApplication control.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="lastException">The last captured exception.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.OnApplicationStart(System.Web.HttpApplication)">
            <summary>
            Initializes the special values for a Cuemon application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleCompression(System.Web.HttpApplication,System.String[])">
            <summary>
            Handles the compression of the <see cref="P:System.Web.HttpResponse.OutputStream"/>.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>Two things are done in this method; first we check if Cuemon/Web/Community/Websites/add/@enableCompression is true and handle only the speficied Compression/@fileExtensions.</remarks>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleDynamicContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan,System.Web.HttpCacheability)">
            <summary>
            Handles the expires headers of dynamic content - as in where an associated <see cref="P:System.Web.HttpContext.Handler"/> has been assigned (such as aspx, ashx, asmx and so forth).
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <remarks>Two things are done in this method; first we check if Cuemon/Web/Community/Websites/add/@enableClientSideCaching is true and resolves the expires interval from Caching/ExpiresHeaders/add[@expires and @unit] where @fileExtensions matches the current executing handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleStaticContentExpiresHeaders(System.Web.HttpApplication,System.TimeSpan,System.Web.HttpCacheability)">
            <summary>
            Handles the expires headers of static content.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <param name="expiresInterval">The interval added to <see cref="P:System.DateTime.UtcNow"/> for a calculated HTTP Expires header.</param>
            <param name="cacheability">Sets the <b>Cache-Control</b> header to one of the values of <see cref="T:System.Web.HttpCacheability"/>.</param>
            <remarks>Two things are done in this method; first we check if Cuemon/Web/Community/Websites/add/@enableClientSideCaching is true and resolves the expires interval from Caching/ExpiresHeaders/add[@expires and @unit] where @fileExtensions matches the current executing handler.</remarks>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.WriteRobotsExclusionProtocol(System.Web.HttpApplication)">
            <summary>
            Writes the robots exclusion protocol dynamically from a specified ruleset.
            </summary>
            <param name="application">An instance of the <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleSecurity(System.Web.HttpApplication)">
            <summary>
            Handles the security layer of the <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <param name="application">An instance of the <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleMaintenance(System.Web.HttpApplication)">
            <summary>
            Handles the maintenance layer of the <see cref="T:Cuemon.Web.Website"/>.
            </summary>
            <param name="application">An instance of the <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleCultureInfo(System.Web.HttpApplication)">
            <summary>
            Handles the culture info layer of the <see cref="P:Cuemon.Web.WebsiteModule.Website"/>.
            </summary>
            <param name="application">An instance of the <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleTimeZone(System.Web.HttpApplication)">
            <summary>
            Handles the timezone layer of the <see cref="P:Cuemon.Web.WebsiteModule.Website"/>.
            </summary>
            <param name="application">An instance of the <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleSiteMapProtocol(System.Web.HttpApplication)">
            <summary>
            Handles a dynamic sitemap.xml in the root of your web-application, using the SEO friendly sitemaps.org protocol (http://www.sitemaps.org/protocol.php).
            </summary>
            <param name="application">An instance of the <see cref="T:System.Web.HttpApplication"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.HandleUrlRouting(System.Web.HttpApplication)">
            <summary>
            Handles the URL routing of this module.
            </summary>
            <param name="context">The context of the ASP.NET application.</param>
            <remarks>This method is called just after any custom implementation of <see cref="M:Cuemon.Web.GlobalModule.OnPostResolveRequestCache(System.Web.HttpApplication)"/>.</remarks>
        </member>
        <member name="M:Cuemon.Web.WebsiteModule.InitSiteMapRouting">
            <summary>
            Initializes and handles the <see cref="T:Cuemon.Web.WebsiteSiteMap"/> URL rewriter, meaning that if a SEO friendly name has been specified, this is resolved to the actual page.
            </summary>
            <remarks>This method has replaced the new removed <b>HandleSiteMapUrlRewriter</b> and now uses the new <see cref="T:Cuemon.Web.Routing.HttpRouteTable"/> implementation.</remarks>
        </member>
        <member name="P:Cuemon.Web.WebsiteModule.Website">
            <summary>
            Gets or sets an instance of the <see cref="T:Cuemon.Web.Website"/> object for this ASP.NET application.
            </summary>
            <value>The instance of the <see cref="T:Cuemon.Web.Website"/> object for this ASP.NET application.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteUtility">
            <summary>
            This utility class is designed to make some <see cref="T:Cuemon.Web.Website"/> dependant operations easier to work with, as well as initializing the core values from the <see cref="T:Cuemon.Web.WebsiteModule"/> class.
            </summary>
            <remarks>
            On all application/session related operations, we had to add a check for NULL values, because if the IIS has just started up
            and we are making calls from an object implementing the IHttpModule interface, the aforementioned might actually be NULL.
            This is occurring even if hooking up on some of the later events in the state cycle.
            </remarks>
        </member>
        <member name="F:Cuemon.Web.WebsiteUtility.CuemonDebugViewKey">
            <summary>
            Get the key for the special debug view in a Cuemon enabled website.
            </summary>
        </member>
        <member name="F:Cuemon.Web.WebsiteUtility.CuemonSessionName">
            <summary>
            Get the name of the special Cuemon Session which was optimized for performance.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteUtility.IsCurrentRequestPipelineValidForProcessing">
            <summary>
            Determines whether the current request pipeline is valid for application processing.
            </summary>
            <returns>
            	<c>true</c> if the current request pipeline is valid for application processing; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteUtility.RemoveUserLanguageWeightInformation(System.String[])">
            <summary>
            Converts the user language format (which is "&lt;Language&gt;;&lt;q=&lt;weight&gt;&gt;" (e.g., "en-us;q=0.5") to culture info format (without the weight information).
            </summary>
            <param name="userLanguages">The user languages to convert.</param>
            <returns>A string array with <see cref="T:System.Globalization.CultureInfo"/> compatible values.</returns>
        </member>
        <member name="F:Cuemon.Web.WebsiteUtility.SessionCultureInfoKey">
            <summary>
            Specifies the Session key for a CultureInfo.
            </summary>
        </member>
        <member name="F:Cuemon.Web.WebsiteUtility.ApplicationCultureInfoKey">
            <summary>
            Specifies the Application key for a CultureInfo.
            </summary>
        </member>
        <member name="F:Cuemon.Web.WebsiteUtility.SessionTimeZoneKey">
            <summary>
            Specifies the Session key for a TimeZone.
            </summary>
        </member>
        <member name="F:Cuemon.Web.WebsiteUtility.ApplicationTimeZoneKey">
            <summary>
            Specifies the Application key for TimeZone.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteUtility.IsCurrentRequestRefresh(System.Web.HttpRequest,System.Web.SessionState.IHttpSessionState)">
            <summary>
            This method will help determine if the current client is using the refresh option.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="session">An instance of the <see cref="T:System.Web.SessionState.HttpSessionState"/> object.</param>
            <returns><c>true</c> if the current request seems to be a refresh of the webpage; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteUtility.IsCurrentRequestRefresh(System.Web.HttpRequest,System.Web.SessionState.IHttpSessionState,System.TimeSpan)">
            <summary>
            This method will help determine if the current client is using the refresh option.
            </summary>
            <param name="request">An instance of the <see cref="T:System.Web.HttpRequest"/> object.</param>
            <param name="session">An instance of the <see cref="T:System.Web.SessionState.HttpSessionState"/> object.</param>
            <param name="maxElapsedTime">The maximum elapsed time used in the determination of an assumed refresh of an webpage. Default is 5 seconds.</param>
            <returns><c>true</c> if the current request seems to be a refresh of the webpage; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Cuemon.Web.WebsiteUtility.TimeZoneApplication">
            <summary>
            Gets or sets the TimeZone identifier for the Application context.
            </summary>
            <value>The TimeZone identifier for the Application context.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteUtility.CultureInfoApplication">
            <summary>
            Gets or sets the CultureInfo identifier for the Application context.
            </summary>
            <value>The CultureInfo identifier for the Application context.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteUtility.TimezoneBySurrogateSession">
            <summary>
            Gets or sets the TimeZone identifier for the current Cuemon Session.
            </summary>
            <value>The TimeZone identifier for the current Session.</value>
            <remarks>This is a special implementation that bypasses the normal session handling by Microsoft, as this is very slow in a HttpModule.</remarks>
        </member>
        <member name="P:Cuemon.Web.WebsiteUtility.CultureInfoBySurrogateSession">
            <summary>
            Gets or sets the CultureInfo identifier for the current Cuemon Session,.
            </summary>
            <value>The CultureInfo identifier for the current Cuemon Session.</value>
            <remarks>This is a special implementation that bypasses the normal session handling by Microsoft, as this is very slow in a HttpModule.</remarks>
        </member>
        <member name="P:Cuemon.Web.WebsiteUtility.FastSession">
            <summary>
            Gets the fast lightweight (and experimental) Cuemon Session for the current HTTP request.
            </summary>
            <value>The fast lightweight (and experimental) Cuemon Session for the current HTTP request.</value>
            <remarks>Because of the ligthweight implementation, this property can be null in some cases.</remarks>
        </member>
        <member name="T:Cuemon.Web.WebsiteSiteMap">
            <summary>
            Represents the sitemap information for a <see cref="T:Cuemon.Web.Website"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSiteMap"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMap.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSiteMap"/> class.
            </summary>
            <param name="website">An instance of the <see cref="T:Cuemon.Web.Website"/> object.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMap.GetSiteMapFileCore(System.Int32)">
            <summary>
            Infrastructure. Gets an <see cref="T:System.Xml.XPath.IXPathNavigable"/> object holding the website sitemap file.
            </summary>
            <param name="lcid">The LCID to fetch a valid sitemap file from.</param>
            <returns>An <see cref="T:System.Xml.XPath.IXPathNavigable"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMap.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMap.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMap.CreateNavigator">
            <summary>
            Returns a new <see cref="T:System.Xml.XPath.XPathNavigator"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Xml.XPath.XPathNavigator"/> object.
            </returns>
        </member>
        <member name="P:Cuemon.Web.WebsiteSiteMap.CurrentCultureInfo">
            <summary>
            Gets the current <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> of the client connected.
            </summary>
            <value>The current <see cref="T:Cuemon.Web.WebsiteGlobalizationCultureInfo"/> of the client connected.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteThemeCollection">
            <summary>
            Represent a theme collection for a given Website and its affiliated ASP.NET application.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteThemeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteThemeCollection"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteThemeCollection.#ctor(Cuemon.Web.Website)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteThemeCollection"/> class.
            </summary>
            <param name="website">An instance of the <see cref="T:Cuemon.Web.Website"/> class.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteThemeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteThemeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteThemeCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteThemeCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteThemeCollection.Count">
            <summary>
            Gets the number of elements contained in this object.
            </summary>
            <value>The number of elements contained in this object.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteThemeCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteTheme"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Cuemon.Web.WebsiteThemeCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Cuemon.Web.WebsiteTheme"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Cuemon.Web.WebsiteThemeCollection.DefaultTheme">
            <summary>
            Gets the default theme for this website.
            </summary>
            <value>The default theme for this website.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteTheme">
            <summary>
            Represents the theme information for a <see cref="T:Cuemon.Web.Website"/>.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteTheme.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteTheme"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteTheme.#ctor(Cuemon.Web.Configuration.WebsiteThemeElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteTheme"/> class.
            </summary>
            <param name="themeElement">A valid theme configuration element.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteTheme.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteTheme.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:Cuemon.Web.WebsiteTheme.Name">
            <summary>
            Gets the name of the theme.
            </summary>
            <value>The name of the theme.</value>
        </member>
        <member name="P:Cuemon.Web.WebsiteTheme.Url">
            <summary>
            Gets the URL of the theme.
            </summary>
            <value>The URL of the theme.</value>
        </member>
        <member name="T:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1">
            <summary>
            Represents a dictionary of all available time zone representations found in registry (SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zones) with XML support.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.#ctor(Cuemon.Web.WebsiteGlobalization)">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1"/> class.
            </summary>
            <param name="globalization">An instance of the <see cref="T:Cuemon.Web.WebsiteGlobalization"/> class.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <returns>A <b><see cref="T:System.IO.Stream"/></b> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml(System.Boolean)">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream represenation of the current object using UTF-16 for the encoding with the little endian byte order.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c>. The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>A <see cref="T:System.IO.Stream"/> containing the serialized XML document.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml(System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity,System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml(System.Text.Encoding)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml(System.Text.Encoding,System.Boolean)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToXml(System.Text.Encoding,System.Boolean,Cuemon.Xml.Serialization.XmlQualifiedEntity)">
            <summary>
            Creates and returns a XML stream represenation of the current object.
            </summary>
            <param name="encoding">The text encoding to use.</param>
            <param name="omitXmlDeclaration">if set to <c>true</c> omit the XML declaration; otherwise <c>false</c> The default is false.</param>
            <param name="qualifiedRootEntity">A <see cref="T:Cuemon.Xml.Serialization.XmlQualifiedEntity"/> that overrides and represents the fully qualified name of the XML root element.</param>
            <returns>
            A <see cref="T:System.IO.Stream"/> containing the serialized XML document.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToString(System.IO.Stream)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <returns>A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.</returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToString(System.IO.Stream,Cuemon.PreambleSequence)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using UTF-16 for the encoding with the option to keep the little endian byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ToString(System.IO.Stream,Cuemon.PreambleSequence,System.Text.Encoding)">
            <summary>
            Reads and decodes the specified <see cref="T:System.IO.Stream"/> object to its equivalent <see cref="T:System.String"/> representation using the the preferred encoding with the option to keep or remove any byte order (preamble sequence).
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to to read and decode its equivalent <see cref="T:System.String"/> representation for.</param>
            <param name="sequence">Specifies whether too keep or remove any preamble sequence from the decoded content.</param>
            <param name="encoding">The preferred encoding to use.</param>
            <returns>
            A <see cref="T:System.String"/> containing the decoded content of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ComputeHash(System.IO.Stream)">
            <summary>
            Computes a MD5 hash value of the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to compute a MD5 hash code for.</param>
            <returns>
            A <see cref="T:System.String"/> containing the computed MD5 hash value of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteGlobalizationTimeZoneDictionary`1.ComputeHash(System.IO.Stream,Cuemon.Security.Cryptography.HashAlgorithmType)">
            <summary>
            Computes a by parameter defined <see cref="T:Cuemon.Security.Cryptography.HashAlgorithmType"/> hash value of the specified <see cref="T:System.IO.Stream"/> object.
            </summary>
            <param name="value">The <see cref="T:System.IO.Stream"/> object to compute a hash code for.</param>
            <param name="algorithmType">The hash algorithm to use for the computation.</param>
            <returns>
            A <see cref="T:System.String"/> containing the computed hash value of the specified <see cref="T:System.IO.Stream"/> object.
            </returns>
        </member>
        <member name="T:Cuemon.Web.WebsiteSiteMapProvider">
            <summary>
            The WebsiteSiteMapProvider class is derived from the SiteMapProvider class and is the default site map provider for Cuemon ASP.NET applications.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMapProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cuemon.Web.WebsiteSiteMapProvider"/> class.
            </summary>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMapProvider.FindSiteMapNode(System.String)">
            <summary>
            When overridden in a derived class, retrieves a <see cref="T:System.Web.SiteMapNode"/> object that represents the page at the specified URL.
            </summary>
            <param name="rawUrl">A URL that identifies the page for which to retrieve a <see cref="T:System.Web.SiteMapNode"/>.</param>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"/> that represents the page identified by <paramref name="rawUrl"/>; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"/> is found or if security trimming is enabled and the <see cref="T:System.Web.SiteMapNode"/> cannot be returned for the current user.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the child nodes of a specific <see cref="T:System.Web.SiteMapNode"/>.
            </summary>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"/> for which to retrieve all child nodes.</param>
            <returns>
            A read-only <see cref="T:System.Web.SiteMapNodeCollection"/> that contains the immediate child nodes of the specified <see cref="T:System.Web.SiteMapNode"/>; otherwise, null or an empty collection, if no child nodes exist.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMapProvider.GetParentNode(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the parent node of a specific <see cref="T:System.Web.SiteMapNode"/> object.
            </summary>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"/> for which to retrieve the parent node.</param>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"/> that represents the parent of <paramref name="node"/>; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"/> has no parent or security trimming is enabled and the parent node is not accessible to the current user.<see cref="M:System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)"/> might also return null if the parent node belongs to a different provider. In this case, use the <see cref="P:System.Web.SiteMapNode.ParentNode"/> property of <paramref name="node"/> instead.
            </returns>
        </member>
        <member name="M:Cuemon.Web.WebsiteSiteMapProvider.GetRootNodeCore">
            <summary>
            When overridden in a derived class, retrieves the root node of all the nodes that are currently managed by the current provider.
            </summary>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"/> that represents the root node of the set of nodes that the current provider manages.
            </returns>
        </member>
        <member name="P:Cuemon.Web.WebsiteSiteMapProvider.CurrentNode">
            <summary>
            Gets the <see cref="T:System.Web.SiteMapNode"/> object that represents the currently requested page.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Web.SiteMapNode"/> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"/> is not found or cannot be returned for the current user.</returns>
        </member>
    </members>
</doc>
